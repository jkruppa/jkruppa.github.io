# Daten bearbeiten {#sec-dplyr}

```{r}
#| warning: false
#| echo: false

pacman::p_load(tidyverse, readxl, knitr, kableExtra)
data_tbl <- read_excel("data/flea_dog_cat.xlsx")

```

Im folgenden wollen wir den Datensatz `data_tbl` in R bearbeiten. Das heist wir wollen Spalten auswählen mit `select()` oder Zeilen auswählen mit `filter()`. Schlussendlich wollen wir auch die Eigenschaften von Spalten mit der Funktion `mutate` ändern

### Spalten wählen mit `select()`

::: callout-tip
## YouTube - Spalten auswählen mit select()

Du findest auf YouTube [Einführung in R - Teil 12 - Spalten auswählen mit select()](https://youtu.be/oV_7A2nMIrM) als Video zum nochmal anschauen.
:::

[Hilfeseite für select()](https://dplyr.tidyverse.org/reference/select.html)

```{r}
data_tbl %>% 
  select(animal, jump_length, flea_count)
```

### Zeilen wählen mit `filter()`

::: callout-tip
## YouTube - Zeilen auswählen mit filter()

Du findest auf YouTube [Einführung in R - Teil 13 - Zeilen auswählen mit filter()](https://youtu.be/Pw_KnGWZjpM) als Video zum nochmal anschauen.
:::

[Hilfeseite für filter()](https://dplyr.tidyverse.org/reference/filter.html%3E)

```{r}
data_tbl %>% 
  filter(animal %in% c("dog"))
```

```{r}
data_tbl %>% 
  filter(flea_count > 15)
```

```{r}
data_tbl %>% 
  filter(infected == TRUE)
```

### Spalten ändern mit `mutate()`

::: callout-tip
## YouTube - Eigenschaften von Variablen ändern mit mutate()

Du findest auf YouTube [Einführung in R - Teil 14 - Eigenschaften von Variablen ändern mit mutate()](https://youtu.be/P6eum3wy9Ek) als Video zum nochmal anschauen.
:::

[Hilfeseite für mutate()](https://dplyr.tidyverse.org/reference/mutate.html)

```{r}
data_tbl %>% 
  mutate(animal = as_factor(animal))
```

```{r}
data_tbl %>% 
  mutate(long_jump = if_else(jump_length > 7, TRUE, FALSE)) %>% 
  select(animal, jump_length, long_jump)
```

::: callout-note
## Die Funktionen select(), filter() und mutate() in R

Bitte schaue dir auch die Hilfeseiten der Funktionen an. In diesem Skript kann ich nicht alle Funktionalitäten der Funktionen zeigen. Oder du kommst in das R Tutorium welches ich anbiete und fragst dort nach den Möglichkeiten Daten in R zu verändern.
:::

## Mehr Informationen durch `glimpse()` und `str()`

```{r}
glimpse(data_tbl)
str(data_tbl)
```

## Faktoren sortieren

```{r }
animal <- c("dog", "dog", "dog", "cat", "cat", "cat")

as.factor(animal)

factor(animal, levels = c("dog", "cat"))

factor(animal, labels = c("katze", "hund"))

as_factor(animal)


dose <- c("low", "low", "mid", "mid", "high", "high")

as.factor(dose)

factor(dose, levels = c("low", "mid", "high"))



```
