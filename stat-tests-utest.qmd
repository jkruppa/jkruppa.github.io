```{r echo = FALSE}
pacman::p_load(tidyverse, readxl, knitr, kableExtra, Hmisc)
```

# Der Wilcoxon-Mann-Whitney-Test

::: callout-note
## Was macht der Wilcoxon-Mann-Whitney-Test?

Der Wilcoxon-Mann-Whitney-Test vergleicht die Mediane zweier beliebiger Verteilungen miteinander.
:::

::: callout-tip
## Einführung in den Wilcoxon-Mann-Whitney-Test per Video

Du findest auf YouTube [Grundlagen in R](https://www.youtube.com/playlist?list=PLe51bCp9JvEFUnFqaJG5aRmON9i1ZbOYC) als Video Reihe. Ich werde zwar alles nochmal hier als Text aufschreiben, aber manchmal ist das Sehen und Hören dann einfacher.
:::

## Daten für den Wilcoxon-Mann-Whitney-Test

```{r}
#| echo: false
#| message: false
#| tbl-cap: Tabelle  der Sprunglängen [cm], Anzahl an Flöhen, Boniturnote sowie der Infektionsstatus von Hunden und Katzen.
#| label: tbl-data-ttest

data_tbl <- read_excel("data/flea_dog_cat.xlsx") %>% 
  select(animal, jump_length, grade) %>% 
  mutate(animal = as_factor(animal))

data_tbl %>% kable(align = "c", "pipe")
```

## Hypothesen für den Wilcoxon-Mann-Whitney-Test

Der Kruskal-Wallis-Test betrachtet die Mediane und Ränge um einen Unterschied nachzuweisen. Daher haben wir in der Nullhypothese als Gleichheitshypothese. In unserem Beispiel lautet die Nullhypothese, dass die Mediane jedes Levels des Faktors `animal` gleich sind.

```{=tex}
\begin{align*}
H_0: &\; \widetilde{y}_{cat} = \widetilde{y}_{dog}\\
\end{align*}
```
Die Alternative lautet, dass sich mindestens ein paarweiser Vergleich in den Medianen unterschiedet. Hierbei ist das *mindestens ein Vergleich* wichtig. Es können sich alle Mediane unterschieden oder eben nur ein Paar. Wenn ein Kruskal-Wallis-Test die $H_0$ ablehnt, also ein signifikantes Ergebnis liefert, dann wissen wir nicht, welche Mediane sich unterscheiden.

```{=tex}
\begin{align*}
H_A: &\; \widetilde{y}_{cat} \ne \widetilde{y}_{dog}\\
\end{align*}
```
Wir schauen uns jetzt einmal den Kruskal-Wallis-Test theoretisch an bevor wir uns mit der Anwendung des Kruskal-Wallis-Test in R beschäftigen.

## Wilcoxon-Mann-Whitney-Test theoretisch

| Rank | animal | jump_length  | Ränge "cat" | Ränge "dog" |
|:----:|:------:|:------------:|:-----------:|:-----------:|
|  1   |  cat   |     2.2      |      1      |             |
|  2   |  cat   |     3.2      |      2      |             |
|  3   |  cat   |     4.1      |      3      |             |
|  4   |  cat   |     4.3      |      4      |             |
|  5   |  cat   |     5.4      |      5      |             |
|  6   |  dog   |     5.6      |             |      6      |
|  7   |  dog   |     5.7      |             |      7      |
|  8   |  cat   |     6.1      |      8      |             |
|  9   |  dog   |     7.6      |             |      9      |
|  10  |  cat   |     7.9      |     10      |             |
|  11  |  dog   |     8.2      |             |     11      |
|  12  |  dog   |     8.9      |             |     12      |
|  13  |  dog   |     9.1      |             |     13      |
|  14  |  dog   |     11.8     |             |     14      |
|      |        |  Rangsummen  | $R_1 = 33$  | $R_2 = 72$  |
|      |        | Gruppengröße |      7      |      7      |

: test

$$
U_{calc} = n_1n_2 + \cfrac{n_1(n_1+1)}{2}-R_1
$$

mit

-   $R_1$ der *größeren* der beiden Rangsummen
-   $n_1$ die Fallzahl der *größeren* der beiden Rangsummen
-   $n_2$ die Fallzahl der *kleineren* der beiden Rangsummen

*Work in progress...*

https://www.methodenberatung.uzh.ch/de/datenanalyse_spss/unterschiede/zentral/mann.html

::: callout-important
## Entscheidung mit der berechneten Teststatistik $F_{\boldsymbol{calc}}$

Bei der Entscheidung mit der berechneten Teststatistik $H_{calc}$ gilt, wenn $H_{calc} \geq H_{\alpha = 5\%}$ wird die Nullhypothese (H$_0$) abgelehnt.

**Achtung --** Wir nutzen die Entscheidung mit der Teststatistik *nur und ausschließlich* in der Klausur. In der praktischen Anwendung hat die Betrachtung der berechneten Teststatistik *keine* Verwendung mehr.
:::

## Wilcoxon-Mann-Whitney-Test in R

https://bjoernwalther.com/mann-whitney-u-test-wilcoxon-test-in-r-rechnen/

```{r}
wilcox.test(jump_length ~ animal, data = data_tbl)
```

## Minmale Fallzahl je Gruppe

```{r}
small_tbl <- tibble(dog = c(1.2, 5.6, 3.2),
                    cat = c(100.3, 111.2, 98.5)) %>% 
  gather(key = animal, value = jump_length)

ggplot(small_tbl, aes(x = animal, y = jump_length)) +
  geom_boxplot()

wilcox.test(jump_length ~ animal, data = small_tbl)
```
