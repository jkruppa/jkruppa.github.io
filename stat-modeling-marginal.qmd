```{r echo = FALSE}
#| message: false
#| warning: false
pacman::p_load(tidyverse, readxl, knitr, kableExtra, performance, parameters,
               latex2exp, see, patchwork, mfp, multcomp, emmeans, janitor, effectsize,
               broom, ggmosaic, tinytable, ggrepel, tidyplots, glue, ggtext,
               conflicted)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::filter)
cb_pal <- c("#000000", "#E69F00", "#56B4E9", 
            "#009E73", "#F0E442", "#F5C710", 
            "#0072B2", "#D55E00", "#CC79A7")
cbbPalette <- cb_pal
theme_marginal <- function() {
  theme_minimal() +
    theme(panel.grid.minor = element_blank(),
          plot.background = element_rect(fill = "white", color = NA),
          plot.title = element_text(size = 16, face = "bold"),
          plot.subtitle = element_text(size = 12, face = "italic"),
          plot.caption = element_text(face = "italic"),
          axis.title = element_text(face = "bold"),
          axis.text = element_text(size = 12),
          strip.text = element_text(face = "bold"),
          strip.background = element_rect(fill = "grey80", color = NA))
}
set.seed(20250703)
modell_square_tbl <- tibble(x = rnorm(20, 5, 5),
                          y = 1.5 + 0.75 * -x^2 + rnorm(length(x), 0, 5))
modell_line_tbl <- tibble(x = rnorm(20, 2, 1),
                            y = 1.5 + 0.75 * x + rnorm(length(x), 0, 0.5))
```

```{r}
#| echo: false
#| message: false
#| warning: false
source("images/R/stat-modeling-marginal.R")
```

# Marginal effect models {#sec-marginal}

*Letzte Änderung am `r format(fs::file_info("stat-modeling-marginal.qmd")$modification_time, '%d. %B %Y um %H:%M:%S')`*

> *"Life is difficult." --- Morgan Scott Peck, The Road Less Traveled*

![](images/caution.png){fig-align="center" width="100%"}

::: {.callout-caution appearance="simple"}
## Stand des Kapitels: Konstruktion (seit 07.2025)

Dieses Kapitel wird in den nächsten Wochen geschrieben und ist damit meine aktuelle Großbaustelle. Ich plane zum Beginn des WiSe 2025/26 eine fertige Version des Kapitels erstellt zu haben. Während das Kapitel entsteht, funktioniert so manches dann nicht so wie es soll. Bitte daher hier dann abwarten.
:::

Lange habe ich gebraucht um mich dazu durchzuringen das Kapitel zu den *Marginal effect models* (deu. *marginale Effektmodelle*, ungebräuchlich) zu schreiben. Ich werde hier bei dem englischen Begriff bleiben, den deutschen Begriff habe ich eher selten gehört und daher sind es für mich *Marginal effect models*. Insbesondere da der Begriff "marginal" auch sehr an gering oder minderwertig erinnert. Damit haben aber die *Marginal effect models* nicht im geringsten zu tun. Die Modelle sind sehr mächtig und können uns helfen wichtige Fragen an unsere Daten zu beantworten. Insbesondere die Dualität der beiden Pakete `{emmeans}` für experimentelle Daten und `{marginaleffects}` für beobachtete Daten ist spannend und möchte ich hier nochmal genauer betrachten. Neben diesen beiden Ecksteinen gibt es noch andere Pakete und ich werde auch hier einmal in die Pakete reinschauen. Anfangen kann ich aber nicht ohne @heiss2022 mit seinem Blogpost [Marginalia: A guide to figuring out what the heck marginal effects, marginal slopes, average marginal effects, marginal effects at the mean, and all these other marginal things are](https://www.andrewheiss.com/blog/2022/05/20/marginalia/) zu erwähnen. Vieles entlehnt sich direkt oder indirekt an seine Ausführungen. Wie immer habe ich etwas angepasst, wenn ich der Meinung war, dass es noch besser zu verstehen ist. Fangen wir also an *Marginal effect models* zu zerforschen.

## Allgemeiner Hintergrund

> *"Statistics is all about lines, and lines have slopes, or derivatives. These slopes represent the marginal changes in an outcome. As you move an independent/explanatory variable, what happens to the dependent/outcome variable?" --- @heiss2022*

Wenn wir mit dem Verstehen und Zerforschen vorankommen wollen, dann können wir @heiss2022 und @heiss2024 mit der Veröffentlichung [Model to meaning --- How to Interpret Statistical Models With marginaleffects for R and Python](https://marginaleffects.com/) nicht ignorieren. Ich nutze jetzt eine etwas allgemeinere Erklärung der *Marginal effect models* und konzentriere mich erstmal auf ein normalverteiltes $x$ sowie ein normalverteiltes $y$. Daher haben wir hier in unserem $x$ keine Gruppen vorliegen sondern einen klassischen Scatterplot mit Punkten als Beobachtungen. Wir können die *Marginal effect models* auch auf beliebige kategorielle $x$ wie eben Behandlungsgruppen sowie jedes beliebige $y$ anwenden, aber hier fangen wir einmal einfach an.

Die zentrale Frage, die wir beantworten wollen:

:   Wenn sich das $x$ um einen Wert oder eine Einheit erhöht, um wieviele Einheiten verändert sich dann der Wert von $y$?

In der folgenden Abbildung siehst du einmal zwei Scatterplots. In dem linken Scatterplot haben wir einen linearen Zusammenhang zwischen unseren $x$-Werten und den $y$-Werten. Wir können sagen, dass wenn sich $x$ um einen Wert erhöht, dann erhöht sich auch $y$ um einen konstanten Wert. Dieser konstante Wert um den sich die $y$-Werte mit ansteigenden $x$ erhöhen, nennen wir auch die Steigung $\beta_1$. In einem linearen Zusammenhang ist die Frage damit mit der Steigung der Geraden eigentlich beantwortet. Steigt $x$ um einen Wert, dann steigt $y$ um den Wert der Steigung $\beta_1$ der Geraden. Diesen konstanten Zusammenhang haben wir aber nicht bei einem quadratischen Zusammenhang wie in der rechten Abbildung. Wir können hier nicht sagen, dass wenn sich $x$ um einen Wert erhöht, sich auch $y$ um einen konstanten Wert ändert. Hier hängt es von dem betrachteten $x$-Wert ab.

```{r}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center
#| fig-height: 3.5
#| fig-width: 7
#| fig-cap: "Scatterplot der kontinuierlichen x-Werte und kontinuierlichen y-Werte. In einem Modell wird die Abhängigkeit von y und x modellieren. **(A)** Linearer Zusammenhang. **(B)** Quadratischer Zusammenhang. *[Zum Vergrößern anklicken]*"
#| label: fig-marginal-model-intro-00

p1_intro_00 + p2_intro_00 +
  plot_layout(ncol = 2) +
  plot_annotation(tag_levels = 'A', tag_prefix = '(', tag_suffix = ')') &
  theme(plot.tag = element_text(size = 16, face = "bold"))
```

Schauen wir mal in ein Zahlenbeispiel und lassen die Beobachtungen weg. Beginnen wir einmal mit dem linearen Zusammenhang der Funktion $f(x) = 2x-1$. Ich habe die Gerade einmal in der folgenden Abbildung eingezeichnet. Wenn usn jetzt die Steigung an jedem beliebigen Punkt von $x$ interessiert, dann bilden wir die erste Abbleitung $f'(x) = 2$. Erhöht sich also der Wert von $x$ um 1 dann steigt der Wert von $y$ um 2 an. Wir sehen aber auch, dass für jedes beliebige Punktepaar wir eine Steigung von 2 vorliegen haben.

```{r}
#| message: false
#| echo: false
#| fig-align: center
#| fig-height: 5
#| fig-width: 9.5
#| fig-cap: "Gerade des Modells für einen linearen Zusammenhang. In einem Modell wird die Abhängigkeit von y und x modellieren. **(A)** Lineares Modell mit Gleichung. **(B)** Steigung an der Geraden für ausgewählte Punktepaare. *[Zum Vergrößern anklicken]*"
#| label: fig-marginal-intro-01

p1_intro_01 + p2_intro_01 +
  plot_layout(ncol = 2) +
  plot_annotation(tag_levels = 'A', tag_prefix = '(', tag_suffix = ')') &
  theme(plot.tag = element_text(size = 16, face = "bold"))
```

Spanndender wird die Sachlage in einem quadratischen Zusammenhang in der folgenden Abbildung. Oder allgemeiner gesprochen, wenn wir keinen linearen Zusammenhang vorliegen haben. Wir haben hier den Zusammenhgang $f(x) = -0.5x^2+5x$ vorliegen. Damit haben wir dann eine erste Ableitung von $f'(x) = x+5$. Wie du siehst, ändert sich auch die Steigung in Abhänigkeit von $x$. Wenn wir $x$-Werte links betrachten, dann liegt hier eher eine positive Steigung vor. Wenn wir nach rechts laufen, dann sehen wir immer stärkere negative Steigungen. Und hier kommen dann die *Marginal effect models* ins Spiel. Wir können allgemein gesprochen uns mit den *Marginal effect models* für jedes $x$ die Steigung wiedergeben lassen.

```{r}
#| message: false
#| echo: false
#| fig-align: center
#| fig-height: 5
#| fig-width: 9.5
#| fig-cap: "Gerade des Modells für einen quadratischen Zusammenhang. In einem Modell wird die Abhängigkeit von y und x modellieren. **(A)** Quadratisches Modell mit Gleichung. **(B)** Steigung an der Geraden für ausgewählte Punktepaare. *[Zum Vergrößern anklicken]*"
#| label: fig-marginal-intro-04


p1_intro_02 + p2_intro_02 +
  plot_layout(ncol = 2) +
  plot_annotation(tag_levels = 'A', tag_prefix = '(', tag_suffix = ')') &
  theme(plot.tag = element_text(size = 16, face = "bold"))
```

Aber moment, denkst du jetzt, in dem linearen Zusammenhang ist es ja einfach. Wir erhalten für jeden $x$-Wert genau die gleiche Steigung. Aber bei den nicht-linearen Zusammenhängen hat ja jeder $x$-Wert seine eigene Steigung. Wenn wir viele $x$-Werte gemessen haben, dann haben wir ja dutzende bis hunderte Steigungen.

!["Should I cut the red wire or the blue one!?" "WAIT! We're going to watch ALL the action movies from the '80s and '90s and then calculate the average!" Quelle: wumo.com](images/average.jpg){#fig-pretest-barplot-02 fig-align="center" width="100%"}

Text

![foo. Übersetzt nach @heiss2022](images/marginal/slider-switch-annotated-trans.png){#fig-utest-intro-01 fig-align="center" width="100%"}

Text

![foo. Übersetzt nach @heiss2022](images/marginal/mixer-board-annotated-trans.png){#fig-utest-intro-02 fig-align="center" width="100%"}

Marginal effect

:   der statistische Effekt für kontinuierliche erklärende Variablen; die partielle Ableitung einer Variablen in einem Regressionsmodell; der Effekt eines einzelnen Schiebereglers.

Conditional effect oder Gruppenkontrast (eng. *group contrast*)

:   der statistische Effekt für kategoriale erklärende Variablen; der Unterschied in den Mittelwerten, wenn eine Bedingung eingeschaltet ist und wenn sie ausgeschaltet ist; der Effekt eines einzelnen Schalters.

#### Unterschied zwischen `{marginaleffects}` und `{emmeans}` {.unnumbered .unlisted}

Das [R Paket `{marginaleffects}`](https://marginaleffects.com/) und das R Paket [R Paket `{emmeans}`](https://cran.r-project.org/web/packages/emmeans/vignettes/basics.html#contents)

emmeans erstellt Durchschnittswerte und fügt sie dann ein; marginaleffects fügt alle Werte ein und erstellt dann Durchschnittswerte:

[Is least squares means (lsmeans) statistical nonsense?](https://cran.r-project.org/web/packages/emmeans/vignettes/basics.html#contents:~:text=found%20here%20and-,here,-.)

> *"To start off with, we should emphasize that the underpinnings of estimated marginal means – and much of what the emmeans package offers – relate more to experimental data than to observational data. In observational data, we sample from some population, and the goal of statistical analysis is to characterize that population in some way. In contrast, with experimental data, the experimenter controls the environment under which test runs are conducted, and in which responses are observed and recorded. Thus with experimentation, the population is an abstract entity consisting of potential outcomes of test runs made under conditions we enforce, rather than a physical entity that we observe without changing it." --- [R Paket `{emmeans}`](https://cran.r-project.org/web/packages/emmeans/vignettes/basics.html#contents)*

![foo. Entnommen von @heiss2022](images/marginal/marginal_emmeans.png){#fig-utest-intro-02 fig-align="center" width="100%"}

### Steigung (eng. *slopes*)

### Kontrafaktische Vergleiche (eng. *counterfactual*)

### Vorhersagen (eng. *predictions*)

### Hypothesen- und Äquivalenztests

## Theoretischer Hintergrund

::: callout-tip
## Weitere Tutorien für die Marginal effects models

Wir oben schon erwähnt, kann dieses Kapitel nicht alle Themen der Marginal effects models abarbeiten. Daher präsentiere ich hier eine Liste von Literatur und Links, die mich für dieses Kapitel hier inspiriert haben. Nicht alles habe ich genutzt, aber vielleicht ist für dich was dabei.

-   Ohne den Blogpost [Marginalia: A guide to figuring out what the heck marginal effects, marginal slopes, average marginal effects, marginal effects at the mean, and all these other marginal things are](https://www.andrewheiss.com/blog/2022/05/20/marginalia/) von @heiss2022 wäre dieses Kapitel nicht möglich gewesen.
:::

## Genutzte R Pakete

Wir wollen folgende R Pakete in diesem Kapitel nutzen.

```{r echo = TRUE}
#| message: false
#| warning: false
pacman::p_load(tidyverse, gtsummary, marginaleffects, emmeans, scales,
               conflicted)
conflicts_prefer(dplyr::mutate)
conflicts_prefer(dplyr::summarize)
conflicts_prefer(dplyr::filter)
cb_pal <- c("#000000", "#E69F00", "#56B4E9", 
            "#009E73", "#F0E442", "#F5C710", 
            "#0072B2", "#D55E00", "#CC79A7")
## 
nice_number <- label_number(style_negative = "minus", accuracy = 0.01)
nice_p <- label_pvalue(prefix = c("p < ", "p = ", "p > "))
find_intercept <- function(x1, y1, slope) {
  intercept <- slope * (-x1) + y1
  return(intercept)
}
```

An der Seite des Kapitels findest du den Link *Quellcode anzeigen*, über den du Zugang zum gesamten R-Code dieses Kapitels erhältst.

## Daten

```{r}
flea_model_tbl <- read_excel("data/fleas_model_data.xlsx") |> 
  mutate(feeding = as_factor(feeding),
         stage = as_factor(stage),
         bonitur = as.numeric(bonitur),
         infected = factor(infected, labels = c("healthy", "infected"))) |> 
  select(feeding, stage, jump_length, weight, hatched, count_leg,  bonitur, infected)
```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-fac1cov-table
#| tbl-cap: "Daten für die einfaktorielle MANOVA mit der Sprungweite in [cm] und dem Gewicht der Flöhe in [mg] für drei Floharten."

flea_model_raw_tbl <-  read_excel("data/fleas_model_data.xlsx") |> 
  mutate(bonitur = as.numeric(bonitur),
         infected = as.character(factor(infected, labels = c("healthy", "infected")))) |> 
  select(feeding, stage, jump_length, weight, count_leg, hatched, bonitur, infected) |> 
  mutate_if(is.numeric, round, 2)

rbind(head(flea_model_raw_tbl, n = 3),
      rep("...", times = ncol(flea_model_raw_tbl)),
      tail(flea_model_raw_tbl, n = 3)) |> 
  kable(align = "c", "pipe")
```

```{r}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center
#| fig-height: 5
#| fig-width: 10.5
#| fig-cap: "foo. **(A)** Kombinierte Darstellung in einem Scatterplot **(B)** Aufgeteilte Darstellung für beide Entwicklungsstadien. *[Zum Vergrößern anklicken]*"
#| label: fig-marginal-data-1

p1 <- ggplot(flea_model_tbl, aes(x = feeding, y = jump_length, fill = stage)) +
  theme_marginal() +
  geom_boxplot() +
  scale_fill_okabeito() +
  theme(legend.position = "top") +
  labs(x = "Ernährungsform", y = "Sprungweite in [cm]",
       fill = "") +
  scale_x_discrete(guide = guide_axis(n.dodge=2))

p2 <- ggplot(flea_model_tbl, aes(x = feeding, y = log(count_leg), fill = stage)) +
  theme_marginal() +
  geom_boxplot() +
  scale_fill_okabeito() +
  theme(legend.position = c(0.5, 1)) +
  labs(x = "Ernährungsform", y = "Anzahl Beinhaare [log]",
       fill = "") +
  scale_x_discrete(guide = guide_axis(n.dodge=2))

p3 <- ggplot(flea_model_tbl, aes(x = feeding, y = bonitur, fill = stage)) +
  theme_marginal() +
  geom_dotplot(binaxis = "y", stackdir = "center") +
  facet_wrap(~stage) +
  scale_fill_okabeito() +
  theme(legend.position = "none") +
  labs(x = "Ernährungsform", y = "Boniturnoten",
       fill = "") +
  scale_x_discrete(guide = guide_axis(n.dodge=2))

p1 + p2 + p3 +
  plot_layout(ncol = 3, widths = c(1.25, 1.25, 2.5)) +
  plot_annotation(tag_levels = 'A', tag_prefix = '(', tag_suffix = ')') &
  theme(plot.tag = element_text(size = 16, face = "bold"))

```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-infected-model-fleas
#| tbl-cap: "Deskriptive Statistik des Infektionsstatus (0 = nein / 1 = ja) mit Flohschnupfen aufgeteilt nach den Faktoren und anderen Variablen."

flea_model_tbl |>
  select(infected, feeding, stage) |> 
  tbl_summary(
    by = infected,
    statistic = list(
      all_continuous() ~ "{mean} ({sd})",
      all_categorical() ~ "{n} / {N} ({p}%)"
    ),
    digits = all_continuous() ~ 2,
    #label = count_color ~ "Anzahl Farben",
    missing_text = "(Missing)"
  )
```

## Referenzen {.unnumbered}
