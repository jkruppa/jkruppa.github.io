```{r echo = FALSE}
pacman::p_load(tidyverse, readxl, knitr, kableExtra, Hmisc)
```

# Pre-Tests oder Vortest

![](images/caution.png){fig-align="center" width="50%"}

::: column-margin
![](images/angel_01.png){fig-align="center" width="50%"}

Probleme mit dem Pre-Tests ist, dass die Fallzahl in unseren Daten $D$ oft **viel zu klein** ist um eine eindeutige Aussage zu treffen.
:::

@sec-lin-reg-quality

## Genutzte R Pakete für das Kapitel

Wir wollen folgende R Pakete in diesem Kapitel nutzen.

```{r echo = TRUE}
#| message: false
pacman::p_load(tidyverse, magrittr, conflicted,
               broom, car, performance, see)
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("mutate", "dplyr")
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", 
                "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
```

## Pre-Test auf Varianzhomogenität

$$
\begin{align*}
H_0: &\; s^2_A = s^2_B\\
H_A: &\; s^2_A \ne s^2_B\\
\end{align*}
$$

## Varianzen sind homogen, Fallzahl niedrig

```{r}
set.seed(202209013)
small_homo_tbl <- tibble(A = rnorm(10, 10, 5),
                         B = rnorm(10, 10, 5)) %>% 
  gather(trt, rsp) %>% 
  mutate(trt = as_factor(trt))
```

```{r}
#| message: false
#| echo: false
#| label: fig-vartest-1
#| fig-align: center
#| fig-height: 5
#| fig-width: 5
#| fig-cap: "Dotplot der Spungweite in [cm] in Abhängigkeit von dem Faktor `animal`."


ggplot(small_homo_tbl, aes(trt, rsp, fill = trt)) +
  theme_bw() +
  geom_boxplot() +
  scale_fill_okabeito() +
  theme(legend.position = "none")
```

```{r}
leveneTest(rsp ~ trt, data = small_homo_tbl) %>% tidy %>% select(p.value)

bartlett.test(rsp ~ trt, data = small_homo_tbl) %>% tidy %>% select(p.value)
```

```{r}
lm(rsp ~ trt, data = small_homo_tbl) %>% check_model(check = "homogeneity")

```

```{r}
lm(rsp ~ trt, data = small_homo_tbl) %>% check_homogeneity()

```

## Varianzen sind heterogen, Fallzahl niedrig

```{r}
set.seed(202209013)
small_hetero_tbl <- tibble(A = rnorm(10, 10, 10),
                           B = rnorm(10, 10, 5)) %>% 
  gather(trt, rsp) %>% 
  mutate(trt = as_factor(trt))
```

```{r}
#| message: false
#| echo: false
#| label: fig-vartest-2
#| fig-align: center
#| fig-height: 5
#| fig-width: 5
#| fig-cap: "Dotplot der Spungweite in [cm] in Abhängigkeit von dem Faktor `animal`."

ggplot(small_hetero_tbl, aes(trt, rsp, fill = trt)) +
  theme_bw() +
  geom_boxplot() +
  scale_fill_okabeito() +
  theme(legend.position = "none")
```

```{r}
leveneTest(rsp ~ trt, data = small_hetero_tbl) %>% tidy %>% select(p.value)

bartlett.test(rsp ~ trt, data = small_hetero_tbl) %>% tidy %>% select(p.value)
```

```{r}
lm(rsp ~ trt, data = small_hetero_tbl) %>% check_model(check = "homogeneity")

```

```{r}
lm(rsp ~ trt, data = small_hetero_tbl) %>% check_homogeneity()

```

## Pre-Test auf Normalverteilung

$$
\begin{align*}
H_0: &\; \mbox{y ist gleich normalverteilt}\\
H_A: &\; \mbox{y ist nicht gleich normalverteilt}\\
\end{align*}
$$

## Approximativ normalverteilt, niedrige Fallzahl

```{r}
set.seed(202209013)
high_normal_tbl <- tibble(A = rt(10, df = 30),
                          B = rt(10, df = 30)) %>% 
  gather(trt, rsp) %>% 
  mutate(trt = as_factor(trt))
```

```{r}
#| message: false
#| echo: false
#| label: fig-normal-1
#| fig-align: center
#| fig-height: 5
#| fig-width: 5
#| fig-cap: "Dotplot der Spungweite in [cm] in Abhängigkeit von dem Faktor `animal`."
#| fig-subcap: 
#|   - "Die Sprungweite in [cm] mit den Faktor `animal` gruppiert und das globale Mittel $\\bar{y}_{..} = 7.34$ ergänzt."
#|   - "Die Sprungweite in [cm] mit den Faktor `animal` gruppiert und die lokalen Mittel $\\bar{y}_{i.}$ für jedes Level ergänzt."
#| layout-nrow: 1
#| column: page

ggplot(high_normal_tbl, aes(trt, rsp, fill = trt)) +
  theme_bw() +
  geom_boxplot() +
  scale_fill_okabeito() +
  theme(legend.position = "none")

ggplot(high_normal_tbl, aes(rsp, fill = trt)) +
  theme_bw() +
  geom_density(alpha = 0.5) +
  scale_fill_okabeito() +
  theme(legend.position = "none")

```

```{r}

high_normal_tbl %>% 
  filter(trt == "A") %>% 
  pull(rsp) %>% 
  shapiro.test()
  
high_normal_tbl %>% 
  filter(trt == "B") %>% 
  pull(rsp) %>% 
  shapiro.test()

```

## Nicht normalverteilt, niedrige Fallzahl

```{r}
set.seed(202209013)
high_normal_tbl <- tibble(A = rexp(10, 1/1500),
                          B = rexp(10, 1/1500)) %>% 
  gather(trt, rsp) %>% 
  mutate(trt = as_factor(trt))
```

```{r}
#| message: false
#| echo: false
#| label: fig-normal-2
#| fig-align: center
#| fig-height: 5
#| fig-width: 5
#| fig-cap: "Dotplot der Spungweite in [cm] in Abhängigkeit von dem Faktor `animal`."
#| fig-subcap: 
#|   - "Die Sprungweite in [cm] mit den Faktor `animal` gruppiert und das globale Mittel $\\bar{y}_{..} = 7.34$ ergänzt."
#|   - "Die Sprungweite in [cm] mit den Faktor `animal` gruppiert und die lokalen Mittel $\\bar{y}_{i.}$ für jedes Level ergänzt."
#| layout-nrow: 1
#| column: page


ggplot(high_normal_tbl, aes(trt, rsp, fill = trt)) +
  theme_bw() +
  geom_boxplot() +
  scale_fill_okabeito() +
  theme(legend.position = "none")

ggplot(high_normal_tbl, aes(rsp, fill = trt)) +
  theme_bw() +
  geom_density(alpha = 0.5) +
  scale_fill_okabeito() +
  theme(legend.position = "none")

```

```{r}

high_normal_tbl %>% 
  filter(trt == "A") %>% 
  pull(rsp) %>% 
  shapiro.test()
  
high_normal_tbl %>% 
  filter(trt == "B") %>% 
  pull(rsp) %>% 
  shapiro.test()

```

Am Ende sei noch auf den [QQ-plot](#sec-linreg-qq) verwiesen.
