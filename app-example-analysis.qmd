```{r echo = FALSE}
pacman::p_load(tidyverse, readxl, knitr, kableExtra, openxlsx)
```

# Beispielhafte Auswertungen {#sec-beispiel-auswertung}

*Version vom `r format(Sys.time(), '%B %d, %Y um %H:%M:%S')`*

![](images/caution.png){fig-align="center" width="50%"}

::: callout-tip
## Beispielhafte Auswertungen per Video

Du findest auf YouTube in der Playlist [Spielweise in R (Level 3)](https://www.youtube.com/playlist?list=PLe51bCp9JvEFZeYClBKad6yurjUzc8jXp) viele der Analysen hier einmal als Video. Ich werde zwar alles nochmal hier als Text aufschreiben, aber manchmal ist das Sehen und Hören dann einfacher.
:::

Worum geht es in diesem Kapitel? Ich rechne hier fröhlich Dinge und präsentiere dann die Ergebnisse. Das heißt, du findest hier beispielhafte Auswertungen, die eventuell auch deine Problemstellung betreffen.

-   In @sec-app-example-iso schauen wir uns einmal die Erstellung eines Isoplethendiagramms für Münster & Osnabrück aus den frei verfügbaren Daten des Deutschen Wetterdienstes an.
-   In @sec-app-example-number-groups rechnen wir einmal ein simples Beispiel für Zähldaten in zwei Gruppen. Wir haben hier nicht wiederholt gezählt, sondern nur jeweils einmal an einer Stelle.
-   In @sec-app-example-anova-inter rechnen wir nochmal eine zweifaktorielle ANOVA mit Interaktionsterm durch. Wir kriegen dann unser *compact letter display* wie auch die Konfidenzintervalle wieder.
-   In @sec-mult-map-ght rechnen wir einen Games Howell Test für normalverteilte Daten mit Varianzheterogenität. Hier hauen wir ein wenig auf die Pauke und rechnen alles in wenigen Zeilen mit der Funktion `map()`. War eine spaßige Auswerung für mich, da ich hier mal wieder programmieren üben konnte.

Je weiter du nach unten in diesem Kapitel kommst, desto wilder wird der R Code. Ich werde noch eine Zeit brauchen, bis ich alles wieder schon mit Text hier verarbeitet habe. Es wird aber immer mal wieder etwas *messy* aussehen. Hier wird eben auch gearbeitet.

## Genutzte R Pakete für das Kapitel

Wir wollen folgende R Pakete in diesem Kapitel nutzen.

```{r echo = TRUE}
#| message: false
pacman::p_load(tidyverse, magrittr, readxl, 
               broom, multcomp, emmeans, effectsize, report,
               see, metR, parameters, multcompView,
               modelsummary, rstatix,
               conflicted)
## resolve some conflicts with same function naming
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
```

Am Ende des Kapitels findest du nochmal den gesamten R Code in einem Rutsch zum selber durchführen oder aber kopieren.

## Isoplethendiagramm für Münster & Osnabrück {#sec-app-example-iso}

{{< include app-example-analysis/app-example-analysis-01.qmd >}}

## Analyse von Anzahlen in zwei Gruppen {#sec-app-example-number-groups}

{{< include app-example-analysis/app-example-analysis-02.qmd >}}

## Auswertung zweifaktorielle ANOVA mit Interaktion {#sec-app-example-anova-inter}

{{< include app-example-analysis/app-example-analysis-03.qmd >}}

## Multiples Testen mit Games Howell Test {#sec-mult-map-ght}

{{< include app-example-analysis/app-example-analysis-04.qmd >}}

## Auswertung von Gewichten

```{r}
#| echo: false
data_tbl <- expand_grid(trt = 1:3, 
                        block = 1:3,
                        rep = 1:4) %>% 
  mutate(rsp = 10 + 2 * trt + block + rnorm(n(), 0, 2),
         trt = factor(trt, labels = c("low", "mid", "high")),
         block = factor(block, labels = c("I", "II", "III")))
```

```{r}
#| echo: false
data_tbl %>% 
  mutate(rsp = round(rsp, 2)) %>% 
  kable(align = "c", "pipe")
```

### Explorative Datenanalyse (EDA)

```{r}
ggplot(data_tbl, aes(trt, rsp, color = block)) +
  geom_boxplot()
```

```{r}
#| message: false

stat_tbl <- data_tbl %>% 
  group_by(trt, block) %>% 
  summarise(mean = mean(rsp),
            sd = sd(rsp),
            se = sd/sqrt(n()))

ggplot(stat_tbl, aes(x = trt, y = mean, fill = block)) + 
    geom_bar(position = position_dodge(), stat = "identity") +
    geom_errorbar(aes(ymin = mean-sd, ymax = mean+sd),
                  width = 0.2,
                  position = position_dodge(.9))
```

### Lineares Modell

```{r}
fit_1 <- lm(rsp ~ trt + block, data = data_tbl)

```

### ANOVA

```{r}
fit_1 %>% anova
```

### Gruppenvergleich mit dem `multcomp` Paket

https://broom.tidymodels.org/reference/tidy.glht.html

```{r}

fit_1 %>% 
  glht(linfct = mcp(trt = "Tukey")) %>% 
  tidy %>% 
  select(contrast, estimate, adj.p.value) %>% 
  mutate(across(where(is.numeric), round, 4))



```

### Gruppenvergleich mit der `emmeans` Paket

https://broom.tidymodels.org/reference/tidy.emmGrid.html

```{r}
fit_1 %>% 
  emmeans("trt") %>% 
  contrast(method = "pairwise") %>% 
  tidy %>% 
  select(contrast, estimate, adj.p.value) %>% 
  mutate(across(where(is.numeric), round, 4))

```

## Auswertung von Boniturnoten

```{r}
#| echo: false 

data_tbl <- tibble(block = 1:5,
                   A = c(2,3,4,3,2),
                   B = c(7,9,8,9,7),
                   C = c(6,5,4,7,4),
                   D = c(2,4,1,2,3),
                   E = c(4,5,3,7,6)) %>%
  gather(key = "variety", value = "rating", A:E) %>% 
  mutate(variety = as_factor(variety),
         block = factor(block, labels = c("I", "II", "III", "IV", "V"))) %>% 
 select(variety, block, rating)


data_tbl <- tibble(block = rep(1:3, each = 5),
                   A = c(2,3,3,4,1,3,2,2,4,4,2,2,3,1,2),
                   B = c(8,9,8,9,7,7,7,8,8,7,8,9,7,9,8),
                   C = c(6,5,5,6,4,4,5,3,6,4,7,6,4,6,4),
                   D = c(2,4,1,2,2,2,4,4,1,3,3,4,2,1,3),
                   E = c(4,4,2,7,5,4,3,4,7,7,5,5,4,6,6)) %>%
  gather(key = "variety", value = "rating", A:E) %>% 
  mutate(variety = as_factor(variety),
         block = factor(block, labels = c("I", "II", "III"))) %>% 
  select(variety, block, rating) %>% 
  arrange(variety, block)  

#data_tbl <- tibble(A = sample(1:9, 18, replace = TRUE, 
#                              prob = c(0, 0, 0, 0, 0.1, 0.2, 0.4, 0.2, 0.1)),
 #                  B = sample(1:9, 18, replace = TRUE, 
  #                            prob = c(0, 0, 0.1, 0.2, 0.4, 0.2, 0.1, 0, 0)),
   #                C = sample(1:9, 18, replace = TRUE, 
    #                          prob = c(0, 0, 0, 0.1, 0.2, 0.4, 0.2, 0.1, 0)),
     #              D = sample(1:9, 18, replace = TRUE, 
      #                        prob = c(0, 0, 0, 0, 0, 0.1, 0.2, 0.4, 0.3))) %>% 
  #gather(key = "trt", value = "rating") %>% 
  #mutate(trt = as_factor(trt), 
   #      block = rep(gl(3, 6), 4),
    #     block = factor(block, labels = c("I", "II", "III"))) %>% 
#  select(trt, block, rating)

```

```{r}
#| echo: false
data_tbl %>% 
  kable(align = "c", "pipe")
```

### Explorative Datenanalyse (EDA)

```{r}
#| message: false

ggplot(data_tbl, aes(variety, rating, color = block)) +
  geom_boxplot() +
  geom_dotplot(aes(fill = block), binaxis = "y", stackdir='center', 
               position=position_dodge(0.8))  

```

```{r}
#| message: false

ggplot(data_tbl, aes(variety, rating, fill = block)) +
  geom_dotplot(binaxis = "y", stackdir='center', 
               position=position_dodge(0.8)) +
  stat_summary(fun = median, fun.min = median, fun.max = median,
               geom = "crossbar", width = 0.5, 
               position=position_dodge(0.8)) 

```

### Friedman Test

```{r}

#friedman.test(rating ~ variety | block, data = data_tbl)

data_tbl <- tibble(Block = 1:4,
                   Sorte_1 = c(2,3,4,3),
                   Sorte_2 = c(7,9,8,9),
                   Sorte_3 = c(6,5,4,7),
                   Sorte_4 = c(2,4,1,2),
                   Sorte_5 = c(4,5,3,7)) %>%
  gather(key, value, Sorte_1:Sorte_5)

friedman.test(value ~ key | Block, data = data_tbl)


```

## Auswertung von Infektionsstatus
