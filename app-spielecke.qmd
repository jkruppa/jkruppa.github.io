```{r echo = FALSE}
#| message: false
#| warning: false
pacman::p_load(tidyverse, readxl, knitr, kableExtra, Hmisc, performance, parameters,
               latex2exp, see, patchwork, mfp, multcomp, emmeans, janitor, conflicted)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::filter)
```

# Spielecke {#sec-spielecke}

*Letzte Änderung am `r format(fs::file_info("app-spielecke.qmd")$modification_time, '%d. %B %Y um %H:%M:%S')`*

> *"Denn, um es endlich auf einmal herauszusagen, der Mensch spielt nur, wo er in voller Bedeutung des Worts Mensch ist, und er ist nur da ganz Mensch, wo er spielt." --- Friedrich Schiller*

------------------------------------------------------------------------

![](images/caution.png){fig-align="center" width="50%"}

**Das ist hier *meine Spielecke*, wo ich Ideen und sonst so Zeug sammele, was mir über den Weg läuft und ich noch nicht so richtig weiter im Skript eingeordnet habe. Deshalb hat das hier auch keine Struktur, da mir die Gedanken eben auch noch wirr durch den Kopf geistern.**

------------------------------------------------------------------------

## Quecksilber {.unnumbered}

[Tuna-Steak und Co: Methylquecksilber im Fisch](https://www.eskp.de/schadstoffe/tuna-steak-und-co-methylquecksilber-im-fisch-9351051/)

[Färöer - Walfleisch-Verseuchung](https://wdsf.eu/aktionen/faeroeer-walfang/faeroeer-walfleisch-verseuchung)

[Minamata-Übereinkommen](https://de.wikipedia.org/wiki/Minamata-%C3%9Cbereinkommen)

## Paper Ideen {.unnumbered}

Tierpaper

-   [Arginine Nutrition in Neonatal Pigs](https://www.sciencedirect.com/science/article/pii/S0022316623031279)
-   [Fiber effects in nutrition and gut health in pigs](https://link.springer.com/article/10.1186/2049-1891-5-15)
-   [Phosphorus nutrition of growing pigs](https://www.sciencedirect.com/science/article/pii/S2405654522000373)

Pflanzenpaper

-   [Hoverfly pollination enhances yield and fruit quality in mango under protected cultivation](https://www.sciencedirect.com/science/article/pii/S0304423822004411)
-   [Plant Growth, Yield, and Fruit Size Improvements in ‘Alicia’ Papaya Multiplied by Grafting](https://www.mdpi.com/2223-7747/12/5/1189)

## Zerforschen {.unnumbered}

### Boxplot Ideen {.unnumbered}

Hier wollen wir einmal eine etwas größere @fig-zer-boxplot-mult mit einer Menge Boxplots zerforschen. Da ich den Datensatz dann nicht zu groß machen wollte und Boxplots zu zerforschen manchmal nicht so einfach ist, passen die Ausreißer dann manchmal dann doch nicht. Auch liefern die statistischen Tests dann nicht super genau die gleichen Ergebnisse. Aber das macht vermutlich nicht so viel, hier geht es ja dann eher um den Bau der Boxplots und dem rechnen des statistischen Tests in `{emmeans}`. Die Reihenfolge des *compact letter displays* habe ich dann auch nicht angepasst sondern die Buchstaben genommen, die ich dann erhalten habe. Die Sortierung kann man ja selber einfach ändern. Wir haben hier ein einfaktorielles Design mit einem Behandlungsfaktor mit drei Leveln vorliegen. Insgesamt schauen wir uns vier Endpunkte in veränderten Substrat- und Wasserbedingungen an.

![Ursprüngliche Abbildung, die nachgebaut werden soll. Insgesamt vier Outcomes sollen für zwei Behandlungen ausgewertet werden. Das praktische ist hier, dass wir es nur mit einem einfaktoriellen Design zu tun haben.](images/eda/zerforschen_boxplot_mult.jpeg){#fig-zer-boxplot-mult fig-align="center" width="100%"}

Im Folgenden lade ich einmal den Datensatz, den ich dann per Auge zusammengesetzt habe. Das war jetzt etwas anstrengender als gedacht, da ich nicht weiß wie viele Beobachtungen einen Boxplot bilden. Je mehr Beobachtungen, desto feiner kann man den Boxplot abstimmen. Da ich hier nur mit sieben Beobachtungen ja Gruppe gearbeitet habe, habe ich es nicht geschafft die Ausreißer darzustellen. Das wäre mir dann zu viel Arbeit geworden. Nachdem ich jetzt die Daten geladen habe, muss ich noch über die Funktion `pivot_longer()` einen Datensatz passenden im Longformat bauen. Abschließend mutiere ich dann noch alle Faktoren richtig und vergebe bessere Namen als `labels` sonst versteht man ja nicht was die Spalten bedeuten.

```{r}
boxplot_mult_tbl <- read_excel("data/zerforschen_boxplot_mult.xlsx") |> 
  pivot_longer(cols = fresh_weight:flower_number,
               values_to = "rsp",
               names_to = "plant_measure") |> 
  mutate(trt = as_factor(trt),
         plant_measure = factor(plant_measure,
                                levels = c("fresh_weight", "dry_weight",
                                           "plant_height", "flower_number"),
                                labels = c("Fresh weight (g)", "Dry weight (g)",
                                           "Plant height (cm)", "Flower number")),
         type = factor(type, labels = c("Substrate", "Water"))) 
```

Ich habe mir dann die beiden Behandlungen `substrate` und `water` in die neue Spalte `type` geschrieben. Die Spaltennamen der Outcomes wandern in die Spalte `plant_measure` und die entsprechenden Werte in die Spalte `rsp`. Dann werde ich hier mal alle Outcomes auf einmal auswerten und nutze dafür das R Paket `{purrr}` mit der Funktion `nest()` und `map()`. Ich packe mir als die Daten nach `type` und `plant_measure` einmal zusammen. Dann habe ich einen neuen genesteten Datensatz mit nur noch acht Zeilen. Auf jeder Zeile rechne ich dann jeweils mein Modell. Wie du dann siehst is in der Spalte `data` dann jeweils ein Datensatz mit der Spalte `trt` und `rsp` für die entsprechenden 21 Beobachtungen.

```{r}
boxplot_mult_nest_tbl <- boxplot_mult_tbl |>
  group_by(type, plant_measure) |>
  nest() 

boxplot_mult_nest_tbl
```

```{r}
boxplot_mult_nest_tbl |>
  mutate(model = map(data, ~lm(rsp ~ trt, data = .x))) %>% 
  mutate(anova = map(model, anova)) %>% 
  mutate(parameter = map(anova, model_parameters)) %>% 
  select(type, plant_measure, parameter) |> 
  unnest(parameter) %>% 
  clean_names() %>% 
  filter(parameter != "Residuals") %>% 
  select(type, plant_measure, parameter, p)
```

```{r}
emm_tbl <- boxplot_mult_nest_tbl |>
  mutate(model = map(data, ~lm(rsp ~ trt, data = .x))) %>% 
  mutate(emm = map(model, emmeans, ~trt)) %>% 
  mutate(contrast = map(emm, contrast, method = "pairwise", 
                        adjust = "none")) %>% 
  mutate(cld = map(emm, cld, Letters = letters, adjust = "none")) |> 
  unnest(cld) |> 
  select(type, plant_measure, trt, rsp = emmean, group = .group) |> 
  mutate(group = str_trim(group))

```

::: panel-tabset
## Mit `facet_wrap()`

```{r}
#| message: false
#| echo: true
#| warning: false
#| label: fig-zerforschen_boxplot_mult-1
#| fig-align: center
#| fig-height: 4
#| fig-width: 7
#| fig-cap: "Nicht alle Ausreißer wurden von mir direkt nachgebaut. Das ist sehr viel Arbeit mit wenig Erkenntnisgewinn."

boxplot_mult_tbl |> 
  ggplot(aes(trt, rsp)) +
  theme_minimal() +
  stat_boxplot(geom = "errorbar", width = 0.25) + 
  geom_boxplot(outlier.shape = 18, outlier.size = 2) +
  stat_summary(fun.y = mean, geom = "point", shape = 23, size = 3, fill = "red") +
  facet_wrap(~ type * plant_measure, nrow = 2, scales = "free") +
  labs(x = "", y = "") +
  geom_text(data = emm_tbl, aes(y = rsp * 1.25, label = group), size = 6)

```

## Mit `{patchwork}`

Hier bauen wir uns erstmal ein Template für `ggplot()` und dann ändern wir nur die Werte für `scale_y_continuous()`.

```{r}
gg_template <- ggplot() +
  aes(trt, rsp) +
  theme_minimal() +
  stat_boxplot(geom = "errorbar", width = 0.25) + 
  geom_boxplot(outlier.shape = 18, outlier.size = 2) +
  stat_summary(fun.y = mean, geom = "point", shape = 23, size = 3, fill = "red") +
  labs(x = "")
```

```{r}
p1 <- gg_template %+%
  filter(boxplot_mult_tbl, type == "Substrate" & plant_measure == "Fresh weight (g)") +
  labs(y = "Fresh weight (g)")
p2 <- gg_template %+%
  filter(boxplot_mult_tbl, type == "Substrate" & plant_measure == "Dry weight (g)") +
  labs(y = "Dry weight (g)")
p3 <- gg_template %+%
  filter(boxplot_mult_tbl, type == "Substrate" & plant_measure == "Plant height (cm)") +
  labs(y = "Plant height (cm)")
p4 <- gg_template %+%
  filter(boxplot_mult_tbl, type == "Substrate" & plant_measure == "Flower number") +
  labs(y = "Flower number")
p5 <- gg_template %+%
  filter(boxplot_mult_tbl, type == "Water" & plant_measure == "Fresh weight (g)") +
  labs(y = "Fresh weight (g)")
p6 <- gg_template %+%
  filter(boxplot_mult_tbl, type == "Water" & plant_measure == "Dry weight (g)") +
  labs(y = "Dry weight (g)")
p7 <- gg_template %+%
  filter(boxplot_mult_tbl, type == "Water" & plant_measure == "Plant height (cm)") +
  labs(y = "Plant height (g)")
p8 <- gg_template %+%
  filter(boxplot_mult_tbl, type == "Water" & plant_measure == "Flower number") +
  labs(y = "Flower number")
```

```{r}
patch <- p1 + p2 + p3 + p4 +
  p5 + p6 + p7 + p8 +
  plot_layout(ncol = 4)
patch + plot_annotation(tag_levels = 'A',
                        title = 'The surprising truth about mtcars',
                        subtitle = 'These 3 plots will reveal yet-untold secrets about our beloved data-set',
                        caption = 'Disclaimer: None of these plots are insightful')
```
:::

## Zitate {.unnumbered}

> *"I never once failed at making a light bulb. I just found out 99 ways not to make one." --- Thomas A. Edison*

> *"Leben heißt leiden, überleben heißt, im Leiden einen Sinn finden." --- Friedrich Nietzsche*

> *"Wachstum ist nicht alles, das ist wahr. Aber ohne Wachstum ist alles nichts." --- Angela Merkel*

> *"Competition is for losers!" --- Peter Thiel*

> *"Das Pferd frisst keinen Gurkensalat" --- Philipp Reis erster 1981 telefonisch übertragende Satz*

> *"One glance at a book and you hear the voice of another person perhaps someone dead for thousands of years. Across the millennia the author is speaking clearly and silently inside your head, directly to YOU." --- Carl Sagan*

> *"If you feel safe in the area that you're working in, you're not working in the right area. Always go a little further into the water than you feel you're capable of being in. Go a little bit out of your depth, and when you don't feel that your feet are quite touching the bottom, you're just about in the right place to do something exciting." -- David Bowie*

> *"(1) Alles was es schon gab, als Du geboren wurdest, ist normal und gewöhnlich. Diese Dinge werden als natürlich wahrgenommen und halten die Welt am Laufen. (2) Alles was zwischen Deinem 16ten und 36ten Lebensjahr erfunden wird ist neu, aufregend und revoltionär. Und vermutlich kannst Du in dem Bereich sogar Karriere machen. (3) Alles was nach dem 36ten Lebensjahr erfunden wird ist gegen die natürliche Ordnung der Dinge." --- Douglas Adams, Per Anhalter durch die Galaxis*

> *"Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it." --- Brian Kernighan, professor at Princeton University.*

> *"The three stages of career development are: 1. I want to be in the meeting; 2. I want to run the meeting; 3. I want to avoid meetings." --- Jay Ferro*

> *"Freude ist ein Akt des Trotzes. Mit Freude gewinnen wir, auch wenn wir verlieren. Gut gelebt zu haben ist alles was uns bleibt, denn sterben müssen wir alle." --- Jaghatai Khan, The Lost and the Damned*

> *"Freude ist ein Akt des Trotzes. Durch sie gewinnen wir, auch wenn wir verlieren. Denn sterben müssen wir alle und ein schönes Leben ist alles was uns bleibt." --- Jaghatai Khan, The Lost and the Damned*

## Frauen in der Statistik {.unnumbered}

-   [Women in Statistics through History](https://womeninstatshistory.blog/)
-   [Trailblazing women in statistics](https://news.uga.edu/groundbreaking-women-in-statistics/)
-   [Famous women statisticians](https://andifugard.info/famous-women-statisticians/)

Wie sieht es denn heute aus? Haben wir dort auch sehr viele Frauen, die sich in der Programmierung vortun? Leider nein. In der @fig-eda-preface-r-01 sehen wir den dramatischen Rückgang an Frauen in der Informatik und den Computerwissenschaften. Eigentlich bin ich ja hier schon zu spät dran mit meiner Lehre der Informatik und Programmierung, der größte Rückgang an Frauen wird schon in den früheren Jahren verursacht als ich junge Frauen unterrichte. Aber dennoch möchte ich hier natürlich dem Trend entgegenwirken. Nichtstun ist ja in so einem Fall auch keine wirkliche Option.

```{r}
#| warning: false
#| echo: false
#| message: false
#| label: fig-eda-preface-r-01
#| fig-align: center
#| fig-height: 4
#| fig-width: 7
#| fig-cap: "Im Jahr 1995 waren 37 % der Informatiker Frauen. Heute sind es nur noch 24 %. Der Prozentsatz wird weiter sinken, wenn wir nichts tun. Wir wissen, dass der größte Rückgang von Mädchen in der Informatik im Alter zwischen 13 und 17 Jahren stattfindet. Quelle: [Girls who code](https://girlswhocode.com/about-us)"

data_tbl <- tibble(year = c(1995, 2017, 2022),
                   percent = c(0.34, 0.24, 0.22))

ggplot(data_tbl, aes(year, percent, label = scales::percent(percent))) +
  theme_minimal() +
  geom_line() +
  geom_ribbon(aes(ymin = 0.1, ymax = percent), fill = "#F0E442", alpha=0.7, position = "identity") +
  geom_label() + 
  scale_y_continuous(labels = scales::percent) +
  scale_x_continuous(breaks = c(1995, 2017, 2022)) +
  labs(y = "% of women in Computer Science", x = "")

```

Was sind den die Gründe für das [Gap in der Informatik und der Computerwissenschaften](https://en.wikipedia.org/wiki/Gender_disparity_in_computing)? Hier gibt es ntürlich nicht den einen Grund, aber ich fand einen der Gründe besonders spannend.

Auch unterrichte ich weniger Informatik als [Computational statistics](https://en.wikipedia.org/wiki/Computational_statistics) oder eben aktuell Data Science - die Wissenschaft der Daten. Eigentlich gibt es nur noch Computational statistics,

[Admiral Grace Murray Hopper: When Women Were Computers](https://www.nationalww2museum.org/war/articles/grace-hopper-woman-computer)

[Girls who code](https://girlswhocode.com/)

## Korrelation {.unnumbered}

[How does Polychoric Correlation Work? (aka Ordinal-to-Ordinal correlation)](https://www.r-bloggers.com/2021/02/how-does-polychoric-correlation-work-aka-ordinal-to-ordinal-correlation/)

[An Alternative to the Correlation Coefficient That Works For Numeric and Categorical Variables](https://rviews.rstudio.com/2021/04/15/an-alternative-to-the-correlation-coefficient-that-works-for-numeric-and-categorical-variables/)

## Pakete, die ich mal anschauen will... {.unnumbered}

[R Paket `{ggdist}`](https://mjskay.github.io/ggdist/index.html)

[R Paket `{modelbased}`](https://easystats.github.io/modelbased/)

Das R Paket `{visibly}` auf [An Introduction to Visibly](https://m-clark.github.io/visibly/articles/intro.html)

[R Paket `{innsight}`](https://github.com/bips-hb/innsight)

## Learning text {.unnumbered}

Wachsamkeit und Konzentration kann ein Mensch nur für 90 Minuten halten. Selbst dann ist Aufmerksamkeit ein Flackern von höherer und niedrigerer Intensität. Danach muss der Mensch 1-2 Stunden lang wirklich ruhen, bevor er wieder sehr hart arbeiten & lernen kann.

Folgende Dinge, die innerhalb von 4 Stunden nach diesen 90-minütigen Lerneinheiten durchgeführt werden, beschleunigen das Lernen.

-   Kurzes Nickerchen
-   Nichtschlafende tiefe Ruhe (NSDR)
-   Yoga Nidra
-   Formen der Meditation, die nicht viel fokussierte Konzentration erfordern,

Folgende Dinge helfen während der Lernphase das Lernen zu verstärken und zu festigen. Der Hippocampus wiederholt während dieser Zeit die Informationen mit 20-facher Geschwindigkeit und beschleunigt das Lernen und das Behalten der neu gelernten Informationen.

-   Mache ab und zu 10 Sekunden Pause vom Lernen, in denen du absolut nichts tust
-   Mache den Kopf frei (Lückeneffekt/Mikropausen),
-   Inkrementelles Lernen. Du kannst das Lernen in kleine, konzentrierte Einheiten aufteilen.
-   Stelle dir einen Timer für 3 Minuten ein, schalte das Telefon aus und verbringe die 3 Minuten damit, eine Sache intensiv zu lernen, auch wenn es sich anfühlt, als würde es aktuell nichts bringen.
-   Wenn du das wiederholt tust, können diese kleinen Schritte des Lernens zu einer übergroßen Menge des Lernens insgesamt führen.

[How to Learn Anything You Want \| Andrew Huberman](https://youtu.be/8oyA-ctqq3g)

## Weitere Datenquellen {.unnumbered}

[Food and agriculture data](https://www.fao.org/faostat/en/#home)

Mit dem [R Paket `{FAOSTAT}`](https://cran.r-hub.io/web/packages/FAOSTAT/) und der Vignette [FAOSTAT: Download Data from the FAOSTAT Database](https://cran.r-hub.io/web/packages/FAOSTAT/vignettes/FAOSTAT.pdf)

```{r}
#| eval: false


```

Mit dem [R Paket `{owidR}`](https://cran.r-project.org/web/packages/owidR/index.html) haben wir auch eine Möglichkeit direkt auf die Datenbank von [Our World in Data](https://ourworldindata.org/) zuzugreifen.

```{r}
#| eval: false

library(owidR)
foo <- owid_search("annual") 
owid("annual-co2-emissions-by-region")
owid(foo[3])
```

Eine wunderbare Sammlung von Datensätzen aus dem Bereich der Agarwissenschaften liefert das R Paket `{agridat}`. Über die Hilfeseite [agridat: Agricultural Datasets](https://cran.r-project.org/web/packages/agridat/index.html) findest du dann einmal einen gesamten Überblick und auch die Informationen über einige ausgewählte Datensätze aus Dutzenden von Datensätzen. Alle Datensätze der wichtigen Bücher zu dem experimentellen Designs sind dort eigentlich enthalten und einmal kuratiert.

Hier noch der Link zu [agridat - Datensätze mit Abbildungen in `{desplot}`](https://kwstat.github.io/agridat/reference/index.html). Du musst dann auf die jeweiligen Datensätze in der Liste klicken und dann kommst du zu dem Datensatz mit mehr Details sowie meistens auch einer Abbildung in `desplot`.

## Marginal effects {.unnumbered}

[Marginal Effects Zoo](https://marginaleffects.com)

[R Paket `{marginaleffects}`](https://marginaleffects.com)

[Marginal and conditional effects for GLMMs with `{marginaleffects}`](https://www.andrewheiss.com/blog/2022/11/29/conditional-marginal-marginaleffects/)

[Marginalia: A guide to figuring out what the heck marginal effects, marginal slopes, average marginal effects, marginal effects at the mean, and all these other marginal things are](https://www.andrewheiss.com/blog/2022/05/20/marginalia/#what-about-marginal-things-in-statistics)

### Latent Class Analysis {.unnumbered}

Wie immer gibt es eine Reihe von Tutorien auf denen dieser Abschnitt aufbaut. Zum einen wirf einfach mal einen Blick in das Tutorium [Latent Class Analysis Using R](https://pop.princeton.edu/events/2020/latent-class-analysis-using-r). Eine leider etwas veraltete Übersicht über mögliche R Pakete liefert [Ways to do Latent Class Analysis in R](https://maksimrudnev.com/2016/12/28/latent-class-analysis-in-r/). Ich habe da immer mal quer geschaut und mich dann für die Pakete hier entschieden. Es gibt sicherlich noch andere Möglichkeiten eine *latent class analysis* zu rechnen.

Wenn du mehr über *latent class analysis* erfahren möchtest, dann kann ich dir nur das [LCA Frequently Asked Questions (FAQ)](https://www.john-uebersax.com/stat/faq.htm) empfehlen. Das FAQ ist sehr umfangreich und beschäftigt sich mit allen wichtigen Punkten. Wir wollen uns ja mit dem R Paket `poLCA` beschäftigen. Hier gibt es zwei Tutorien. Einmal gibt es das Tutorium [Example for a latent class analysis with the poLCA-package in R](https://statistics.ohlsen-web.de/latent-class-analysis-polca/) und das Tutroium [Latent Class Analysis](https://rpubs.com/eogawac/poLCA). Und natürlich die Litertur von @linzer2011polca mit der entsprechenden Veröffentlichung [poLCA: An R Package for Polytomous Variable Latent Class Analysis](https://www.sscnet.ucla.edu/polisci/faculty/lewis/pdf/poLCA-JSS-final.pdf)

Grundsätzlich basiert die *latent class analysis* nicht auf Distanzen sondern versucht über eine Modellierung der Klassenzugehörigkeitswahrscheinlichkeit getrennte Gruppen zu bilden. Wir wollen also $k$ Klassen haben und im idealen Fall können wir durch unsere Variablen in dem Datensatz jeweils mit einer 100% Wahrscheinlichkeit einer der drei Klassen zuordnen. Was dann diese $k$ Klassen aussagen, müssen wir dann selber anhand der zugewiesenen Variablen aus unseren Daten interpretieren.

```{r}
#| eval: false
pacman::p_load(tidyverse, magrittr, janitor, conflicted)

animals_tbl <- read_excel("data/cluster_animal.xlsx", sheet = 1) %>% 
  clean_names() 
```

```{r}
#| eval: false
pacman::p_load(poLCA)

poLCA(cbind(warm_blooded, fly, vertebrate, threatened, live_in_groups) ~ 1,
      nclass = 3,
      data = animals_tbl,
      nrep = 1,
      na.rm = FALSE,
      graphs = TRUE,
      maxiter = 100000
)

```

Hier hängen wir dann an der Interpretation. Da müssen wir nochmal tiefer schauen.

### Structural Equation Modeling {.unnumbered}

@van2023best [tidySEM](https://cjvanlissa.github.io/tidySEM/index.html)

[Structural Equation Modeling](https://bookdown.org/bean_jerry/using_r_for_social_work_research/structural-equation-modeling.html)

[Introduction to structural equation modeling (sem) in r with lavaan](https://stats.oarc.ucla.edu/r/seminars/rsem/)

[Intro to structural equation modeling](https://rpubs.com/Agrele/SEM)

Schöne Diagramme [Structural Equation Models](https://advstats.psychstat.org/book/sem/index.php)

## Links {.unnumbered}

Data Science

-   Real World Data @liu2022real
-   Warum **Data** Science @hariri2019uncertainty
-   Paradigmenwechsel?

Deutsches Sprichwort: Deutsch mit jemanden Reden; Verstehe nur Spanisch

> *"Gott würfelt nicht!" --- Albert Einstein*

-   [Frequentistischer Wahrscheinlichkeitsbegriff](https://de.wikipedia.org/wiki/Frequentistischer_Wahrscheinlichkeitsbegriff)
-   [Bayessche Wahrscheinlichkeitsbegriff](https://de.wikipedia.org/wiki/Bayesscher_Wahrscheinlichkeitsbegriff)

## Referenzen {.unnumbered}
