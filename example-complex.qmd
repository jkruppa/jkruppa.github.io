# Von komplexeren Daten {#sec-example-complex}

```{r}
#| message: false
#| echo: false

pacman::p_load(readxl, knitr, kableExtra, tidyverse, magrittr, conflicted, broom,
               simstudy, openxlsx, 
               parameters, performance, gtsummary)
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("mutate", "dplyr")

```

*Version vom `r format(Sys.time(), '%B %d, %Y um %H:%M:%S')`*

![](images/caution.png){fig-align="center" width="50%"}

## Von infizierten Ferkeln

Im Folgenden schauen wir uns den anonymisierten Datensatz zu einer Ferkelinfektion an. Wir haben verschiedene Gesundheitsparameter an den Ferkeln gemessen und wollen an diesen Rückschließen, ob diese Gesundheitsparameter etwas mit der Infektion zu tun haben.

```{r}
#| message: false
#| echo: false

set.seed(20220929)
## data generation
def <- defData(varname = "age", dist = "normal", formula = "60", variance = 20)
def <- defData(def, varname = "sex", formula = "0.4;0.6", dist = "categorical")
def <- defData(def, varname = "location", formula = "0.3;0.2;0.2;0.3",
               dist = "categorical")
def <- defData(def, varname = "activity", formula = "10 + 2 * sex", variance = 2)
def <- defData(def, varname = "crp", formula = "20", variance = 2)
def <- defData(def, varname = "frailty", formula = "0.5;0.35;0.15", dist = "categorical")
def <- defData(def, varname = "bloodpressure", formula = "60 - 2 * sex", variance = 10)
def <- defData(def, varname = "weight", formula = "20 - 1 * sex", variance = 2)
def <- defData(def, varname = "creatinin", formula = "5", variance = 2)
def <- defData(def, varname = "infected", formula = "-10 + 0.5 * sex +
0.5 * frailty + 2 * crp + 0.05 * creatinin + 0.2 * bloodpressure + 0.01 * weight", dist = "normal", variance = 10)

pig_tbl <- genData(rpois(1, 400), def) %>% 
  select(-id) %>% 
  mutate(across(where(is.numeric), round, 2),
         age = round(age),
         sex  = factor(sex, labels = c("female", "male")),
         location = factor(location, labels = c("north", "northeast", "west", "northwest")),
         frailty = factor(frailty, labels = c("robust", "pre-frail", "frail")),
         infected = ifelse(infected >= 42, 1, 0))

write.xlsx(pig_tbl, "data/infected_pigs.xlsx", rowNames = FALSE)
```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-example-pigs
#| tbl-cap: Auszug aus dem Daten zu den kranken Ferkeln.
#| column: page

pig_tbl <- read_excel("data/infected_pigs.xlsx") 

rbind(head(pig_tbl),
      rep("...", times = ncol(pig_tbl)),
      tail(pig_tbl)) %>% 
  kable(align = "c", "pipe")
```

Auch hier haben wir nur eingeschränkte Informationen zu den erhobenen Variablen. Daher müssen wir schauen, dass die Variablen in etwa Sinn ergeben.

-   **age**, das Alter in Lebenstagen der untersuchten Ferkel.
-   **sex**, das bestimmte Geschlecht der Ferkel.
-   **location**, anonymisierter Ort der Untersuchung.
-   **activity**, Minuten an Aktivität pro Stunde. Die Aktivität wurde über eine automatische Bilderkennung bestimmt.
-   **crp**, der CRP-Wert aus der Blutprobe.
-   **frailty**, die visuelle Einordnung des Gesundheitszustandes anhand der Beweglichkeit des Ferkels.
-   **bloodpressure**, gemessener Blutdruck der Ferkel.
-   **weight**, das gemessene Gewicht der Ferkel.
-   **creatinin**, der Creatinin-Wert aus der Blutprobe.
-   **infected**, der Infektionsstatus zum Zeitpunkt der Untersuchung.

::: callout-tip
## Datei von den infizierten Ferkeln

Du findest die Datei `infected_pigs.xlsx` auf GitHub [jkruppa.github.io/data/](https://github.com/jkruppa/jkruppa.github.io/tree/master/data) als Excel Datei.
:::

## Von langnasigen Hechten

::: column-margin
Die Daten zu den langnasigen Hechten stammt von [Salvatore S. Mangiafico - An R Companion for the Handbook of Biological Statistics](https://rcompanion.org/rcompanion/e_05.html).
:::

In der folgenden Datentabelle wollen wir uns die Anzahl an Hechten in verschiedenen nordamerikanischen Flüßen anschauen. Jede Zeile des Datensatzes steht für einen Fluss. Wir haben dann in jedem Fluss die Anzahl an Hechten gezählt und weitere Flussparameter erhoben.

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-example-longnose
#| tbl-cap: Auszug aus dem Daten zu den langnasigen Hechten.
#| column: page


longnose_tbl <- read_csv("data/longnose.csv") 

rbind(head(longnose_tbl),
      rep("...", times = ncol(longnose_tbl)),
      tail(longnose_tbl)) %>% 
  kable(align = "c", "pipe")

```

Wie immer haben wir nicht so viele Informationen über die Daten vorliegen. Einiges können wir aber aus den Namen der Spalten in dem Datensatz ableiten. Wir haben in verschiedenen Flüssen die Anzahl an Hechten gezählt und noch weitere Flussparameter gemessen. Ein wenig müssen wir hier auch unsere eigene Geschichte spinnen.

-   **longnose**, die Anzahl der Hechte, die in einem Flussarm gezählet wurden.
-   **acerage**, erfasste Oberfläche des Flusses in dem gemessenen Gebiet.
-   **do2**, gemessener Partialdruck von Sauerstoiff $O_2$ im Wasser und damit auch verfügbarer Sauerstoff (engl. *Oxygen-Delivery, DO2*)
-   **maxdepth**, die maximale Tiefe des Flusses.
-   **no3**, die gemessene Nitratkonzentration im Wasser.
-   **so4**, die gemessene Schwefelkonzentration im Wasser.
-   **temp**, gemessene Temperatur in dem Flussarm.

::: callout-tip
## Datei von den langnasigen Hechten

Du findest die Datei `longnose.csv` auf GitHub [jkruppa.github.io/data/](https://github.com/jkruppa/jkruppa.github.io/tree/master/data) als Excel Datei.
:::
