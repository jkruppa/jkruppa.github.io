```{r echo = FALSE}
pacman::p_load(tidyverse, readxl, knitr, kableExtra, Hmisc,
               grid, agricolae, patchwork, desplot, modelr)
```

# Einfache Designs {#sec-experimental-design-basic}

*Version vom `r format(Sys.time(), '%B %d, %Y um %H:%M:%S')`*

![](images/caution.png){fig-align="center" width="50%"}

::: column-margin
Ein Teil der Beispiele basiert auf [DSFAIR von P. Schmidt](https://schmidtpaul.github.io/DSFAIR/DesigningExperiments.html) und wurde von mir angepasst und vereinfacht. Hier findet sich auch weiterführende Literatur und weitere Beispiele.

Im Weiteren schauen wir uns auch das R Paket `agricolae` mit Beispielen von [Experimental Designs with agricolae](https://myaseen208.com/agricolae/articles/ExperimentalDesign.html) genauer einmal an.
:::

In diesem Kapitel wollen wir uns mit der Auswertung von verschiedenen experimentellen Designs beschäftigen. Wir schauen uns dafür jeweils eine mögliche Visualisierung an und bauen uns dann die Daten künstlich nach. Warum eigentlich künstliche Daten? Das heißt wir erschaffen uns Daten wo wir genau wissen, wie der Mittelwert und die Standardabweichungen in den einzelnen Gruppen sind. Warum ist das hilfreich? Dadurch das wir wissen, dass der Mittelwertsunterschied zwischen Gruppe $A$ und Gruppe $B$ mit dem Effekt von $\Delta_{A-B} = 5$ erschaffen wurde, können wir dann auch die Ausgaben der Funktionen besser bewerten.

::: callout-caution
## Es fährt ein Zug nach nirgendwo...

Dieses Kapitel ist nicht zu verstehen, wenn du nicht schon was über Statistik weist. Im Zweifel musst du nochmal in die vorherigen Kapitel zurückspringen um nochmal die Konzepte nachzulesen.
:::

## Genutzte R Pakete für das Kapitel

Wir wollen folgende R Pakete in diesem Kapitel nutzen.

```{r echo = TRUE}
#| message: false
pacman::p_load(tidyverse, magrittr, conflicted, broom,
               see, emmeans, multcomp, scales, performance,
               effectsize, parameters)
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("mutate", "dplyr")
conflict_prefer("set_names", "magrittr")
cbbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", 
                "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
```

Am Ende des Kapitels findest du nochmal den gesamten R Code in einem Rutsch zum selber durchführen oder aber kopieren.

## Complete randomized design (CRD) {#sec-crd}

![Visualisierung des *complete randomized design* mit einer Behandlung und vier Behandlungsleveln.](images/experimental-design-table-crd.png){#fig-design-table-crd fig-align="center" width="50%"}

![Visualisierung des *complete randomized design* mit einer Behandlung und vier Behandlungsleveln.](images/experimental-design-crd.png){#fig-design-crd fig-align="center" width="70%"}

## Randomized complete block design (RCBD) {#sec-rcbd}

::: {#fig-table-rcbd .column-page layout-ncol="2"}
![Visualisierung des *Randomized complete block design* mit einer Behandlung und vier Behandlungsleveln. In jedem Block findet sich nur ein Behandlungslevel randomisiert wieder.](images/experimental-design-table-block.png){#fig-design-table-block fig-align="center" width="65%"}

![Visualisierung des *Randomized complete block design* mit einer Behandlung und vier Behandlungsleveln. In jedem Block finden wir mehrfach die Level der Behandlung. Im Prinzip ein *Complete randomized design* in mehreren Wiederholungen.](images/experimental-design-table-block-rep.png){#fig-design-table-block-rep fig-align="center" width="100%"}

Visualisierung der zwei Möglichkeiten ein *Randomized complete block design* zu konstruieren.
:::

![Visualisierung des *complete randomized design* mit einer Behandlung und vier Behandlungsleveln.](images/experimental-design-rcbd.png){#fig-design-rcbd fig-align="center" width="70%"}

## Latin square design (LSD) {#sec-lsd}

### Visualisierung

![Visualisierung des *latin square design* mit einer Behandlung und vier Behandlungsleveln.](images/experimental-design-lsd.png){#fig-design-lsd fig-align="center" width="60%"}

### Daten

```{r}
expand_grid(trt = 1:4, block = 1:4)
```

### Modellierung

### Varianzanalyse und Mittelwertsvergleich
