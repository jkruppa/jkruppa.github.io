```{r echo = FALSE}
#| message: false
#| warning: false
pacman::p_load(tidyverse, readxl, knitr, kableExtra, Hmisc, performance, parameters,
               latex2exp, see, patchwork, mfp, multcomp, emmeans, janitor, effectsize,
               broom, ggmosaic, tinytable, ggrepel,
               conflicted)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::filter)
cb_pal <- c("#000000", "#E69F00", "#56B4E9", 
            "#009E73", "#F0E442", "#F5C710", 
            "#0072B2", "#D55E00", "#CC79A7")
cbbPalette <- cb_pal
```

# Baustelle {#sec-construction}

*Letzte Ã„nderung am `r format(fs::file_info("construction-zone.qmd")$modification_time, '%d. %B %Y um %H:%M:%S')`*

![](images/caution.png){fig-align="center" width="100%"}

::: {layout="[15,85]" layout-valign="top"}
![](images/personal_opinion.png){fig-align="center" width="100%"}

> *"foo." --- Jochen Kruppa-Scheetz, meiner bescheidener Meinung nach.*
:::

## Common statistical tests are linear models {.unnumbered}

[Common statistical tests are linear models](https://lindeloev.github.io/tests-as-linear/)

### Welch t-Test und GLS {.unnumbered}

[Equivalent to Welch's t-test in GLS framework](https://stats.stackexchange.com/questions/142685/equivalent-to-welchs-t-test-in-gls-framework)

```{r}
#| eval: false
# the t-statistic not assuming equal variances
t.test(rsp_normal ~ grp, data = filter(ranked_tbl, grp != "fox"), var.equal = FALSE)
```

```{r}
#| eval: false

library(nlme)
summary(gls(rsp_normal ~ grp, data = filter(ranked_tbl, grp != "fox"), 
            weights = varIdent(form = ~ 1 | grp)))
```

### Chi Quadrat Test und GLM {.unnumbered}

```{r}
#| eval: false

conflicts_prefer(stats::chisq.test)
D <- data.frame(mood = c('happy', 'sad', 'meh'),
               counts = c(60, 90, 70))
chisq.test(D$counts)
```

[Score test oder Rao Statistik](https://en.wikipedia.org/wiki/Score_test)

```{r}
#| eval: false

glm(counts ~ mood, data = D, family = poisson()) |> 
  anova(test = 'Rao')
```

Jetzt brauchen wir eine 2x2 Tabelle also zwei Spalten...

```{r}
#| eval: false

D = data.frame(
  mood = c('happy', 'happy', 'meh', 'meh', 'sad', 'sad'),
  sex = c('male', 'female', 'male', 'female', 'male', 'female'),
  Freq = c(100, 70, 30, 32, 110, 120)
)

MASS::loglm(Freq ~ mood + sex, D)
```
