![Ursprüngliche Abbildung, die nachgebaut werden soll. Zwei nicht-lineare Regession](images/eda/zerforschen_barplot_complex_01.png){#fig-ur-barplot-02 fig-align="center" width="100%"}

```{r}
barplot_tbl <- read_excel("data/zerforschen_barplot_2fac.xlsx") %>% 
  mutate(frucht = factor(frucht, 
                         levels = c("klein", "mittel", "groß"),
                         labels = c("Klein", "Mittel", "Groß")),
         nmin = as_factor(nmin))
barplot_tbl 
```

```{r}
#| message: false
#| warning: false
stat_all_tbl <- barplot_tbl %>% 
  group_by(frucht, nmin) %>% 
  summarise(mean = mean(yield),
            sd = sd(yield))
stat_all_tbl
```

```{r}
stat_fruit_tbl <- barplot_tbl %>% 
  group_by(frucht) %>% 
  summarise(mean = mean(yield))
stat_fruit_tbl
```

::: panel-tabset
## Barplot

```{r}
#| message: false
#| echo: true
#| warning: false
#| label: fig-ggplot-zerforschen-barplot-2fac
#| fig-align: center
#| fig-height: 4
#| fig-width: 7
#| fig-cap: "Die Abbildung des Säulendiagramms in `ggplot` nachgebaut."

ggplot(data = stat_all_tbl, aes(x = frucht, y = mean,
                                fill = nmin)) +
  theme_bw() +
  geom_bar(stat = "identity", position = position_dodge(0.9)) + 
  geom_errorbar(aes(ymin = mean-sd, ymax = mean+sd), 
                width = 0.2, position = position_dodge(0.9)) +
  labs(x = "Fruchtgröße zum Erntezeitpunkt", 
       y = expression(atop("Gesamtfruchtertrag", "["*kg~FM~m^"-2"*"]")),
       fill = expression(atop(N[min]~"Angebot", "["*kg~N~ha^"-1"*"]"))) +
  scale_y_continuous(breaks = c(0, 2, 4, 6, 8, 10, 12),
                     limits = c(0, 12)) +
  scale_fill_okabeito() +
  theme(legend.position = "right",
        legend.box.background = element_rect(color = "black"),
        legend.box.margin = margin(t = 1, l = 1),
        legend.text.align = 0) +
  annotate("text", x = c(1, 2, 3, 1.45), y = c(6, 10, 11, 3),
           label = c(expression(bar(y)*" = "*2.7),
                     expression(bar(y)*" = "*6.9),
                     expression(bar(y)*" = "*8.1),
                     "SD"))
```

## Boxplot

Für die Boxplots müssen wir gar nicht viel tun. Wir müssen nur noch das `geom_bar()` und `geom_errorbar()` entfernen und durch das `geom_boxplot()` ersetzen. Dann haben wir auch schon unsere wunderbaren Boxplots. Das Problem sind natürlich die wenigen Beobachtungen, deshalb sehen die Boxplots teilweise etwas wild aus. Beachte auch das wir die Orginaldaten nutzen und nicht die zusammengefassten Daten.

```{r}
#| message: false
#| echo: true
#| warning: false
#| label: fig-ggplot-zerforschen-barplot-2fac-box
#| fig-align: center
#| fig-height: 4
#| fig-width: 7
#| fig-cap: "Die Abbildung des Säulendiagramms in `ggplot` als Boxplot nachgebaut."

ggplot(data = barplot_tbl, aes(x = frucht, y = yield,
                               fill = nmin)) +
  theme_bw() +
  geom_boxplot() +
  labs(x = "Fruchtgröße zum Erntezeitpunkt", 
       y = expression(atop("Gesamtfruchtertrag", "["*kg~FM~m^"-2"*"]")),
       fill = expression(atop(N[min]~"Angebot", "["*kg~N~ha^"-1"*"]"))) +
  scale_y_continuous(breaks = c(0, 2, 4, 6, 8, 10, 12),
                     limits = c(0, 12)) +
  scale_fill_okabeito() +
  theme(legend.position = "right",
        legend.box.background = element_rect(color = "black"),
        legend.box.margin = margin(t = 1, l = 1),
        legend.text.align = 0) +
  annotate("text", x = c(1, 2, 3), y = c(6, 10, 11),
           label = c(expression(bar(y)*" = "*2.7),
                     expression(bar(y)*" = "*6.9),
                     expression(bar(y)*" = "*8.1)))
```
:::
