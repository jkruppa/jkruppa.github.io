```{r echo = FALSE}
pacman::p_load(tidyverse, readxl, knitr, kableExtra, Hmisc)
```

# Lineare gemische Modelle

::: column-margin
Dieses Kapitel basiert auf dem tollen [Tutorium von Gabriela K Hajduk](https://gkhajduk.github.io/2017-03-09-mixed-models/). Die Daten wurden von mir angepasst und teilweise gekürzt.
:::

[R Paket parameters](https://easystats.github.io/parameters/articles/model_parameters.html)

```{r}
library(lme4)

lmer(Sepal.Width ~ Petal.Length + (1 | Species), data = iris) %>%
  parameters()
```

## Genutzte R Pakete für das Kapitel

Wir wollen folgende R Pakete in diesem Kapitel nutzen.

```{r echo = TRUE}
#| message: false
pacman::p_load(tidyverse, magrittr, conflicted, broom, see,
               multcomp, emmeans, ggpubr, lme4, broom.mixed)
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
```

Am Ende des Kapitels findest du nochmal den gesamten R Code in einem Rutsch zum selber durchführen oder aber kopieren.

```{r}

dragons_tbl <- read.csv2("data/dragons.csv")

```

```{r}
ggplot(dragons_tbl, aes(test_score)) +
  geom_histogram() +
  theme_bw() 
```

```{r}
lm_fit <- lm(test_score ~ body_length, data = dragons_tbl)
summary(lm_fit)
```

```{r}
ggplot(dragons_tbl, aes(x = body_length, y = test_score)) +
  geom_point() +
  geom_smooth(method = "lm") +
  theme_bw() +
  scale_color_okabeito()
```

```{r}
augment(lm_fit) %>% 
  ggplot(aes(x = .fitted, y = .resid)) + 
  geom_point() +
  geom_hline(yintercept = 0, color = "red") +
  theme_bw() +
  scale_color_okabeito()
```

```{r}

ggplot(dragons_tbl, aes(sample = test_score)) +
  stat_qq() + stat_qq_line(color = "red") +
  theme_bw() +
  scale_color_okabeito()

```

```{r}
ggplot(dragons_tbl, aes(mountain_range, test_score, fill = mountain_range)) +
  geom_boxplot() +
  theme_bw() +
  theme(legend.position = "none") +
  scale_fill_okabeito()
```

```{r}
ggplot(dragons_tbl, aes(x = body_length, y = test_score, colour = mountain_range)) +
  geom_point() +
  theme_bw() +
  theme(legend.position = "none") +
  scale_color_okabeito()
```

```{r}
ggplot(dragons_tbl, aes(body_length, test_score, color = mountain_range)) + 
  theme_bw() +
  geom_point() + 
  facet_wrap(~ mountain_range) +
  scale_color_okabeito()
```

```{r}
lm_mountain_fit <- lm(test_score ~ body_length + mountain_range, data = dragons_tbl)
summary(lm_mountain_fit)
```

```{r}
lmer_1_fit <- lmer(test_score ~ body_length + (1 | mountain_range), data = dragons_tbl)
summary(lmer_1_fit)
```

```{r}
augment(lmer_1_fit) %>% 
  ggplot(aes(x = .fitted, y = .resid)) + 
  geom_point() +
  geom_hline(yintercept = 0, color = "red") +
  theme_bw() +
  scale_color_okabeito()

```

```{r}

qqnorm(resid(lmer_1_fit))
qqline(resid(lmer_1_fit)) 

```

```{r}
lmer_2_fit <- lmer(test_score ~ body_length + (1|mountain_range) + (1|mountain_range/site), data = dragons_tbl) 
summary(lmer_2_fit)
```

```{r}
ggplot(dragons_tbl, aes(x = body_length, y = test_score, colour = site)) +
  facet_wrap(~mountain_range, nrow=3) +
  theme_bw() +
  geom_point() +
  geom_line(data = cbind(dragons_tbl, pred = predict(lmer_2_fit)), aes(y = pred)) +
  theme(legend.position = "none") +
  scale_color_okabeito() 
```
