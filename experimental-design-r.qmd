```{r echo = FALSE}
pacman::p_load(tidyverse, readxl, knitr, kableExtra, Hmisc,
               grid, agricolae, patchwork, desplot, modelr)
```

# Versuchsplanung in R {#sec-experimental-design-r}

*Version vom `r format(Sys.time(), '%B %d, %Y um %H:%M:%S')`*

![](images/caution.png){fig-align="center" width="50%"}

::: column-margin
Ein Teil der Beispiele basiert auf [DSFAIR von P. Schmidt](https://schmidtpaul.github.io/DSFAIR/DesigningExperiments.html) und wurde von mir angepasst und vereinfacht. Hier findet sich auch weiterführende Literatur und weitere Beispiele.

Im Weiteren schauen wir uns auch das R Paket `agricolae` mit Beispielen von [Experimental Designs with agricolae](https://myaseen208.com/agricolae/articles/ExperimentalDesign.html) genauer einmal an.
:::

In diesem Kapitel wollen wir

[Design of Experiments (DoE) & Analysis of Experimental Data](https://cran.r-project.org/web/views/ExperimentalDesign.html)

[dae: Functions Useful in the Design and ANOVA of Experiments](https://cran.r-project.org/web/packages/dae/index.html)

Was heißt hier *nested* (deu. *verschachtelt*). Wer ist in was nested?

## Genutzte R Pakete für das Kapitel

Wir wollen folgende R Pakete in diesem Kapitel nutzen.

```{r echo = TRUE}
#| message: false
pacman::p_load(tidyverse, magrittr, writexl,
               conflicted)
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("mutate", "dplyr")
conflict_prefer("set_names", "magrittr")
cbbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", 
                "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
```

Am Ende des Kapitels findest du nochmal den gesamten R Code in einem Rutsch zum selber durchführen oder aber kopieren.

:::

## Selbermachen mit `expand_grid()`

$$
y \sim \overbrace{trt}^{f_1} + \underbrace{block}_{f_2} 
$$

```{r}
data_long_tbl <- expand_grid(trt = 1:4, block = 1:4) %>% 
  mutate(trt = factor(trt, labels = c("ctrl", "A", "B", "C")),
         block = factor(block, labels = as.roman(1:4)),
         id = sample(1:n()))

data_long_tbl
```

`pivot_wider()`

```{r}
data_wide_tbl <- pivot_wider(data_long_tbl, names_from = block, values_from = id)
data_wide_tbl
```

```{r}
#| eval: false
#| message: false
#| warning: false
data_wide_tbl %>% 
  write_xlsx("template_sheet.xlsx")
```

```{r}
sample(1:16) %>% 
  matrix(ncol = 4, nrow = 4)
```

$$
y \sim \overbrace{trt}^{f_1} + \underbrace{block}_{f_2} + \overbrace{location}^{f_3}
$$

```{r}
data_long_tbl <- expand_grid(location = 1:2, trt = 1:4, block = 1:4) %>% 
  mutate(location = factor(location, labels = c("north", "south")),
         trt = factor(trt, labels = c("ctrl", "A", "B", "C")),
         block = factor(block, labels = as.roman(1:4)),
         id = sample(1:n()))

data_long_tbl
```

```{r}
data_wide_lst <- data_long_tbl %>% 
  split(.$location) %>% 
  map(~pivot_wider(., names_from = block, values_from = id))

data_wide_lst
```

```{r}
data_wide_lst %>% 
  write_xlsx("template_sheet.xlsx")
```

sample ID Spalte und fertig ist

## Das R Paket `agricolae`

## Das R Paket `desplot`

[Plotting field maps with the desplot package](https://cran.r-project.org/web/packages/desplot/vignettes/desplot_examples.html)

## Das R Paket `agridat`

[agridat: Agricultural Datasets](https://cran.r-project.org/web/packages/agridat/index.html)
