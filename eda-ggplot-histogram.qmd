Wir nutzen für die Erstellung eines Histogramms den Datensatz `dog_fleas_hist.csv`. Wir brauchen für ein anständiges Histogramm, wo du auch was erkennen kannst, mindestens 20 Beobachtung. Am besten mehr noch mhr Beobachtungen. Deshalb schauen wir uns jetzt einmal 39 Hunde an und zählen wieviele Flöhe die Hunde jeweils haben, dargestellt in der Spalte`flea_count`. Darüber hinaus bestimmen wir auch noch das mittlere Gewicht der Flöhe auf dem jeweiligen Hund, dargestellt in der Spalte `flea_weight`.

```{r}
#| message: false
dog_fleas_hist_tbl <- read_csv("data/dog_fleas_hist.csv")
```

```{r}
#| echo: false
#| label: tbl-cat-dog-histogram
#| tbl-cap: "Beispieldatensatz für die Anzahl an Flöhen auf 39 Hunden. Gezählt wurde die Anzahl an Flöhen `flea_count` und das gemittelte Gewicht der Flöhe `flea_weight`. Hier die ersten sieben Zeilen des Datensatzes."

dog_fleas_hist_tbl %>% head(7) %>% kable(align = "c", "pipe")
```

@tbl-cat-dog-histogram zeigt den Datensatz `dog_fleas_hist.csv`. Wir wollen jetzt die Variable `flea_count` und `flea_weight` jeweils abbilden. Wir beginnen mit der diskreten Variable `flea_count`. Im Gegensatz zu der Variable `flea_weight` haben wir bei der Anzahl gleiche Zahlen vorliegen, die wir dann zusammen darstellen können. @fig-dotplot-flea-1 zeigt die Darstellung der Tabelle. Auf der x-Achse ist die Anzahl an Flöhen dargestellt. Auf der y-Achse die Anzahl der jeweiligen Anzahl an Flöhen. Das klingt jetzt etwas schief, aber schauen wir uns die Abbilung näher an.

```{r }
#| echo: false
#| message: false
#| label: fig-dotplot-flea-1
#| fig-align: center
#| fig-height: 4
#| fig-width: 6
#| fig-cap: "Die Anzahl von Flöhen auf 39 Hunden. Jeder Punkt entspricht einem Hund und der entsprechenden Anzahl an Flöhen auf dem Hund."


ggplot(dog_fleas_hist_tbl, aes(x = flea_count)) + 
  geom_dotplot() +
  theme_bw() +
  scale_x_continuous(breaks = c(14,15,16,17,18,19)-14) +
  scale_y_continuous(labels = c(0, 5, 9, 13, 17)) +
  labs(x = "Anzahl Flöhe", y = "Anzahl") 

```

Wir sehen in @fig-dotplot-flea-1 das acht Hunde keine Flöhe hatten - also eine Anzahl an Flöhen von 0. Auf der anderen Seite hatten zwei Hunde vier Flöhe und ein Hund hatte sogar fünf Flöhe. Wir sehen also die *Verteilung* der Anzahl an Flöhen über alle unsere 39 Hundebeobachtungen.

Wir schauen uns aber die Verteilung der Anzahl an Flöhen meist nicht in der Form von gestapelten Punkten an, sondern in der Form eines Histogramms also einem Balkendiagramm. @fig-hist-flea-count zeigt das Histogramm für die Anzahl der Flöhe.

```{r}
#| echo: true
#| message: false
#| label: fig-hist-flea-count
#| fig-align: center
#| fig-height: 4
#| fig-width: 6
#| fig-cap: "Histogramm der Anzahl von Flöhen auf 39 Hunden."

ggplot(data = dog_fleas_hist_tbl, aes(x = flea_count)) +
  geom_histogram(binwidth = 1, fill = "gray", color = "black") +
  theme_bw() +
  labs(x = "Anzahl Flöhe", y = "Anzahl") 
```

Was sehen wir in der @fig-hist-flea-count? Anstatt von gestapelten Punkten sehen wir jetzt Balken, die die jeweilige Anzahl an Flöhen zusammenfassen. Der Unterschied ist bei einer diskreten Variable wie der Anzahl (eng. *count*) relativ gering.

Anders sieht es für kontenuierliche Variablen mit Kommazahlen aus. Schauen wir uns das Gewicht der Flöhe an, so sehen wir, dass es sehr viele Zahlen gibt, die nur einmal vorkomen. @fig-hist-flea-1 zeigt das Histogramm für das Geicht der Flöhe.

```{r}
#| echo: true
#| message: false
#| label: fig-hist-flea-1
#| fig-align: center
#| fig-height: 4
#| fig-width: 6
#| fig-cap: "Histogramm des Gewichts von Flöhen auf 39 Hunden."

ggplot(data = dog_fleas_hist_tbl, aes(x = flea_weight)) +
  geom_histogram(binwidth = 1, fill = "gray", color = "black") +
  theme_bw() +
  labs(x = "Gewicht [mg]", y = "Anzahl") 
```

Wie entsteht nun ein Hisotgramm für konetnierliche Zahlen? Schauen wir uns dafür einmal ein kleineres Datenbeispiel an, in dem wir nur Flöhe mit einem Gewicht größer als 11 und kleiner als 19 wäheln. Wir nutzen dazu die Funktion `filter(flea_weight > 11 & flea_weight < 19)`. Wir erhalten folgende Zahlen und das entsprechende Histogramm.

```{r }
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| label: fig-hist-flea-2
#| fig-height: 4
#| fig-width: 6
#| fig-cap: "Zusammenhang zwischen den einzelnen Beobachtungen und der Höhe der einzelnen Balken am Beispiel von acht Hunden."

small_tbl <- dog_fleas_hist_tbl %>% 
  filter(flea_weight > 11 & flea_weight < 19)

small_tbl %>% 
  arrange(flea_weight) %>% 
  pull(flea_weight)

ggplot(data = small_tbl, aes(x = flea_weight)) +
  geom_histogram(binwidth = 1, fill = "gray", color = "black", alpha = 0.5) +
  scale_x_continuous(breaks = 11:19) +
  scale_y_continuous(breaks = 0:5) +
  geom_vline(xintercept = seq(10.5, 19.5), color = cbbPalette[6], alpha = 0.5,
             linetype = "dashed") +
  geom_vline(xintercept = small_tbl$flea_weight, color = cbbPalette[7], size = 1.5) +
  geom_hline(yintercept = 0:5, color = cbbPalette[6], alpha = 0.5,
             linetype = "dashed") +
  theme_bw() +
  labs(x = "Gewicht [mg]", y = "Anzahl") 

```

@fig-hist-flea-2 zeigt das Histogramm der reduzierten Daten. Die roten vertikalen Linien zeigen die Position der einzelnen Flohgewichte auf der x-Achse. Die blauen Hilfslinien machen nochmal klarer, wie hoch die einzelnen Balken sind sowie welche Beobachtungen auf der x-Achse in den jeweiligen Balken mit eingehen. Wir sehen, dass wir einen Hund mit Flöhen haben, die zwischen 12.5 und 13.5 wiegen - der entsprechende Balken erhält die Anzahl von eins. Auf der anderen Seite sehen wir, dass es drei Hunde mit Flöhen, die zwischen 17.5 und 18.5 wiegen. Daher wächst der Balken auf eine Anzahl von drei.

Wir können mit der Option `binwidth` in dem `geom_histogram()` einstellen, wie breit auf der x-Achse die jeweiligen Balken sein sollen. Hier empfiehlt es sich verschiedene Zahlen für `binwidth`auszuprobieren.

### Density Plot

Eine weitere Möglichkeit sich eine Verteilung anzuschauen, ist die Daten nicht als Balkendiagramm sondern als Densityplot - also Dichteverteilung - anzusehen. Im Prinzip verwandeln wir die Balken in eine Kurve. Damit würden wir im Prinzip unterschiedliche Balkenhöhen ausgleichen udn eine "glattere" Darstellung erreichen. Wir wir aber gleich sehen werden, benötigen wir dazu eine Menge an Beoabchtungen und auch dann ist das Ergebnis eventuell nicht gut zu interpretieren.

```{r }
#| echo: true
#| message: false
#| label: fig-dens-flea-1
#| fig-align: center
#| fig-height: 5
#| fig-width: 6
#| fig-cap: "Zusammenhang von Histogramm und Densityplot an der Anzahl der Flöhe auf 39 Hunden."
#| fig-subcap: 
#|   - "Histogramm"
#|   - "Densityplot"
#| layout-nrow: 1


ggplot(data = dog_fleas_hist_tbl, aes(x = flea_count)) +
  geom_histogram(binwidth = 1, fill = "gray", color = "black") +
  theme_bw() +
  labs(x = "Anzahl Flöhe", y = "Anzahl")

ggplot(data = dog_fleas_hist_tbl, aes(x = flea_count)) +
  geom_density(fill = "gray", color = "black") +
  theme_bw() +
  labs(x = "Anzahl Flöhe", y = "Häufigkeit") 


```

@fig-dens-flea-1 zeigt auf der linken Seite erneut die Abbildung des Histogramms als Balkendiagramm für die Anzahl der Flöhe auf den 39 Hunden. Auf der rechten Seite die entsprechenden gleichen Daten als Denistyplot. Klar ist die Wellenbewegung des Densityplots zu erkennen. Hier leigen zu wenige Beobachtungen und Kategorien auf der x-Achse vor, so dass der Densityplot nicht zu empfehlen ist.

```{r }
#| echo: true
#| message: false
#| label: fig-dens-flea-2
#| fig-align: center
#| fig-height: 5
#| fig-width: 6
#| fig-cap: "Zusammenhang von Histogramm und Densityplot am Gewicht der Flöhe auf 39 Hunden."
#| fig-subcap: 
#|   - "Histogramm"
#|   - "Densityplot"
#| layout-nrow: 1


ggplot(data = dog_fleas_hist_tbl, aes(x = flea_weight)) +
  geom_histogram(binwidth = 1, fill = "gray", color = "black") +
  theme_bw() +
  labs(x = "Gewicht [mg]", y = "Anzahl") 

ggplot(data = dog_fleas_hist_tbl, aes(x = flea_weight)) +
  geom_density(fill = "gray", color = "black") +
  theme_bw() +
  labs(x = "Gewicht [mg]", y = "Häufigkeit") 



```

@fig-dens-flea-2 zeigt auf der linken Seite erneut die Abbildung des Histogramms als Balkendiagramm für das Gewicht der Flöhe auf den 39 Hunden. Insbesondere bei dieser Abbildung erkennst du die Nachteile des Densityplot. Dadurch das es einen Peak von acht Hunden mit einem Flohgewicht von 0 gibt, zeigt der Densityplot eine seltsame Wellenform. Es emppfielt sich daher die Daten zuerst als Histogramm zu betrachten.
