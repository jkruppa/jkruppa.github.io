# Reguläre Ausdrücke {#sec-regular-expr}

*Version vom `r format(Sys.time(), '%B %d, %Y um %H:%M:%S')`*

```{r}
#| warning: false
#| echo: false

pacman::p_load(tidyverse, readxl, knitr, kableExtra)
```

```{r}
#| warning: false

data_tbl <- read_excel("data/flea_dog_cat_fox.xlsx")
```

## Einen `character` mit `stringr` bearbeiten {#sec-stringr}

![](images/caution.png){fig-align="center" width="50%"}

[stringr](https://stringr.tidyverse.org/)

```{r}
regex_tbl <- tibble(animal = c("cat", "cat", "cat", "dog", "dog", "bird"),
                    site = c("village", "village", "town", "town", "town", "city"),
                    time = c("t1_1", "t2_2", "t3_3", "t3_4", "t3_5", "t3_6"))
```

```{r}
regex_tbl %>% 
  mutate(animal_site = str_c(animal, "-", site))
```

```{r}
regex_tbl %>% 
  mutate(animal_pad = str_pad(animal, pad = "0", width = 5, side = "left"))
```

```{r}
regex_tbl %>% 
  separate(time, into = c("time", "rep"), sep = "_", convert = TRUE)
```

## Regular expressions {#sec-regex}

![](images/caution.png){fig-align="center" width="50%"}

[Regular expressions in stingr](https://stringr.tidyverse.org/articles/regular-expressions.html)

[Regular expressions](https://r4ds.had.co.nz/strings.html)

```{r}
data_tbl %>% 
  select(matches("_"))
```

```{r}
data_tbl %>% 
  select(one_of("animal", "grade"))
```

Beachte auch folgende Funktionen

`all_of`, `any_of`, `contains`, `ends_with`, `everything`, `last_col`, `num_range`, `starts_with`
