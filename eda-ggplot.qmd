# Grundlagen in ggplot()

```{r}
#| warning: false
#| echo: false

pacman::p_load(tidyverse, readxl, knitr, kableExtra)

```

[Wir nennen eine Abbildung auch häufig Plot. Das ist der englische Begriff und hat nichts in unserem Kontext mit einer Fläche zu tun.]{.aside} Ein wichtiger Teil in der Analyse von Daten ist die Visualisierung. Wir glauben keine Auswertung eines mathematischen Algorithmus, wenn wir nicht die Bestätigung in einer Abbildung sehen. Daher ist die Visualisierung die Grundlage für ein fundiertes, wissenschaftliches Arbeiten. In diesem Kapitel stelle ich dir verschiedene Abbilungen vor, die uns helfen werden zu Verstehen ob es einen Zusammenhang zwischen Y und X gibt.

[Im Gegensatz zu dem Pipe-Operator `%>%` nutzt ggplot den Operator `+` um die verschiedenen ggplot Funktionen (`geom_`) miteinander zu verbinden.]{.aside} Wir nutzen in R das R Paket `ggplot2` um unsere Daten zu visualisieren. Die zentrale Idee von `ggplot2` ist, dass wir uns eine Abbildung wie ein Sandwich bauen. Zuerst legen wir eine Scheibe Brot hin und legen uns dann Scheibe für Scheibe weitere Schichten übereinander. Oder die Idee eines Bildes, wo wir erst die Leinwand definieren und dann Farbschicht über Farbschicht auftragen. Das Konzept von `ggplot2`ist schlecht zu be*schreiben* deshalb habe ich auch noch zwei Videos hierfür gemacht. Um den Prozess von `ggplot2` zu visualisieren...

::: callout-tip
## Grundlagen von ggplot() im Video

Du findest auf YouTube [Einführung in R - Teil 16.0 - Trockenübung ggplot2 simpel und einfach erklärt](https://youtu.be/SGwSVzJ9C-s) als Video.

Sowie auch auf YouTube [Einführung in R - Teil 16.1 - Abbildungen mit ggplot in R erstellen. Idee und Konzept von ggplot](https://youtu.be/SRRQQO3DXtc) als Video. Also alles nochmal als Video - vielleicht einfacher nachzuvollziehen als in einem Fließtext.
:::

Die Funktion `ggplot()` ist die zentrale Funktion, die die Leinwand erschafft auf der wir dann verschiedene Schichten aufbringen werden. Diese Schichten heißen `geom`. Es gibt nicht nur ein `geom` sondern mehrere. Zum Beispiel das `geom_boxplot` für die Erstellung von Boxplots, das `geom_histogram` für die Erstellung von Histogrammen. [Die Auswahl ist riesig](https://ggplot2.tidyverse.org/reference/index.html). Die einzelnen Schichten werden dann über den Operator `+` miteinander verbunden. Soviel erstmal zur Trockenübung. Schauen wir uns das ganze einmal an einem Beispiel an.

Wir alden den Datensatz `flea_cat_dog.xlsx` und wollen einzelne Variablen visualisieren.

```{r}
flea_dog_cat_tbl <- read_excel("data/flea_dog_cat.xlsx")
```

```{r}
#| echo: false
flea_dog_cat_tbl %>% kable(align = "c", "pipe")
```

```{r}
#| echo: true
#| message: false
#| label: fig-ggplot-1
#| fig-align: center
#| fig-height: 3
#| fig-width: 5
#| fig-cap: "An 39 Hunden wurde die Anzahl an Flöhen gezählt."

ggplot(data = flea_dog_cat_tbl, aes(x = animal , y = jump_length))

```

## Häufig verwendete Abbildungen

In diesem Kapitel wollen wir durch die häufigsten und wichtigsten Abbildungen in der explorativen Datenanalyse durchghen.

-   **Histogramm** in @sec-eda-histogramm für mehr als 20 Beobachtungen (pro Gruppe)
-   **Boxplot** in @sec-eda-boxplot für 5 bis 20 Beobachtungen (pro Gruppe)
-   **Dotplot** in @sec-eda-dotplot für 3 bis 5 Beobachtungen (pro Gruppe)
-   **Scatterplot** in @sec-eda-scatter für zwei kontinuierliche Variablen
-   **Mosaicplot** in @sec-eda-mosaic für zwei diskrete Variablen

::: callout-tip
## Histogramm, Boxplot, Scatterplot und Mosaicplot im Video

Du findest auf YouTube [Einführung in R - Teil 16.2 - Histogramm, Boxplot, Scatterplot und Mosaicplot mit ggplot in R](https://youtu.be/Zdw6NlLauNw) als Video. Weitere Videos werden dann noch folgen und ergänzt.
:::

### Histogramm {#sec-eda-histogramm}

```{r}
#| echo: false

data_tbl <- read_excel("data/flea_dog_cat.xlsx")

dog_fleas_tbl <- read_csv("data/dog_fleas_hist.csv")

```

```{r}
dog_fleas_tbl %>% kable(align = "c", "pipe")
```

```{r }
#| echo: false
#| message: false
#| label: fig-dotplot-flea-1
#| fig-align: center
#| fig-height: 3
#| fig-width: 5
#| fig-cap: "An 39 Hunden wurde die Anzahl an Flöhen gezählt."


ggplot(dog_fleas_tbl, aes(x = flea_count)) + 
  geom_dotplot() +
  theme_bw() +
  scale_x_continuous(breaks = c(12,13,14,15,16,17,18,19)) +
  scale_y_continuous(labels = c(0, 5, 9, 13, 17)) +
  labs(x = "Anzahl Flöhe", y = "Anzahl") 

```

```{r}
#| echo: true
#| message: false
#| label: fig-hist-flea-1
#| fig-align: center
#| fig-height: 3
#| fig-width: 5
#| fig-cap: "An 39 Hunden wurde die Anzahl an Flöhen gezählt."

ggplot(data = dog_fleas_tbl, aes(x = flea_weight)) +
  geom_histogram(binwidth = 1, fill = "gray", color = "black") +
  theme_bw() +
  labs(x = "Gewicht [mg]", y = "Anzahl") 
```

```{r }
#| echo: false
#| message: false
#| label: fig-hist-flea-2
#| fig-align: center
#| fig-height: 3
#| fig-width: 5
#| fig-cap: "An 39 Hunden wurde die Anzahl an Flöhen gezählt."

ggplot(data = dog_fleas_tbl, aes(x = flea_weight)) +
  geom_histogram(binwidth = 1, fill = "gray", color = "black") +
  scale_x_continuous(breaks = 7:33) +
  scale_y_continuous(breaks = 0:7) +
  geom_vline(xintercept = 7:33, color = "blue", alpha = 0.5,
             linetype = "dashed") +
  geom_hline(yintercept = 0:7, color = "blue", alpha = 0.5,
             linetype = "dashed") +
  theme_bw()

```

Wenn wir viele Beobachtungen haben. Viele meint mehr als zwanzig Beobachtungen.

### Density Plot

```{r }
#| echo: true
#| message: false
#| label: fig-dens-flea-1
#| fig-align: center
#| fig-height: 4
#| fig-width: 5
#| fig-cap: "An 39 Hunden wurde die Anzahl an Flöhen gezählt."


ggplot(data = dog_fleas_tbl, aes(x = flea_weight)) +
  geom_density(fill = "gray", color = "black") +
  xlim(0, 40) +
  theme_bw()

```

Wenn wir viele Beobachtungen.

### Boxplot {#sec-eda-boxplot}

![kjasdsaddssd](images/boxplot-drawn.png){#fig-boxplot-drawn fig-align="center" width="100%"}

@fig-boxplot-drawn

```{r }

data_tbl <- read_excel(file.path("data/germination_data.xlsx"))

```

```{r}
#| column: page
data_tbl %>% kable(align = "c", "pipe")
```

```{r}
data_tbl <- data_tbl %>% 
  select(treatment, freshmatter, drymatter, root_health)
  
```

```{r }
#| echo: true
#| message: false
#| label: fig-boxplot-freshmatter-1
#| fig-align: center
#| fig-height: 4
#| fig-width: 5
#| fig-cap: "An 39 Hunden wurde die Anzahl an Flöhen gezählt."


ggplot(data = data_tbl, aes(x = treatment, y = freshmatter,
                            fill = treatment)) +
  geom_boxplot() +
  theme_bw()

```

```{r }
#| echo: true
#| message: false
#| label: fig-boxplot-freshmatter-2
#| fig-align: center
#| fig-height: 4
#| fig-width: 5
#| fig-cap: "An 39 Hunden wurde die Anzahl an Flöhen gezählt."


ggplot(data = data_tbl, aes(x = treatment, y = freshmatter,
                            fill = treatment)) +
  geom_boxplot() +
  geom_jitter(width = 0.25, shape = 1) +
  theme_bw()

```

Wenn wir wenige Beobachtungen haben.

### Dotplot {#sec-eda-dotplot}

Wenn wir ganz wenige Beobachtungen haben.

```{r echo = TRUE, fig.width = 5, fig.height = 5}

ggplot(data = data_tbl, aes(x = treatment, y = root_health,
                            fill = treatment)) +
  geom_dotplot(binaxis = "y", stackdir = "center") +
  theme_bw()

```

```{r echo = TRUE, fig.width = 5, fig.height = 5}

ggplot(data = data_tbl, aes(x = freshmatter, fill = treatment)) +
  geom_dotplot(method="histodot", binwidth = 2.5) +
  theme_bw()

```

```{r echo = TRUE, fig.width = 5, fig.height = 5}

ggplot(data = data_tbl, aes(x = treatment, y = freshmatter,
                            fill = treatment)) +
  geom_violin() +
  geom_dotplot(binaxis = "y", stackdir = "center", fill = "black") +
  theme_bw()

```

```{r echo = TRUE, fig.width = 5, fig.height = 5}
ggplot(data = data_tbl, aes(x = treatment, y = root_health,
                            fill = treatment)) +
  geom_dotplot(binaxis = "y", stackdir = "center") +
  stat_summary(fun = median, fun.min = median, fun.max = median,
               geom = "crossbar", width = 0.5) +
  theme_bw()

```

### Scatterplot {#sec-eda-scatter}

```{r echo = TRUE, fig.width = 5, fig.height = 5}
ggplot(data = data_tbl, aes(x = freshmatter, y = drymatter)) +
  geom_point() +
  stat_smooth(method = "lm", se = FALSE) +
  theme_bw()

```

### Mosaic Plot {#sec-eda-mosaic}

### Abbildungen beschriften

```{r echo = TRUE, fig.width = 5, fig.height = 5}

ggplot(data = data_tbl, aes(x = treatment, y = freshmatter,
                            fill = treatment)) +
  geom_boxplot() +
  labs(title = "Frischgewicht in Abhängigkeit von der Behandlung",
       x = "Behandlung", y = "Frischgewicht in kg/ha",
       fill = "Behandlung") +
  theme_bw()

```
