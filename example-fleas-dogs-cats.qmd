```{r echo = FALSE}
pacman::p_load(tidyverse, readxl, knitr, kableExtra, openxlsx)
```

# Beispiel 2: Von Flöhen, Hunden und Katzen {#sec-example-2}

```{r echo = FALSE}
y_jump_cat <- c(3.2, 2.2, 5.4, 4.1, 4.3, 7.9, 6.1)
y_count_cat <- c(12, 13, 11, 12, 16, 9, 7)
y_grade_cat <- c(9, 5, 7, 8, 6, 6, 8)
y_infected_cat <- c(1, 0, 0, 0, 1, 0, 0)
```

Wir wollen jetzt das Beispiel von den Hunden und Flöhen um eine Spezies erweitern. Wir nehmen noch die Katzen mit dazu und fragen uns, wie sieht es mit der Sprungfähigkeit von Katzen und Hundeflöhen aus? Konzentrieren wir uns hier einmal auf die Sprungweite. Wir können wie in dem Beispiel [-@sec-example-1] die Sprungweiten \[cm\] wieder aufschreiben:

$$
Y_{jump} = \{`r str_c(y_jump_cat, collapse = ", ")`\}.
$$

Wenn wir jetzt die Sprungweiten der Hundeflöhe mit den Katzenflöhen vergleichen wollen haben wir ein Problem. Beide Zahlenvektoren heißen gleich, nämlich $Y_{jump}$. Wir könnten jeweils in die Indizes noch $dog$ und $cat$ schreiben als $Y_{jump,\, dog}$ und $Y_{jump,\, cat}$ und erhalten folgende Vektoren.

$$
Y_{jump,\, dog} = \{`r str_c(y_jump_dog, collapse = ", ")`\}
$$

$$
Y_{jump,\, cat} = \{`r str_c(y_jump_cat, collapse = ", ")`\}
$$

Dadurch werden die Indizes immer länger und unübersichticher. Auch das $Y$ einfach $Y_{dog}$ oder $Y_{cat}$ zu nennen ist keine Lösung - wir wollen uns vielleicht später nicht nur die Sprungweite vergleichen, sondern vielleicht auch die Anzahl an Flöhen oder den Infektionsstatus. Dann ständen wir wieder vor dem Problem die $Y$ für die verschiedenen Outcomes zu unterscheiden. Daher erstellen wir uns die @tbl-dog-cat-wide. Wir haben jetzte eine *Daten*tabelle.

```{r echo = FALSE}
#| label: tbl-dog-cat-wide
#| tbl-cap: Sprunglängen [cm] für Hunde- und Katzenflöhe. Die Tabelle ist im Wide-Format dargestellt.

tibble(dog = y_jump_dog,
       cat = y_jump_cat) %>%
  kable(align = "c", "pipe")

```

Intuitiv ist die @tbl-dog-cat-wide übersichtlich und beinhaltet die Informationen die wir wollten. Dennoch haben wir das Probem, das wir in dieser @tbl-dog-cat-wide nicht noch weitere Outcomes angeben können. Wir können die Anzahl an Flöhen auf den Hunde und Katzen nicht darstellen. Als Lösung ändern wir die @tbl-dog-cat-wide in das Long-Format. Dargestellt in @tbl-dog-cat-long. Jede Beobachtung belegt nun eine Zeile. Dies ist sehr wichtig im Kopf zu behalten, wenn du eigene Daten in z.B. Excel eingibts.

```{r echo = FALSE}
#| label: tbl-dog-cat-long
#| tbl-cap: Sprunglängen [cm] für Hunde- und Katzenflöhe. Die Tabelle ist im Long-Format dargestellt.


data_tbl <- tibble(dog = y_jump_dog,
       cat = y_jump_cat) %>%
  gather(animal, jump_length) %>%
  mutate(flea_count = c(y_count_dog, y_count_cat),
         grade = c(y_grade_dog, y_grade_cat),
         infected = c(y_infected_dog, y_infected_cat))

write.csv2(data_tbl, "data/flea_dog_cat.csv", row.names = FALSE)
write.xlsx(data_tbl, "data/flea_dog_cat.xlsx", row.names = FALSE)


data_tbl %>%
  kable(align = "c", "pipe")


```

## Palmer Penguins

[Palmer Penguins](https://allisonhorst.github.io/palmerpenguins/index.html)
