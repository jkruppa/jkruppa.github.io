```{r echo = FALSE}
#| message: false
#| warning: false
pacman::p_load(tidyverse, readxl, knitr, kableExtra, Hmisc, performance, parameters,
               latex2exp, see, patchwork, mfp, multcomp, emmeans, janitor, effectsize,
               broom, ggmosaic, tinytable, ggrepel, tidyplots,
               conflicted)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::filter)
cb_pal <- c("#000000", "#E69F00", "#56B4E9", 
            "#009E73", "#F0E442", "#F5C710", 
            "#0072B2", "#D55E00", "#CC79A7")
cbbPalette <- cb_pal
source("stat-tests-anova_plot/repeated_plots.R")
```

# Der Friedman Test {#sec-friedman}

*Letzte Änderung am `r format(fs::file_info("stat-tests-friedman.qmd")$modification_time, '%d. %B %Y um %H:%M:%S')`*

> *"It's easy to lie with statistics. It's hard to tell the truth without statistics." --- Andrejs Dunkels*

![](images/caution.png){fig-align="center" width="100%"}

::: {.callout-caution appearance="simple"}
## Stand des Kapitels: Baustelle (seit 06.2025)

Dieses Kapitel wird überarbeitet. Ziel ist es die Nichtparametrik zum Start des Wintersemesters 2025/26 überarbeitet zu haben. Da ich hier direkt im Kapitel arbeite, kann es sein, dass mal die ein oder andere Funktion nicht funktioniert oder aber Teile im Nichts enden. Wird dann repariert.
:::

[Zwei Arten des Friedman Tests](https://math.montana.edu/jobo/thainp/ksampa.pdf)

## Allgemeiner Hintergrund

[Beware the Friedman test!](https://seriousstats.wordpress.com/2012/02/14/friedman/)

[Tutorium zum Firedman Test](https://rcompanion.org/handbook/F_10.html)

@zimmerman1993relative

Der Friedman Test ist der Kruskal Wallis Test für abhängige Daten. Oder doch nicht?

#### Datenformat {.unnumbered .unlisted}

In der Datentabelle für den Friedman Test haben wir keine Wiederholungen für die Faktorkombinationen vorliegen.

| Faktor B | A.1  | A.2  | A.3  | A.4  |
|----------|------|------|------|------|
| **B.1**  | 9.1  | 10.2 | 12.2 | 14.1 |
| **B.2**  | 4.2  | 5.2  | 6.2  | 7.3  |
| **B.3**  | 12.1 | 14.5 | 12.5 | 13.7 |
| **B.4**  | 1.2  | 3.6  | 3.5  | 7.1  |
| **B.5**  | 4.1  | 4.5  | 4.7  | 8.1  |

: Beispielhafte, aggregierte Datentabelle für einen Friedman Test. In den Spalten ist der Behandlungsfaktor A mit den entsprechenden Leveln A.1 bis A.4 eingetragen. In den Zeilen finden sich der Faktor für Wiederholungen wie Blöcke oder individuelle IDs. Es liegen keine Messwiederholungen für die Faktorkombinationen vor. {#tbl-test}

## Genutzte R Pakete

Wir wollen folgende R Pakete in diesem Kapitel nutzen.

```{r echo = TRUE}
#| message: false
#| warning: false
pacman::p_load(tidyverse, magrittr, broom, pgirmess,
               readxl, rstatix, coin, nparcomp,
               effectsize, PMCMRplus, rcompanion,
               conflicted)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::filter)
```

An der Seite des Kapitels findest du den Link *Quellcode anzeigen*, über den du Zugang zum gesamten R-Code dieses Kapitels erhältst.

## Daten

#### Unabhängige Messungen {.unnumbered .unlisted}

```{r}
#| message: false
block_raw_tbl <- read_excel("data/friedman_data.xlsx",
                            sheet = "block") 
```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-1fac-table-block
#| tbl-cap: "foo."

block_raw_tbl <- read_excel("data/friedman_data.xlsx",
                        sheet = "block") 

rbind(head(block_raw_tbl, n = 4),
      rep("...", times = ncol(block_raw_tbl)),
      tail(block_raw_tbl, n = 4)) |> 
  tt(width = 2/3, align = "c", theme = "striped")
```

```{r}
block_tbl <- block_raw_tbl |>
  group_by(block) |> 
  summarise(across(ctrl:ketchup, mean)) 
```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-1fac-table-block-aggr
#| tbl-cap: "foo."

block_tbl |> 
  tt(width = 2/3, align = "c", theme = "striped")
```

```{r}
block_long_tbl <- block_tbl |> 
  pivot_longer(cols = ctrl:ketchup,
               names_to = "feeding",
               values_to = "jump_length") |> 
  mutate(block = as_factor(block),
         feeding = as_factor(feeding))
```

```{r}
#| echo: true
#| message: false
#| warning: false
#| label: fig-fried-ggplot-block
#| fig-align: center
#| fig-height: 5
#| fig-width: 6
#| fig-cap: "Dotplot des Datenbeispiels für die Bonitur von fünf Weizensorten."

ggplot(block_long_tbl, aes(feeding, jump_length, fill = block)) +
  theme_minimal() +
  geom_dotplot(binaxis = "y", stackdir='center', 
               position=position_dodge(0.3)) +
  scale_fill_okabeito() 
```

#### Abhängige Messungen {.unnumbered .unlisted}

```{r}
#| message: false
repeated_tbl <- read_excel("data/friedman_data.xlsx",
                           sheet = "repeated") 
```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-1fac-table-repeated
#| tbl-cap: "Tabelle der Sprungweiten in [cm] als Messwert $y$ von Hunde-, Katzen- und Fuchsflöhen. Der Datensatz ist einfaktoriell, da wir nur einen Faktor vorliegen haben."

repeated_tbl |> 
  tt(width = 2/3, align = "c", theme = "striped")
```

```{r}
repeated_long_tbl <- repeated_tbl |> 
  pivot_longer(cols = t1:t4,
               names_to = "time",
               values_to = "jump_length") |> 
  mutate(flea_id = as_factor(flea_id),
         time_fct = as_factor(time))
```

```{r}
#| echo: true
#| message: false
#| warning: false
#| label: fig-fried-ggplot-repeated
#| fig-align: center
#| fig-height: 5
#| fig-width: 6
#| fig-cap: "Dotplot des Datenbeispiels für die Bonitur von fünf Weizensorten."

ggplot(repeated_long_tbl, aes(time_fct, jump_length, fill = flea_id)) +
  theme_minimal() +
geom_line(aes(group = flea_id), color = "gray",
            position=position_dodge(0.3)) +
  geom_dotplot(binaxis = "y", stackdir='center', 
               position=position_dodge(0.3)) +
  scale_fill_okabeito() 
```

## Hypothesen

Der Friedman Test betrachtet wie auch der Kruskal-Wallis-Test die Mediane $\widetilde{y}$ und Ränge um einen Unterschied nachzuweisen. Daher haben wir in der Nullhypothese als Gleichheitshypothese. In unserem Beispiel lautet die Nullhypothese, dass die Mediane jedes Levels des Faktors `variety` gleich sind.

$$
H_0: \; \widetilde{y}_{A} = \widetilde{y}_{B} = \widetilde{y}_{C} = \widetilde{y}_{D} = \widetilde{y}_{E}
$$

Die Alternative lautet, dass sich mindestens ein paarweiser Vergleich in den Medianen unterschiedet. Hierbei ist das *mindestens ein Vergleich* wichtig. Es können sich alle Mediane unterschieden oder eben nur ein Paar. Wenn ein Friedman Test die $H_0$ ablehnt, also ein signifikantes Ergebnis liefert, dann wissen wir nicht, welche Mediane sich unterscheiden. Bein unseren fünf Weizensorten kommt da eine ganze Menge an Vergleichen zusammen. In der Folge nur ein Ausschnitt aller Alternativehypothesen.

$$
\begin{aligned}
H_A: &\; \widetilde{y}_{A} \ne \widetilde{y}_{B}\\
\phantom{H_A:} &\; \widetilde{y}_{A} \ne \widetilde{y}_{C}\\
\phantom{H_A:} &\; ...\\
\phantom{H_A:} &\; \widetilde{y}_{D} \ne \widetilde{y}_{E}\\
\phantom{H_A:} &\; \mbox{für mindestens ein Paar}
\end{aligned}
$$

Damit kommen uns die Hypothesen nicht so unbekannt vor. Die Hypothesenpaare sind die gleichen wie in einer ANOVA bzw. dem Kruskal-Wallis-Test.

## Der Friedman Test

### ... mit unabhängigen Messwerten

Das [Tutorial von Salvatore S. Mangiafico zum Friedman Test](https://rcompanion.org/handbook/F_10.html) liefert eine sehr ausführliche Anwendung über mehrere R Pakete hinweg.

Der Friedman Test ist in R in verschiedenen Paketen implementiert. Wir nehmen die Standardfunktion `friedman.test()`. Wichtig ist wie wir in der Funktion das Modell definieren. Wir nutzen das Symbol `|` um die Behandlung von dem Block zu trennen. Vor dem `|` Symbol steht die Behandlung, hinter dem `|` steht der Block. Damit sieht das Modell etwas anders aus, aber im Prinzip ist die Definition des Modells einfach.

::: panel-tabset
## Theoretisch

| Block  |      Kontrolle       |         Blut         |       Ketchup        |
|:------:|:--------------------:|:--------------------:|:--------------------:|
|   1    | $7.07 \rightarrow 1$ | $5.57 \rightarrow 2$ | $1.43 \rightarrow 3$ |
|   2    | $7.33 \rightarrow 2$ | $8.17 \rightarrow 1$ | $2.50 \rightarrow 3$ |
|   3    | $9.43 \rightarrow 1$ | $4.50 \rightarrow 2$ | $4.30 \rightarrow 3$ |
|   4    | $6.33 \rightarrow 2$ | $5.43 \rightarrow 3$ | $7.20 \rightarrow 1$ |
|   5    | $2.67 \rightarrow 3$ | $8.43 \rightarrow 1$ | $3.50 \rightarrow 2$ |
| $\sum$ |         $9$          |         $9$          |         $12$         |

: text {tbl-friedman-theo-block}

$$
E(R) = \cfrac{N(k+1)}{2} = \cfrac{5(3+1)}{2} = 10
$$

$$
\mathcal{X}^2 = \cfrac{12}{N \cdot k \cdot (k+1)} \cdot \sum R^2 - 3 \cdot N \cdot (k+1)
$$

$$
\begin{aligned}
\mathcal{X_D}^2 &= \cfrac{12}{5 \cdot 3 \cdot (3+1)} \cdot (9^2 + 9^2 + 12^2) - 3 \cdot 5 \cdot (3+1) \\
&= 0.2 \cdot 306 - 60 \\
&= 1.6
\end{aligned}
$$

$\mathcal{X}^2_{\alpha = 5\%}$ ist in unserem Fall mit $5.99$ gegeben.

## `{stats}`

```{r}
#| message: false
#| warning: false
friedman.test(jump_length ~ feeding | block, data = block_long_tbl)
```

Nachdem wir die Funktion aufgerufen haben, erhalten wir auch gleich den $p$-Wert von $0.005$ wieder. Da der $p$-Wert kleienr ist als das Signifikanzniveau $\alpha$ von 5% können wir die Nullhypothese ablehnen. Es gibt mindestens einen paarweisen Unterschied. Das war auch anhand des Doplots zu erwarten.

## `{coin}`

`friedman_test()`

```{r}
#| message: false
#| warning: false
coin::friedman_test(jump_length ~ feeding | block, data = block_long_tbl)
```

## `{rstatix}`

[Friedman Test in R](https://www.datanovia.com/en/lessons/friedman-test-in-r/)

```{r}
#| message: false
#| warning: false
rstatix::friedman_test(jump_length ~ feeding | block, data = block_long_tbl)
```
:::

#### Effektschätzer {.unnumbered .unlisted}

```{r}
#| message: false
#| warning: false
friedman_effsize(jump_length ~ feeding | block, data = block_long_tbl)
```

Wir haben also herausgefunden, dass wir einen starken Effekt haben und sich die Mediane der Gruppen unterscheiden.

#### Parametrische Lösung: Die ANOVA {.unnumbered .unlisted}

```{r}
signed_rank <- function(x) sign(x) * rank(abs(x))
```

`{rstatix}`

```{r}
block_long_tbl |> 
  mutate(ranked_jump_length = signed_rank(jump_length)) |> 
  anova_test(ranked_jump_length ~ feeding + block) 
```

### ... mit abhängigen Messwerten

::: callout-warning
## Achtung, bitte beachten!

[Beware the Friedman test!](https://seriousstats.wordpress.com/2012/02/14/friedman/)

@zimmerman1993relative
:::

::: panel-tabset
## Theoretisch

| Floh | Zeitpunkt 1 | Zeitpunkt 2 | Zeitpunkt 3 | Zeitpunkt 4 |
|:--:|:--:|:--:|:--:|:--:|
| 1 | $10.2 \rightarrow 4$ | $12.4 \rightarrow 2$ | $11.1 \rightarrow 3$ | $13.4 \rightarrow 1$ |
| 2 | $8.3 \rightarrow 2$ | $9.1 \rightarrow 1$ | $6.8 \rightarrow 4$ | $7.1 \rightarrow 3$ |
| 3 | $12.1 \rightarrow 3$ | $15.1 \rightarrow 1$ | $11.3 \rightarrow 4$ | $12.5 \rightarrow 2$ |
| 4 | $7.8 \rightarrow 3$ | $8.1 \rightarrow 2$ | $5.6 \rightarrow 4$ | $8.2 \rightarrow 1$ |
| 5 | $8.6 \rightarrow 3$ | $10.3 \rightarrow 2$ | $8.1 \rightarrow 4$ | $11.3 \rightarrow 1$ |
| $\sum$ | $15$ | $8$ | $19$ | $8$ |

: text {tbl-friedman-theo-block}

$$
E(R) = \cfrac{N(k+1)}{2} = \cfrac{5(4+1)}{2} = 12.5
$$

$$
\mathcal{X}^2 = \cfrac{12}{N \cdot k \cdot (k+1)} \cdot \sum R^2 - 3 \cdot N \cdot (k+1)
$$

$$
\begin{aligned}
\mathcal{X_D}^2 &= \cfrac{12}{5 \cdot 4 \cdot (4+1)} \cdot (15^2 + 8^2 + 19^2 + 8^2) - 3 \cdot 5 \cdot (4+1) \\
&= 0.12 \cdot 714 - 75 \\
&= 10.68
\end{aligned}
$$

$\mathcal{X}^2_{\alpha = 5\%}$ ist in unserem Fall mit $7.82$ gegeben.

## `{nparcomp}`

`mctp.rm()`

```{r}
mctp.rm_obj <- mctp.rm(jump_length ~ time_fct, data = repeated_long_tbl,
                       info = FALSE)
mctp.rm_obj$Analysis
```
:::

#### Parametrische Lösung: Die repeated ANOVA {.unnumbered .unlisted}

```{r}
signed_rank <- function(x) sign(x) * rank(abs(x))
```

`{rstatix}`

```{r}
repeated_aov <- repeated_long_tbl |> 
  mutate(ranked_jump_length = signed_rank(jump_length)) |> 
  anova_test(dv = ranked_jump_length, wid = flea_id, within = time_fct)
get_anova_table(repeated_aov)
```

## Post-hoc Test

::: panel-tabset
## `{pgirmess}`

`friedmanmc()`

```{r}
#| message: false
#| warning: false
friedmanmc_res <-  friedmanmc(y = block_long_tbl$jump_length,
                               groups = block_long_tbl$feeding,
                               blocks = block_long_tbl$block)
```

```{r}
friedmanmc_tbl <- friedmanmc_res$dif.com |> 
  rownames_to_column("comparison") |> 
  as_tibble()
```

```{r}
cldList(p.value ~ comparison, data = friedmanmc_tbl)
```

## `{PMCMRplus}`

Nachdem wir jetzt festgestellt haben, dass sich mindestens ein Gruppenunterschied zwischen den Weizensorten finden lassen muss, wollen wir noch feststellen wo dieser Unterschied liegt. Wir nutzen dafür den Siegel- und Castellan-Vergleichstests für alle Paare durch. Der Test ist mit der Funktion `frdAllPairsSiegelTest()` in dem R Paket `{PMCMRplus}` implementiert und einfach nutzbar. In dem Paket sind noch eine weitere Reihe an statistischen Test für paarweise nicht-parametrische Test enthalten. Leider sind das Paket und die Funktion schon älter, so dass wir nicht einmal die Formelschreibweise zu Verfügung haben. Wir müssen alle Spalten aus unserem Datensatz mit dem `$` einzeln selektieren und den Optionen zuordnen.

```{r}
#| message: false
#| warning: false
siegel_test_res <-  frdAllPairsSiegelTest(y = block_long_tbl$jump_length,
                                          groups = block_long_tbl$feeding,
                                          blocks = block_long_tbl$block,
                                          p.adjust.method = "none")
siegel_test_res
```

Ich empfehle ja immer eine Adjustierung für multiple Vergleiche, aber du kannst das selber entscheiden. Wenn du für die multiplen Vergleiche adjustieren willst, dann nutze gerne die Option `p.adjust.method = "bonferroni"` oder eben statt `bonferroni` die Adjustierungsmethode `fdr`.

Damit wir auch das *compact letter display* aus unseren $p$-Werte berechnen können, müssen wir unser Ergebnisobjekt nochmal in eine Tabelle umwandeln. Dafür gibt es dann auch eine passende Funktion mit `PMCMRTable`. Wir sehen, es ist alles etwas altbacken.

```{r}
siegel_test_tab <- PMCMRTable(siegel_test_res)

siegel_test_tab
```

Nachdem wir die Tabellenschreibweise der $p$-Werte vorliegen haben, können wir dann das *compact letter display* uns über die Funktion `cldList()` anzeigen lassen. Leider gibt es keine Möglichkeit die 95% Konfidenzintervalle zu erhalten. Wir auch beim Kruskal-Wallis-Test erhalten wir bei dem Friedman Test keine 95% Konfidenzintervalle und müssen im Zweifel mit dieser Einschränkung leben.

```{r}
cldList(p.value ~ Comparison, data = siegel_test_tab)
```

Am *compact letter display* sehen wir im Prinzip das gleiche Muster wie in den $p$-Werten. Nur nochmal etwas anders dargestellt und mit dem Fokus auf die *nicht* Unterschiede.
:::

## Referenzen {.unnumbered}
