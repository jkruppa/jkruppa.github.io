```{r echo = FALSE}
#| message: false
#| echo: false
#| warning: false
pacman::p_load(tidyverse, readxl, knitr, kableExtra, Hmisc, plyr, broom,
               patchwork, ggforce, see, sjPlot, tinytable, conflicted)
set.seed(202434)
conflicts_prefer(dplyr::summarise)
conflicts_prefer(dplyr::summarize)
conflicts_prefer(dplyr::mutate)
conflicts_prefer(dplyr::select)
conflicts_prefer(magrittr::set_names)
conflicts_prefer(dplyr::filter)
conflicts_prefer(dplyr::desc)
source("stat-tests-anova_plot/repeated_plots.R")
```

# Die repeated / mixed ANOVA {#sec-anova-mixed}

*Letzte Änderung am `r format(fs::file_info("stat-tests-anova-mixed.qmd")$modification_time, '%d. %B %Y um %H:%M:%S')`*

> *"I never once failed at making a light bulb. I just found out 99 ways not to make one." --- Thomas A. Edison*

![](images/caution.png){fig-align="center" width="100%"}

::: {.callout-caution appearance="simple"}
## Stand des Kapitels: Konstruktion (seit 02.2025)

Dieses Kapitel wird in den nächsten Wochen geschrieben. Ich plane zum Ende des SoSe 2025 eine neue Version des Kapitels erstellt zu haben. Während das Kapitel entsteht, funktioniert so manaches dann nicht so wie es soll.
:::

In diesem Kapitel soll es dann um Messwiederholungen gehen. Wir haben also irgendwas wiederholt gemessen. Damit haben wir auch eine Zeitvariable mit in den Daten. Hier müssen wir dann etwas aufpassen, ob wir wirklich eine repeated oder mixed ANOVA rechnen wollen oder nicht doch irgendwie eine Zeitreihe vorliegen haben. Die Frage, die du dir stellen musst ist hierbei eigentlich recht einfach. Wenn du ein Interesse an einem wie auch immer gearteten Gruppenvergleich hast und du diese Gruppen über die Zeit gemessen hast, dann bist du hier in diesem Kapitel richtig. Wenn es um eine ANOVA geht, dann geht es auch immer um einen Gruppenvergleich. Ansonsten könntest du eine Prognose wollen und das wäre dann eher eine klassische Zeitreihe.

## Allgemeiner Hintergrund

Die gemischte ANOVA (eng. *mixed ANOVA*) und die ANOVA für Messwiederholungen (eng. *repeated ANOVA*) sind eng miteinander verwandt. Vermutlich ist dies auch der Grund, warum es bei beiden Verfahren so viele Verwirrungen gibt. Ebenso finden sich auch verschiedene Namen zu den beiden ANOVA Algorithmen, aber wir bleiben einmal hier bei den beiden Namen. Die beiden Verfahren basieren auf Messwiederholungen. Daher messen wir wiederholt an einer Beobachtung einen Messwert. Der Unterschied liegt in dem Versuchsdesign und welche Beobachtung welche Behandlung erhält. Wir haben haben meistens in den Agrarwissenschaften eine *mixed ANOVA* vorliegen.

Was haben die *mixed ANOVA* und die *repeated ANOVA* gemeinsam?

:   In beiden Fällen haben wir Messwiederholungen in unseren Daten. Das heißt, wir messen wiederholt an dem gleichen Subjekt einen Messwert. Wir messen also weiderholt die Größe einer Pflanze oder die Milchleistung einer Kuh.

Oder um den Sachstand nochmal mit einem Zitat zu untermauern, habe ich aus dem Handbuch der SPSS Statistik einmal folgende Einordnung gefunden. Hier ist nochmal wichtig, was eigentlich mit den einzelnen Beobachtungen (eng. *subject*) passiert.

> *"However, the fundamental difference is that in a mixed ANOVA, the subjects that undergo each condition (e.g., a control and treatment) are different, whereas in a two-way repeated measures ANOVA, the subjects undergo both conditions (e.g., they undergo the control and the treatment)."* --- [Two-way repeated measures ANOVA using SPSS Statistics](https://statistics.laerd.com/spss-tutorials/two-way-repeated-measures-anova-using-spss-statistics.php#:~:text=A%20mixed%20ANOVA%20is%20very,factors%20on%20the%20dependent%20variable.)

Das klingt jetzt etwas kompliziert und deshalb habe ich dir den Zusammenhang einmal in der folgenden @fig-ggplot-theo-intro visualisiert. Nehmen wir einmal an, du hast einen Behandlungsfaktor $f_A$ mit drei Leveln. Jedes Level steht für eine Art der Behandlung. Wenn wir uns jetzt eine mixed ANOVA anschauen, dann haben wir drei Individuen vorliegen, die wiederholt in der gleichen Art der Behandlung gemessen werden. Das Individium mit der $ID_1$ erhält nur die Behandlung $A.3$ wiederholt verabreicht oder steht unter dieser Behandlung. Dann messen wir wiederholt den Messwert.

Etwas anders sieht es dann bei der repeated ANOVA aus. Hier haben wir ein Individum was alle Behandlungen über alle Zeitpunkte erhält. Damit erhät das Individium $ID_1$ erst die Behandlung $A.3$ viermal und danach dann die beiden anderen Behandlungen auch jeweils viermal wiederholt gemessen. Das ist ein großer konzeptioneller Unterschied in dem Versuchsdesign zwischen der mixed und der repeated ANOVA. In beiden ANOVA Typen wird wiederholt gemessen. In der repeated ANOVA erhält jedes Individum aber auch alle Behandlungen über die Zeit.

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-ggplot-theo-intro
#| fig-align: center
#| fig-height: 6
#| fig-width: 7
#| fig-cap: "Konzeptionelle Darstellung der mixed und repeated ANOVA in einem Flussdiagramm mit unterschiedlichen Individuen für einen Behandlungsfaktor mit drei Leveln als Arten der Behandlung. **(A)** In der mixed ANOVA werden pro Art der Behandlung ein Individum wiederholt gemessen. **(B)** In der repeated ANOVA wird ein Individum wiederholt für jede Art der Behandlung gemessen. *[Zum Vergrößern anklicken]*"

mixed_theo_fac2_p + repeated_theo_fac2_p +
  plot_layout(ncol = 1) +
  plot_annotation(tag_levels = 'A') +
  plot_annotation(tag_levels = 'A', tag_prefix = '(', tag_suffix = ')') &
  theme(plot.tag = element_text(size = 16, face = "bold"))

```

Bevor wir jetzt weiter in das Modell und die einzelnen Besonderheiten der mixed ANOVA und repeated ANOVA einsteigen nochmal der Hinweis, dass wir hier natürlich auch wieder *nur* global einen Fakor testen. Das heißt, du weißt natürlich wieder nicht, welcher paarweise Vergleich innerhalb eines Faktors einen signifikanten Unterschied ausmacht, wenn du eine signifikante ANOVA vorliegen hast. Dann musst du wieder weiter machen mit einem Post-hoc Test. Auch hier hilft nochmal die Vingette von `{afex}` mit [ANOVA and Post-Hoc Contrasts](https://cran.r-project.org/web/packages/afex/vignettes/afex_anova_example.html). Oder wie es @gueorguieva2004move mit der wissenschaftlichen Veröffentlichung [Move Over ANOVA](https://jamanetwork.com/journals/psych/articlepdf/481967/ynv20002.pdf?casa_token=5gc0qQuqNFUAAAAA:SJWnX8rH6__-lxXqiF0FDGQISXgXE0JQlRgtY7EE76IFnuECNjsOvKzUIwu9hmZFrKdLJbIahfQ) und der Nutzung von linearen gemischten Modellen wie folgt beschreibt.

> *"Mixed-effects models use all available data, can properly account for correlation between repeated measurements on the same subject, have greater flexibility to model time effects, and can handle missing data more appropriately. Their flexibility makes them the preferred choice for the analysis of repeated measures data"* --- @gueorguieva2004move

Warum machen wir das nicht immer? Also wir nutzen immer ein lineares gemischtes Modell? Das hat meistens mit der geringen Anzahl an Beobachtungen in den Gruppen und allgemein mit zu wenigen Gruppen zu tun. Häufig reicht eben das Design und die Wiederholungen nicht aus für ein sauberes gemischtes Modell. Deshab ist dann eine Lösung sich die Sachlage einmal in einer mixed oder repeated ANOVA anzuschauen. Es gilt wie immer, komplexe Fragestellungen kann man meistens nicht in einem einfachen Satz beantworten. Hier kommt es dann auch wieder auf die konkrete Fragestellung an.

#### Welche Pakete gibt es eigentlich? {.unnumbered .unlisted}

Wenn um die Anwendung der mixed oder repeated ANOVA in R geht, dann haben wir eine Menge Pakete zur Auswahl. Wie immer macht die Fragestellung und das gewählte Modell den Großteil der Entscheidungsindung aus. Ich zeige dir später in der Anwendung dann auch alle Pakete einmal, gebe dir dann aber auch immer eine Empfehlung mit. Normalerweise brauchen wir einen normalverteilten Messwert $y$ und Varianzhomogenität in den Faktoren. In den letzten Jahren wurden aber noch weitere Implementierungen der ANOVA entwickelt, so dass hier auch Alternativen vorliegen.

Gehen wir jetzt mal die Pakete durch. Wir immer gibt es einiges an Möglichkeiten und ich zeige dir hier eben die Auswahl. Es gibt hier das ein oder andere noch zu beachten, aber da gehe ich dann bei den jeweiligen Methoden drauf ein. Es macht eben dann doch einen Unterschied ob ich eine einfaktorielle oder komplexere ANOVA rechnen will. Nicht alles geht in allen R Pakten oder gar Excel.

Der Standard mit der Funktion `aov()` aus `{base}`

:   Die Standardfunktion `aov()` erlaubt es eine mixed oder repeated ANOVA direkt auf einem Datensatz zu rechnen. Hier brauchen wir nur ein Modell in der in R üblichen Formelschreibweise `y ~ f`. Du kannst diesen Ansatz als schnelle ANOVA begreifen. Dein Messwert $y$ muss hier normalverteilt sein.

Mit der Funktion `anova_test()` aus `{rstatix}`

:   Das [R Paket `{rstatix}`](https://cran.r-project.org/web/packages/rstatix/index.html) bietet bietet die Funktion `anova_test()` die es erlaubt einfacher auf die Funktionalität der Funktion `aov()` und R Funktionen aus dem Paket `{car}` zuzugreifen. Es ist eben ein klassischer Wrapper um besser rechnen zu können. Aber auch hier musst du verstehen wie die Funktion funktioniert. Ich finde aber die Anwendung relativ einfach und deshalb zeige ich die Funktion hier einmal.

Mit den ANOVA Funktionen aus `{afex}`

:   Wir können die mixed oder repeated ANOVA anwenden, wenn wir Messwiederholungen vorliegen haben. Daher bietet sich hier insbesondere das [R Paket `{afex}`](https://github.com/singmann/afex) an. Du musst bei den Funktionen von `{afex}` immer eine ID mitlaufen lassen, die angibt welche Individuen wiederholt gemessen wurden. Also hat jede Zeile eine Nummer, die beschreibt welche Beobachtung hier vorliegt. Besonders wichtig bei Messungen über die Zeit. Darüber hinaus kann das Paket sehr gut Interaktionen schätzen und Bedarf dort keiner zusätzlichen Optionen. Auch hier hilft nochmal die Vingette von `{afex}` mit [ANOVA and Post-Hoc Contrasts](https://cran.r-project.org/web/packages/afex/vignettes/afex_anova_example.html) weiter, wenn es um den Post-hoc Test geht.

Mit den ANOVA Funktionen aus `{MANOVA.RM}`

:   [Das R Paket `{MANOVA.RM}`](https://cran.r-project.org/web/packages/MANOVA.RM/vignettes/Introduction_to_MANOVA.RM.html) von @friedrich2019resampling bietet eine weitere Möglichkeit die reapted und mixed ANOVA zu rechnen, wenn die Annahme an die Normalverteilung sowie der Varianzhomogenität nicht erfüllt ist. Wir haben es hier dann nochmal mit einer neueren Implementierung zu tun. Eine weitere robuste Alternative zu den Standardimplementierungen.

Mit den ANOVA Funktionen aus `{WRS2}`

:   Eine Annahme an die mixed oder repeated ANOVA ist, dass wir es mit normalverteilten Messwerten $y$ sowie Varianzhomogenität in den Faktoren $f$ vorliegen haben. Das R Paket `{WRS2}` mit der hervorragenden Vingette [Robust Statistical Methods Using WRS2](https://cran.r-project.org/web/packages/WRS2/vignettes/WRS2.pdf) erlaubt nun aber diese beiden Annahmen zu umgehen und bietet eine robuste ANOVA an. Robust meint hier, dass wir uns nicht um die Normalverteilung und Varianzhomogenität kümmern müssen.

Wir immer ist es hier ein Tutorium um gleich mit der ANOVA starten zu können. Wenn du tiefer in die Materie einsteigen möchtest und noch andere Dinge rechts und links anschauen willst, dann findest du in den folgenden Quellen nochmal mehr Anregungen. Es geht wie immer mehr, aber wir wollen hier dann ja auch fertig werden und haben beschlossen eine repeated oder mixed ANOVA zu rechnen.

::: callout-tip
## Weitere Tutorien für die repeated & mixed ANOVA

Wir oben schon erwähnt, kann dieses Kapitel nicht alle Themen der repeated und mixed ANOVA abarbeiten. Insbesondere der theoretische Hintergrund ist ja bei mir hier sehr gekürzt. Daher präsentiere ich hier eine Liste von Literatur und Links, die mich für dieses Kapitel hier inspiriert haben. Nicht alles habe ich genutzt, aber vielleicht ist für dich was dabei.

-   Im Tutorium zur [Repeated Measures ANOVA in R](https://www.datanovia.com/en/lessons/repeated-measures-anova-in-r/) und [Mixed ANOVA in R](https://www.datanovia.com/en/lessons/mixed-anova-in-r/) auf der Seite Datanovia wird nochmal mehr auf die möglichen Vortest der Annahmen eingegangen. Auch wird nochmal der Posthoc-Test gezeigt, den ich ja ausgelagert habe.
-   Das Kapitel zu den [Random Effects](https://bookdown.org/steve_midway/DAR/random-effects.html) aus dem Openbook Data Analysis in R gibt nochmal einen Einblick in die Idee der zufälligen Effekte, die wir hier bewusst etwas unter den Tisch fallen lassen.
-   Das Openbook ANOVA and Mixed Models A Short Introduction Using R gibt in dem Kapitel zu [Random and Mixed Effects Models](https://people.math.ethz.ch/~meier/teaching/anova/random-and-mixed-effects-models.html) nochmal eine Übersicht über die verschiedenen Modelle. Insbesondere der Theorieteil ist gut, da ich ja hier in diesem Kapitel aktuell auf eine theoretische Betrachtung verzichtet habe.
-   Wenn dich die Formelschreibweise in R verwirrt, dann hilft dir nochmal der Blogeintrag zu [ANOVA and other models, mixed and fixed](https://conjugateprior.org/2013/01/formulae-in-r-anova/).
:::

## Genutzte R Pakete

Wir wollen folgende R Pakete in diesem Kapitel nutzen.

```{r echo = TRUE}
#| message: false
#| warning: false
pacman::p_load(tidyverse, magrittr, broom, WRS2, scales,
               readxl, see, car, patchwork, rstatix, emmeans,
               interactions, effectsize, afex, report, multcomp,
               janitor, MANOVA.RM, conflicted)
conflicts_prefer(dplyr::mutate)
conflicts_prefer(dplyr::summarize)
conflicts_prefer(dplyr::filter)
conflicts_prefer(dplyr::arrange)
conflicts_prefer(magrittr::set_names)
conflicts_prefer(effectsize::eta_squared)
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", 
                "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
```

An der Seite des Kapitels findest du den Link *Quellcode anzeigen*, über den du Zugang zum gesamten R-Code dieses Kapitels erhältst.

## Daten

Beginnen wir wie immer mit den Daten. Hier ist die Besonderheit, dass wir immer Messweiderholungen an einer Beobachtung vorliegen haben. Ich habe dann die jeweilige Beobachtung in der Spalte `.id` jeweils genau benannt. Daher kommt eben die Beobachtung mit der `id` gleich 1 mehrfach in den Daten vor. Genauer, wir haben eben nicht nur eine Zeile in den Daten für eine Beobachtung sondern mehrere Zeilen für eine Beobachtung vorliegen. Das ist am Anfang immer etwas verwirrend, aber man gewöhnt sich daran.

Eine weitere Besonderheit ist, dass wir häufig die Daten in einem Wide-Format erstellen. Das geißt wir haben pro Zeile eine ID und dann mehrere Spalten wo wir wiederholt messen. Wir nennen dann diese Spalten meistens `t0` bis `t5`, wenn wir sechs Zeitpunkte bemessen. In R brauchen wir dann doch wieder das Long-Format und dementsprechend nutzen wir die Funktion `pivot_longer()` um uns aus den Daten im Wide-Format die entsprechenden Daten im Long-Format zu bauen. Das Openbook [R for Data Science](https://r4ds.hadley.nz/data-tidy.html#sec-pivoting) hat hier noch das passende Kapitel zum nachlesen. Du kannst auch das [Cheatsheet](https://tidyr.tidyverse.org/#cheatsheet) nochmal anschauen, dort wird alles nochmal visuell erklärt.

### Mixed ANOVA

Bei der mixed ANOVA haben wir mindestens ein zweifaktorielles Design vorliegen. Warum ist das so? Zum einen brauchen wir einen Behandlungsfaktor und dazu kommt dann noch der Faktor der Messwiederholung. Wir messen ja wiederholt und dieses wiederholte Messen kommt dann ebenfalls in einen Faktor rein. Somit haben wir einen Behandlungsfaktor und einen Zeitfaktor in den Daten. Manchmal erhöhen wir noch die Komplexität und ergänzen einen zweiten Behandlungsfaktor und haben dann einen dreifaktoriellen Datensatz vorliegen.

#### Zweifaktoriell {.unnumbered .unlisted}

Im Folgenden siehst du einmal einen Datensatz für eine zweifaktorielle mixed ANOVA. In diesem Beispiel schauen wir uns nur Katzenflöhe an. Wir haben in dem Datensatz einmal den Faktor `feeding` als die Fütterungsarten mit einer Kontrolle als Zuckerwasser, Blut und einmal Ketchup sowie als zweiten Faktor die verschiedenen Zeitpunkte der Messung der Sprungweite in \[cm\]. Wir haben an insgesamt sechs Zeitpunkten wiederholt die Sprungweite gemessen. Wir wollen nun wissen, in wie weit sich die Sprungweite über die Zeit für die drei Floharten ändert.

```{r}
mixed_fac2_tbl <- read_excel("data/fleas_complex_data.xlsx", 
                             sheet = "mixed-fac2") |> 
  select(.id, feeding, t0:t5) |> 
  pivot_longer(cols = t0:t5,
               values_to = "jump_length",
               names_to = "time_fct") |> 
  mutate(feeding = as_factor(feeding),
         time_fct = as_factor(time_fct),
         jump_length = round(jump_length, 2),
         .id = as_factor(.id))
```

In der folgenden Tabelle siehst du einmal die rohen Daten eingelesen. Wir haben den Faktor `feeding` sowie die sechs Zeitpunkte der Messung der Sprungweite in \[cm\]. Wir müssen uns dann in R die Daten über die Funktion `pivot_longer()` in ein Long-Format umwandeln.

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-mixed-table-fac2
#| tbl-cap: "Rohdaten der Sprungweiten in [cm] gemessen an sechs Zeitpunkten von drei Fütterungsarten im Wide-Format für die bessere Übersicht."

repeated_raw_tbl <- read_excel("data/fleas_complex_data.xlsx", sheet = "mixed-fac2") |> 
  select(.id, feeding, t0:t5) |> 
  mutate_if(is.numeric, round, 2)

rbind(head(repeated_raw_tbl, n = 4),
      rep("...", times = ncol(repeated_raw_tbl)),
      tail(repeated_raw_tbl, n = 4)) |> 
  tt(width = 1, align = "c", theme = "striped")
```

Jetzt habe ich dir in der folgenden Abbildung auch nochmal das Versuchsdesign aufgezeigt. Wie du siehst, haben wir immer einen Floh, der eine Behandlung mit einer Fütterungsart erhält. Dieser Flog springt dann zum Beispiel unter der Fütterung mit Ketchup sechs Mal und wir notieren jedesmal die Sprungweite zu den Messzeitpunkten.

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-ggplot-theo-mixed-fac2
#| fig-align: center
#| fig-height: 4
#| fig-width: 7
#| fig-cap: "Versuchsdesign der zweifaktoriellen mixed ANOVA. Der erste Faktor ist die Fütterungsart `feeding`. Jeder Floh erhält eine Fütterung und anschließend wird sechs mal die Sprungweite gemessen. Hier sind nur vier Zeitpunkte dargestellt. *[Zum Vergrößern anklicken]*"

mixed_fac2_p
```

In der folgenden Abbildung siehst du dann nochmal den Zusammenhang zwischen der Sprungweite in \[cm\] der Katzenflöhe unter unterschiedlichen Fütterungsarten. Dabei wurden die Flöhe wiederholt an sechs Zeitpunkten gemessen. Wir du siehst, fällt mit der Zeit die Sprungleistung ab. Die Katzenflöhe springen unabhängig von der Fütterungsart weniger weit mit der Zeit. Am letzten Zeitpunkt scheinen die Flöhe unter Ketchupernährung dann wieder etwas weiter zu springen. Jetzt müssen wir aber einmal statistisch Nachweisen, ob wir hier wirklich einen signifikanten Zusammenhang und Unterschiede zwischen den Fütterungsarten vorliegen haben.

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-ggplot-anova-mixed-fac2
#| fig-align: center
#| fig-height: 4
#| fig-width: 7
#| fig-cap: "Darstellung des Zusammenhangs zwischen der Fütterung von Katzenflöhen und der gemessenen Sprungweite in [cm] über sechs Messzeitpunkte. Die Linie stellt den jeweiligen Mittelwert zu dem Zeitpunkt und der Fütterungsart dar. *[Zum Vergrößern anklicken]*"

ggplot(mixed_fac2_tbl, aes(x = time_fct, y = jump_length, 
                           color = feeding, group = feeding)) +
  theme_minimal() +
  geom_point2() +
  stat_summary(fun = "mean", geom = "line", size = 1) +
  scale_color_okabeito() +
  theme(legend.position = "top") +
  labs(x = "Zeitpunkte der Messung", y = "Sprungweite in [cm]",
       color = "Fütterungsart")
```

#### Dreifaktoriell {.unnumbered .unlisted}

Für unser dreifaktorielles Beispiel erweiter wir einmal den Datensatz um ein Workout für die Katzenflöhe. Neben den drei Fütterungsarten Kontrolle mit Zuckerwasser, Blut sowie Ketchup mussten die Flöhe als zweiten Faktor noch ein Workout bestehen. Dabei haben nicht alle Katzenflöhe jeweils trainiert, sondern wir haben eine untrainierte Gruppe sowie eine trainierte Gruppe. Beide Gruppen des Workout wurden dann mit allen drei Fütterungsarten gefüttert. Dann wurden insgesamt zu sechs Zeitpunkten die Sprungweite in \[cm\] bestimmt. Wir haben es daher mit einem dreifaktoriellen Datensatz zu tun, da wir zwei Behandlungsfaktoren sowie den Faktor der Messwiederholungen in unseren Daten vorliegen haben.

```{r}
mixed_fac3_tbl <- read_excel("data/fleas_complex_data.xlsx", 
                             sheet = "mixed-fac3") |> 
  select(.id, feeding, workout, t0:t5) |> 
  pivot_longer(cols = t0:t5,
               values_to = "jump_length",
               names_to = "time_fct") |> 
  mutate(feeding = as_factor(feeding),
         workout = as_factor(workout),
         time_fct = as_factor(time_fct),
         jump_length = round(jump_length, 2),
         .id = as_factor(.id))
```

In der folgenden Tabelle sind die Daten dann nochmal im Wide-Format dargestellt. Wir haben hier dann pro Floh jeweils eine Faktorkombination aus der Fütterungsart `feeding` sowie dem Traingsstatus `workout`. Im Anschluss haben wir dann die Sprungweite von jedem Floh sechsmal gemessen. Wir müssen dann in R die Daten nochmal in das Long-Format über die Funktion `pivot_longer()` umbauen.

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-mixed-table-fac3
#| tbl-cap: "Rohdaten der Sprungweiten in [cm] gemessen an sechs Zeitpunkten von drei Fütterungsarten sowie dem Status des Workouts im Wide-Format für die bessere Übersicht."

repeated_raw_tbl <- read_excel("data/fleas_complex_data.xlsx", sheet = "mixed-fac3") |> 
  select(.id, feeding, workout, t0:t5) |> 
  mutate_if(is.numeric, round, 2)

rbind(head(repeated_raw_tbl, n = 4),
      rep("...", times = ncol(repeated_raw_tbl)),
      tail(repeated_raw_tbl, n = 4)) |> 
  tt(width = 1, align = "c", theme = "striped")
```

Manchmal ist es schwer die Zusammenhänge dann in dem Datensatz zu sehen, deshalb hier nochmal das Versuchsdesign visualisert. Jeder Katznfloh springt wiederholt, aber das ganz dann nur unter einer Faktorkombination.

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-ggplot-theo-mixed-fac3
#| fig-align: center
#| fig-height: 5.5
#| fig-width: 7
#| fig-cap: "Versuchsdesign der dreifaktoriellen mixed ANOVA. Der erste Faktor ist die Fütterungsart `feeding`. Der zweite Faktor der Status des Workouts für jeden Floh `workout`. Jeder Floh erhält eine Fütterung sowie ein Workout und anschließend wird sechs mal die Sprungweite gemessen. Hier sind nur vier Zeitpunkte dargestellt. *[Zum Vergrößern anklicken]*"

mixed_fac3_p
```

Abschließend können wir uns dann nochmal die Daten in der folgenden Abbildung anschauen. Auf den ersten Blick sehen wir, dass die Leistung in der Sprungweite über die Zeit abfällt. Diesen Trend können wir über alle Fütterungsarten beobachten. Was erst auf den zweiten Blick auffällt ist, dass teilweise ja nach Fütterungsart ein Training positiv oder negativ ausfällt. So führt ein Training bei den Kontrollflöhen zu weiteren Sprüngen. Die Katzenflöhe unter einer Blutdiät springen jedoch unter Training nicht so weit wie ohne ein Training.

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-ggplot-anova-mixed-fac3
#| fig-align: center
#| fig-height: 4
#| fig-width: 7
#| fig-cap: "Darstellung des Zusammenhangs zwischen der Fütterung von Katzenflöhen sowie der Trainingszustand und der gemessenen Sprungweite in [cm] über sechs Messzeitpunkte. Die Linie stellt den jeweiligen Mittelwert zu dem Zeitpunkt und der Fütterungsart sowie des Trainings dar. *[Zum Vergrößern anklicken]*"

ggplot(mixed_fac3_tbl, aes(x = time_fct, y = jump_length, shape = workout,
                           color = feeding, linetype = workout,
                           group = interaction(feeding, workout))) +
  theme_minimal() +
  geom_point(position = position_dodge(0.2)) +
  stat_summary(fun = mean, geom = "line",
               position = position_dodge(0.2)) +
  scale_color_okabeito() +
  theme(legend.position = "top") +
  labs(x = "Zeitpunkte der Messung", y = "Sprungweite in [cm]",
       color = "Entwicklungsstand", shape = "Workout", 
       linetype = "Workout")
```

### Repeated ANOVA

#### Einfaktoriell {.unnumbered .unlisted}

```{r}
repeated_fac1_tbl <- read_excel("data/fleas_complex_data.xlsx", 
                                sheet = "repeated-fac1") |> 
  select(.id, animal, t1:t4) |> 
  pivot_longer(cols = t1:t4,
               values_to = "jump_length",
               names_to = "time_fct") |> 
  mutate(animal = as_factor(animal),
         time_fct = as_factor(time_fct),
         jump_length = round(jump_length, 2),
         .id = as_factor(.id))
```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-repeated-table-fac1
#| tbl-cap: "foo."

repeated_raw_tbl <- read_excel("data/fleas_complex_data.xlsx", 
                               sheet = "repeated-fac1") |>
  select(.id, animal, t1:t4) |> 
  mutate_if(is.numeric, round, 2)

rbind(head(repeated_raw_tbl, n = 3),
      rep("...", times = ncol(repeated_raw_tbl)),
      tail(repeated_raw_tbl, n = 3)) |> 
  tt(width = 1, align = "c", theme = "striped")
```

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-ggplot-theo-repeated-fac1
#| fig-align: center
#| fig-height: 2
#| fig-width: 7
#| fig-cap: "Darstellung der Varianzhomogenität und Varianzheterogenität in einem Barplot. *[Zum Vergrößern anklicken]*"

repeated_fac1_p
```

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-ggplot-anova-repeated-fac1
#| fig-align: center
#| fig-height: 4
#| fig-width: 7
#| fig-cap: "Darstellung der Varianzhomogenität und Varianzheterogenität in einem Barplot. *[Zum Vergrößern anklicken]*"

ggplot(repeated_fac1_tbl, aes(x = time_fct, y = jump_length, 
                             group = 1)) +
  theme_minimal() +
  geom_line(aes(group = .id), linetype = 11, color = "gray70") +
  geom_point2() +
  stat_summary(fun = "mean", geom = "line", color = "#CC79A7", size = 1) +
  labs(x = "Zeitpunkte der Messung", y = "Sprungweite in [cm]")
```

#### Zweifaktoriell {.unnumbered .unlisted}

```{r}
repeated_fac2_tbl <- read_excel("data/fleas_complex_data.xlsx", 
                                sheet = "repeated-fac2") |> 
  select(.id, animal, feeding, t1:t4) |> 
  pivot_longer(cols = t1:t4,
               values_to = "jump_length",
               names_to = "time_fct") |> 
  mutate(animal = as_factor(animal),
         feeding = as_factor(feeding),
         time_fct = as_factor(time_fct),
         jump_length = round(jump_length, 2),
         .id = as_factor(.id))
```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-repeated-table-fac2
#| tbl-cap: "foo."

repeated_raw_tbl <- read_excel("data/fleas_complex_data.xlsx", 
                               sheet = "repeated-fac2") |> 
  select(.id, animal, feeding, t1:t4) |> 
  mutate_if(is.numeric, round, 2)

rbind(head(repeated_raw_tbl, n = 4),
      rep("...", times = ncol(repeated_raw_tbl)),
      tail(repeated_raw_tbl, n = 4)) |> 
  tt(width = 1, align = "c", theme = "striped")
```

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-ggplot-theo-repeated-fac2
#| fig-align: center
#| fig-height: 4
#| fig-width: 7
#| fig-cap: "Darstellung der Varianzhomogenität und Varianzheterogenität in einem Barplot. *[Zum Vergrößern anklicken]*"

repeated_fac2_p
```

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-ggplot-anova-repeated-fac2
#| fig-align: center
#| fig-height: 4
#| fig-width: 7
#| fig-cap: "Darstellung der Varianzhomogenität und Varianzheterogenität in einem Barplot. *[Zum Vergrößern anklicken]*"

ggplot(repeated_fac2_tbl, aes(x = time_fct, y = jump_length, 
                             color = feeding, group = feeding)) +
  theme_minimal() +
  geom_line(aes(group = interaction(.id, feeding)), linetype = 11, color = "gray70") +
  geom_point2() +
  stat_summary(fun = "mean", geom = "line", size = 1) +
  scale_color_okabeito() +
  theme(legend.position = "top") +
  labs(x = "Zeitpunkte der Messung", y = "Sprungweite in [cm]",
       color = "Fütterungsart")
```

#### Dreifaktoriell {.unnumbered .unlisted}

```{r}
repeated_fac3_tbl <- read_excel("data/fleas_complex_data.xlsx", 
                                sheet = "repeated-fac3") |> 
  select(.id, animal, feeding, workout, t1:t4) |> 
  pivot_longer(cols = t1:t4,
               values_to = "jump_length",
               names_to = "time_fct") |> 
  mutate(animal = as_factor(animal),
         feeding = as_factor(feeding),
         workout = as_factor(workout),
         time_fct = as_factor(time_fct),
         jump_length = round(jump_length, 2),
         .id = as_factor(.id))
```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-repeated-table-fac3
#| tbl-cap: "foo."

repeated_raw_tbl <- read_excel("data/fleas_complex_data.xlsx", sheet = "repeated-fac3") |> 
  select(.id, animal, feeding, workout, t1:t4) |> 
  mutate_if(is.numeric, round, 2)

rbind(head(repeated_raw_tbl, n = 4),
      rep("...", times = ncol(repeated_raw_tbl)),
      tail(repeated_raw_tbl, n = 4)) |> 
  tt(width = 1, align = "c", theme = "striped")
```

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-ggplot-theo-repeated-fac3
#| fig-align: center
#| fig-height: 5.5
#| fig-width: 7
#| fig-cap: "Darstellung der Varianzhomogenität und Varianzheterogenität in einem Barplot. *[Zum Vergrößern anklicken]*"

repeated_fac3_p
```

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-ggplot-anova-repeated-fac3
#| fig-align: center
#| fig-height: 4
#| fig-width: 7
#| fig-cap: "Darstellung der Varianzhomogenität und Varianzheterogenität in einem Barplot. *[Zum Vergrößern anklicken]*"

ggplot(repeated_fac3_tbl, aes(x = time_fct, y = jump_length, shape = workout,
                             color = feeding, linetype = workout,
                             group = interaction(feeding, workout))) +
  theme_minimal() +
  geom_point(position = position_dodge(0.2)) +
  stat_summary(fun = mean, geom = "line",
               position = position_dodge(0.2)) +
  scale_color_okabeito() +
  theme(legend.position = "top") +
  labs(x = "Zeitpunkte der Messung", y = "Sprungweite in [cm]",
       color = "Fütterungsart", shape = "Workout", linetype = "Workout")
```

## Mixed ANOVA

Hier eine kurze Betrachtung. Mehr dazu in dem [Kapitel zu gemischten Modellen](#sec-mixed)

### Zweifaktoriell

::: panel-tabset
## `{base}`

```{r}
aov(jump_length ~ feeding * time_fct + Error(.id/time_fct), 
    data = mixed_fac2_tbl) |> 
  tidy() |> 
  na.omit() |> 
  select(term, df, statistic, p.value) |> 
  mutate(p.value = pvalue(p.value))
```

## `{rstatix}`

```{r}
rstatix_aov <- anova_test(data = mixed_fac2_tbl, 
                          dv = jump_length, wid = .id, 
                          between = feeding, within = time_fct)
get_anova_table(rstatix_aov)
```

## `{afex}`

```{r}
#| message: false
#| warning: false
aov_car(jump_length ~ feeding * time_fct + Error(.id/time_fct), 
        data = mixed_fac2_tbl) 
```

```{r}
#| message: false
#| warning: false
aov_4(jump_length ~ feeding * time_fct + (time_fct|.id), 
      data = mixed_fac2_tbl)
```

## `{MANOVA.RM}`

```{r}
RM(jump_length ~ feeding * time_fct, data = mixed_fac2_tbl, 
   subject = ".id", within = c("time_fct"), iter = 100, 
   resampling = "Perm", seed = 1234) |> 
  summary()
```

## `{WRS2}`

```{r}
bwtrim(jump_length ~ feeding * time_fct, id = .id, data = mixed_fac2_tbl)
```
:::

### Dreifaktoriell

::: panel-tabset
## `{base}`

```{r}
aov(jump_length ~ feeding * workout * time_fct + Error(.id/time_fct), 
    data = mixed_fac3_tbl) |> 
  tidy() |> 
  na.omit() |> 
  select(term, df, statistic, p.value) |> 
  mutate(p.value = pvalue(p.value))
```

## `{rstatix}`

```{r}
rstatix_aov <- anova_test(data = mixed_fac3_tbl, 
                          dv = jump_length, wid = .id, 
                          between = c(feeding, workout), 
                          within = time_fct)
get_anova_table(rstatix_aov)
```

## `{afex}`

```{r}
#| message: false
#| warning: false
aov_car(jump_length ~ feeding * workout * time_fct + Error(.id/time_fct), 
        data = mixed_fac3_tbl)
```

```{r}
#| message: false
#| warning: false
aov_4(jump_length ~ feeding * workout * time_fct + (time_fct|.id), 
      data = mixed_fac3_tbl)
```

## `{MANOVA.RM}`

```{r}
RM(jump_length ~ feeding * workout * time_fct, data = mixed_fac3_tbl, 
   subject = ".id", within = c("time_fct"), iter = 100, 
   resampling = "Perm", seed = 1234) |> 
  summary()
```
:::

## Repeated measurement ANOVA

Hier eine kurze Betrachtung. Mehr dazu in dem [Kapitel zu gemischten Modellen](#sec-mixed)

### Einfaktoriell

::: panel-tabset
## `{base}`

```{r}
aov(jump_length ~ time_fct + Error(.id/time_fct), data = repeated_fac1_tbl)|> 
  tidy() |> 
  na.omit() |> 
  select(term, df, statistic, p.value) |> 
  mutate(p.value = pvalue(p.value))
```

## `{rstatix}`

```{r}
rstatix_aov <- anova_test(data = repeated_fac1_tbl, 
                          dv = jump_length, wid = .id, within = time_fct)
get_anova_table(rstatix_aov)
```

## `{afex}`

```{r}
#| message: false
#| warning: false
aov_car(jump_length ~ time_fct + Error(.id/time_fct), data = repeated_fac1_tbl)
```

```{r}
#| message: false
#| warning: false
aov_4(jump_length ~ time_fct + (time_fct|.id), data = repeated_fac1_tbl)
```

## `{MANOVA.RM}`

```{r}
RM(jump_length ~ time_fct, data = repeated_fac1_tbl, 
   subject = ".id", within = "time_fct", iter = 100, 
   resampling = "Perm", seed = 1234) |> 
  summary()
```

## `{WRS2}`

```{r}
with(repeated_fac1_tbl, rmanova(y = jump_length, groups = time_fct, block = .id))
```
:::

#### Effektschätzer {.unnumbered .unlisted}

```{r}
aov_car(jump_length ~ time_fct + Error(.id/time_fct), data = repeated_fac1_tbl) |> 
  eta_squared()
```

### Zweifaktoriell

::: panel-tabset
## `{base}`

```{r}
aov(jump_length ~ feeding * time_fct + Error(.id/(feeding * time_fct)), 
    data = repeated_fac2_tbl) |> 
  tidy() |> 
  na.omit() |> 
  select(term, df, statistic, p.value) |> 
  mutate(p.value = pvalue(p.value))
```

## `{rstatix}`

```{r}
rstatix_aov <- anova_test(data = repeated_fac2_tbl, 
                          dv = jump_length, wid = .id, 
                          within = c(feeding, time_fct))
get_anova_table(rstatix_aov)
```

## `{afex}`

```{r}
#| message: false
#| warning: false
aov_car(jump_length ~ feeding * time_fct + Error(.id/feeding * time_fct), 
        data = repeated_fac2_tbl)
```

```{r}
#| message: false
#| warning: false
aov_4(jump_length ~ feeding * time_fct + (feeding * time_fct|.id), 
      data = repeated_fac2_tbl)
```

## `{MANOVA.RM}`

```{r}
RM(jump_length ~ feeding * time_fct, data = repeated_fac2_tbl, 
   subject = ".id", within = c("feeding", "time_fct"), iter = 100, 
   resampling = "Perm", seed = 1234) |> 
  summary()
```
:::

### Dreifaktoriell

::: panel-tabset
## `{base}`

```{r}
aov(jump_length ~ feeding * workout * time_fct + 
      Error(.id/(feeding * workout * time_fct)), 
    data = repeated_fac3_tbl) |> 
  tidy() |> 
  na.omit() |> 
  select(term, df, statistic, p.value) |> 
  mutate(p.value = pvalue(p.value))
```

## `{rstatix}`

```{r}
rstatix_aov <- anova_test(data = repeated_fac3_tbl, 
                          dv = jump_length, wid = .id, 
                          within = c(feeding, workout, time_fct))
get_anova_table(rstatix_aov)
```

## `{afex}`

```{r}
#| message: false
#| warning: false
aov_car(jump_length ~ feeding * workout * time_fct + 
          Error(.id/feeding * workout * time_fct), 
        data = repeated_fac3_tbl)
```

```{r}
#| message: false
#| warning: false
aov_4(jump_length ~ feeding * workout * time_fct + 
        (feeding * workout * time_fct|.id), 
      data = repeated_fac3_tbl)
```

## `{MANOVA.RM}`

```{r}
RM(jump_length ~ feeding * workout * time_fct, data = repeated_fac3_tbl, 
   subject = ".id", within = c("feeding", "workout", "time_fct"), iter = 100, 
   resampling = "Perm", seed = 1234) |> 
  summary()
```
:::

::: callout-tip
## Anwendungsbeispiel: foo (3-faktoriell)

```{r}
#| message: false
#| warning: false

gurke_tbl <- read_excel("data/wachstum_gurke.xlsx") |> 
  clean_names() |> 
  select(group = versuchsgruppe, t1:t14) |>
  mutate(group = as_factor(group)) 
```

```{r}
#| message: false
#| echo: false
#| tbl-cap: "Datensatz zu dem Längen- und Dickenwachstum von Gurken."
#| label: tbl-anwendung-gurke

gurke_raw_tbl <- read_excel("data/wachstum_gurke.xlsx") |> 
  clean_names() |> 
  select(group = versuchsgruppe, t1:t4) |>
  mutate_if(is.numeric, round, 2)

rbind(head(gurke_raw_tbl, n = 3),
      rep("...", times = ncol(gurke_raw_tbl)),
      tail(gurke_raw_tbl, n = 3)) |> 
  tt(width = 1, align = "c", theme = "striped")

```

```{r}
gurke_time_len_tbl <- gurke_tbl |> 
  filter(str_detect(group, "L$")) |> 
  rownames_to_column(".id") |> 
  mutate(group = factor(group, labels = c("Proloog", "Quarto", "Katrina"))) |> 
  pivot_longer(cols = t1:t14,
               values_to = "length",
               names_to = "time") |> 
  mutate(time_fct = as_factor(time),
         time_num = as.numeric(time_fct)) |> 
  filter(length != 0)
```

```{r}
#| echo: true
#| message: false
#| warning: false
#| label: fig-anwendung-gurke-01
#| fig-align: center
#| fig-height: 5
#| fig-width: 8
#| fig-cap: "Scatterplot des Längenwachstums der drei Gurkensorten über vierzehn Wochen. Die gestrichtelten Linien stellen den Median und die durchgezogene Line den Mittelwert der Gruppen dar."

ggplot(gurke_time_len_tbl, 
       aes(time_fct, length, color = group, 
           group = group)) +
  theme_minimal() +
  geom_point() +
  stat_summary(fun = "mean", geom = "line") +
  stat_summary(fun = "median", geom = "line", linetype = 2) +
  scale_color_okabeito() +
  theme(legend.position = "top")+
  labs(x = "Zeitpunkte der Messung", y = "Gurkenlänge [cm]",
       color = "Sorte")
```

```{r}
#| echo: true
#| message: false
#| warning: false
#| label: fig-anwendung-gurke-02
#| fig-align: center
#| fig-height: 5
#| fig-width: 8
#| fig-cap: "Scatterplot des Längenwachstums der drei Gurkensorten über vierzehn Wochen. Die gestrichtelten Linien stellen den Median und die durchgezogene Line den Mittelwert der Gruppen dar."

ggplot(gurke_time_len_tbl, 
       aes(time_fct, log(length), color = group, 
           group = .id)) +
  theme_minimal() +
  geom_point2() +
  geom_line(linetype = 11) +
  scale_color_okabeito() +
  theme(legend.position = "top")+
  labs(x = "Zeitpunkte der Messung", y = "Gurkenlänge [cm] (log-scale)",
       color = "Sorte")
```

```{r}
aov_car(length ~ group * time_fct + Error(.id/time_fct), 
        data = gurke_time_len_tbl)
```

```{r}
aov_4(length ~ group * time_fct + (time_fct|.id), 
      data = gurke_time_len_tbl)
```
:::

## Referenzen {.unnumbered}
