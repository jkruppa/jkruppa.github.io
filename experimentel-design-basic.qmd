```{r echo = FALSE}
pacman::p_load(tidyverse, readxl, knitr, kableExtra, Hmisc,
               grid, agricolae, patchwork, desplot)
```

# Grundlagen der Versuchsplanung

*Version vom `r format(Sys.time(), '%B %d, %Y um %H:%M:%S')`*

![](images/caution.png){fig-align="center" width="50%"}

[Experimental Designs with agricolae](https://myaseen208.com/agricolae/articles/ExperimentalDesign.html)

[Designing experiments](https://schmidtpaul.github.io/DSFAIR/DesigningExperiments.html)

## Genutzte R Pakete für das Kapitel

Wir wollen folgende R Pakete in diesem Kapitel nutzen.

```{r echo = TRUE}
#| message: false
pacman::p_load(tidyverse, magrittr, conflicted, broom,
               see, emmeans, multcomp, scales, performance,
               effectsize, parameters)
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("mutate", "dplyr")
cbbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", 
                "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
```

Am Ende des Kapitels findest du nochmal den gesamten R Code in einem Rutsch zum selber durchführen oder aber kopieren.

## Complete randomized design (CRD)

### Visualisierung

```{r}
#| echo: false
#| warning: false
#| label: fig-dsplot-crd
#| fig-align: center
#| fig-height: 6
#| fig-width: 9
#| fig-cap: "foo."

trt_vec <- c("A", "B", "C", "D")
n_rep <- 5
n_trt <- n_distinct(trt_vec) 

crd_design <- design.crd(trt = trt_vec,
                         r = n_rep,
                         seed = 42)

# Add Row and Col 
crd_design$bookRowCol <- crd_design$book %>%
  bind_cols(expand.grid(row = 1:n_rep,
                        col = 1:n_trt))

# Plot field layout
ggdesplot(trt_vec ~ row + col, flip = TRUE,
        text = trt_vec, cex = 1.5, shorten = "no",
        data = crd_design$bookRowCol,
        main = "", 
        show.key = FALSE,
        col.regions = cbbPalette[-1])

```

### Daten

```{r}
set.seed(20220916)
crd_tbl <- tibble(A = rnorm(n = 5, mean = 10, sd = 2),
                  B = rnorm(n = 5, mean = 12, sd = 2),
                  C = rnorm(n = 5, mean = 16, sd = 2),
                  D = rnorm(n = 5, mean = 20, sd = 2)) %>% 
  gather(key = trt, value = rsp) %>% 
  mutate(trt = as_factor(trt))

crd_tbl
```

```{r}
#| echo: true
#| warning: false
#| label: fig-boxplot-crd
#| fig-align: center
#| fig-height: 5
#| fig-width: 5
#| fig-cap: "foo."

ggplot(crd_tbl, aes(trt, rsp, fill = trt)) +
  theme_bw() +
  geom_boxplot() +
  theme(legend.position = "none") +
  scale_fill_okabeito() 
```

### Modellierung

```{r}
fit_crd <- lm(rsp ~ trt, crd_tbl)

fit_crd %>%  model_parameters()
```

```{r}
fit_crd %>% check_homogeneity()
```

```{r}
fit_crd %>% check_normality()
```

```{r}
#| message: false
#| warning: false
#| echo: true
#| fig-align: center
#| fig-height: 5
#| fig-width: 6
#| fig-cap: foo
#| label: fig-emmeans-crd-qq

check_model(fit_crd, check = c("qq", "normality"))
```

### Varianzanalyse und Mittelwertsvergleich

```{r}
res_anova <- fit_crd %>% 
  anova() 

res_anova %>% model_parameters()
```

```{r}
res_anova %>% eta_squared
```

```{r}
res_crd <- fit_crd %>% 
  emmeans(~ trt) 
```

```{r}
res_crd_cld <- res_crd %>% 
  cld(adjust = "sidak", Letters = letters) %>% 
  tidy() %>% 
  select(trt, estimate, conf.low, conf.high, .group) %>% 
  mutate(across(where(is.numeric), round, 2))

res_crd_cld 
```

```{r}
#| message: false
#| echo: true
#| fig-align: center
#| fig-height: 5
#| fig-width: 6
#| fig-cap: foo
#| label: fig-cld-crd

ggplot() +
  theme_bw() +
  geom_point(data = crd_tbl, aes(x = trt, y = rsp, fill = trt)) +
  geom_text(data = res_crd_cld, 
            aes(x = trt , y = estimate, label = .group),
            position = position_nudge(x = 0.2), color = "red") +
  geom_errorbar(data = res_crd_cld,
                aes(ymin = conf.low, ymax = conf.high, x = trt),
                color = "red", width = 0.1,
                position = position_nudge(x = 0.1)) +
  geom_point(data = res_crd_cld, 
             aes(x = trt , y = estimate),
             position = position_nudge(x = 0.1), color = "red") +
  theme(legend.position = "none") +
  labs(x = "Behandlung", y = "Gewicht [kg/ha]",
       caption = "Schwarze Punkte stellen Rohdaten dar.
       Rote Punkte und Fehlerbalken stellen bereinigte Mittelwerte mit 95% Konfidenzgrenzen pro Behandlung dar.
       Mittelwerte, mit einem gemeinsamen Buchstaben, sind nicht signifikant unterschiedlich.")


```

```{r}
res_crd_tbl <- res_crd %>% 
  contrast(method = "pairwise") %>% 
  tidy(conf.int = TRUE) %>% 
  mutate(p.value = pvalue(adj.p.value),
         across(where(is.numeric), round, 2)) %>% 
  select(contrast, estimate, p.value,
         conf.low, conf.high) 

res_crd_tbl
```

```{r}
#| message: false
#| warning: false
#| echo: true
#| fig-align: center
#| fig-height: 4
#| fig-width: 6
#| fig-cap: foo
#| label: fig-emmeans-crd

ggplot(res_crd_tbl, aes(contrast, y=estimate, ymin=conf.low, ymax=conf.high)) +
  geom_hline(yintercept=0, linetype="11", colour="grey60") +
  geom_errorbar(width=0.1) + 
  geom_point() +
  coord_flip() +
  theme_bw()  +
  labs(x = "Vergleich", y = "Mittelwertsunterschied des Gewichtes [kg/ha]",
       caption = "Schwarze Punkte stellen die bereinigten Mittelwertsunterschiede mit 95% Konfidenzgrenzen dar.
       Enthält ein 95% Konfidenzintervalle die 0 ist es nicht signifikant unterschiedlich.")
```

## Randomized complete block design (RCBD)

```{r}
#| echo: false
#| warning: false
#| label: fig-dsplot-rcbd
#| fig-align: center
#| fig-height: 6
#| fig-width: 9
#| fig-cap: "foo."

block_lst <- map(1:3, function(...) {
  trt_vec <- c("A", "B", "C", "D")
  n_rep <- 1
  n_trt <- n_distinct(trt_vec) 
  crd_design <- design.crd(trt = trt_vec,
                           r = n_rep)
  crd_design$bookRowCol <- crd_design$book %>%
    bind_cols(expand.grid(row = 1:n_rep,
                          col = 1:n_trt))
  return(crd_design)
})


# Plot field layout
p1 <- ggdesplot(trt_vec ~ row + col, flip = TRUE,
                text = trt_vec, cex = 1.5, shorten = "no",
                data = pluck(block_lst, 1, "bookRowCol"),
                main = "Block I", 
                show.key = FALSE,
                col.regions = cbbPalette[-1])

p2 <- ggdesplot(trt_vec ~ row + col, flip = TRUE,
                text = trt_vec, cex = 1.5, shorten = "no",
                data = pluck(block_lst, 2, "bookRowCol"),
                main = "Block III", 
                show.key = FALSE,
                col.regions = cbbPalette[-1])

p3 <- ggdesplot(trt_vec ~ row + col, flip = TRUE,
                text = trt_vec, cex = 1.5, shorten = "no",
                data = pluck(block_lst, 3, "bookRowCol"),
                main = "Block III", 
                show.key = FALSE,
                col.regions = cbbPalette[-1])

#p4 <- ggdesplot(trt_vec ~ row + col, flip = TRUE,
#                text = trt_vec, cex = 1.5, shorten = "no",
#                data = pluck(block_lst, 4, "bookRowCol"),
#                main = "Block IV", 
#                show.key = FALSE,
#                col.regions = cbbPalette[-1])

p1 + p2 + p3 #+ p4

```

## Latin square design (LSD)

```{r}
#| echo: false
#| warning: false
#| label: fig-dsplot-latin
#| fig-align: center
#| fig-height: 6
#| fig-width: 9
#| fig-cap: "foo."


trt_vec <- c("A", "B", "C", "D")

latsquare_design <- design.lsd(trt = trt_vec,
                               seed = 42)

# Plot field layout
ggdesplot(trt_vec ~ row + col, flip = TRUE,
        text = trt_vec, cex = 1.5, shorten = "no",
        data = latsquare_design$book,
        main = "", 
        show.key = FALSE,
        col.regions = cbbPalette[-1])

```

## Alpha design

```{r}
#| echo: false
#| label: fig-dsplot-alpha
#| fig-align: center
#| fig-height: 6
#| fig-width: 9
#| fig-cap: "foo."
#| column: page

col2names <- cbbPalette %>% 
  set_names(LETTERS[1:8])

## Rep 1
trt_vec <- LETTERS[1:8] %>% sample()
trt_11_vec <- trt_vec[1:4]
trt_12_vec <- trt_vec[5:8]
n_rep <- 1
n_trt <- n_distinct(trt_11_vec) 

crd_1_design <- design.crd(trt = trt_11_vec,
                           r = n_rep)

crd_2_design <- design.crd(trt = trt_12_vec,
                           r = n_rep)

# Add Row and Col 
crd_1_design$bookRowCol <- crd_1_design$book %>%
  bind_cols(expand.grid(row = 1:n_rep,
                        col = 1:n_trt))

crd_2_design$bookRowCol <- crd_2_design$book %>%
  bind_cols(expand.grid(row = 1:n_rep,
                        col = 1:n_trt))

# Plot field layout
p11 <- ggdesplot(trt_11_vec ~ row + col, flip = TRUE,
        text = trt_11_vec, cex = 1, shorten = "no",
        data = crd_1_design$bookRowCol,
        main = "Incomplete Block I", 
        show.key = FALSE,
        col.regions = col2names[trt_11_vec])

p12 <- ggdesplot(trt_12_vec ~ row + col, flip = TRUE,
        text = trt_12_vec, cex = 1, shorten = "no",
        data = crd_2_design$bookRowCol,
        main = "Incomplete Block II", 
        show.key = FALSE,
        col.regions = col2names[trt_12_vec])


## Rep 2
trt_vec <- LETTERS[1:8] %>% sample()
trt_21_vec <- trt_vec[1:4]
trt_22_vec <- trt_vec[5:8]
n_rep <- 1
n_trt <- n_distinct(trt_21_vec) 

crd_1_design <- design.crd(trt = trt_21_vec,
                           r = n_rep)

crd_2_design <- design.crd(trt = trt_22_vec,
                           r = n_rep)

# Add Row and Col 
crd_1_design$bookRowCol <- crd_1_design$book %>%
  bind_cols(expand.grid(row = 1:n_rep,
                        col = 1:n_trt))

crd_2_design$bookRowCol <- crd_2_design$book %>%
  bind_cols(expand.grid(row = 1:n_rep,
                        col = 1:n_trt))

# Plot field layout
p21 <- ggdesplot(trt_21_vec ~ row + col, flip = TRUE,
        text = trt_21_vec, cex = 1, shorten = "no",
        data = crd_1_design$bookRowCol,
        main = "Incomplete Block III", 
        show.key = FALSE,
        col.regions = col2names[trt_21_vec])

p22 <- ggdesplot(trt_22_vec ~ row + col, flip = TRUE,
        text = trt_22_vec, cex = 1, shorten = "no",
        data = crd_2_design$bookRowCol,
        main = "Incomplete Block IV", 
        show.key = FALSE,
        col.regions = col2names[trt_22_vec])


## Rep 3
trt_vec <- LETTERS[1:8] %>% sample()
trt_31_vec <- trt_vec[1:4]
trt_32_vec <- trt_vec[5:8]
n_rep <- 1
n_trt <- n_distinct(trt_31_vec) 

crd_1_design <- design.crd(trt = trt_31_vec,
                           r = n_rep)

crd_2_design <- design.crd(trt = trt_32_vec,
                           r = n_rep)

# Add Row and Col 
crd_1_design$bookRowCol <- crd_1_design$book %>%
  bind_cols(expand.grid(row = 1:n_rep,
                        col = 1:n_trt))

crd_2_design$bookRowCol <- crd_2_design$book %>%
  bind_cols(expand.grid(row = 1:n_rep,
                        col = 1:n_trt))

# Plot field layout
p31 <- ggdesplot(trt_31_vec ~ row + col, flip = TRUE,
        text = trt_31_vec, cex = 1, shorten = "no",
        data = crd_1_design$bookRowCol,
        main = "Incomplete Block V", 
        show.key = FALSE,
        col.regions = col2names[trt_31_vec])

p32 <- ggdesplot(trt_32_vec ~ row + col, flip = TRUE,
        text = trt_32_vec, cex = 1, shorten = "no",
        data = crd_2_design$bookRowCol,
        main = "Incomplete Block VI", 
        show.key = FALSE,
        col.regions = col2names[trt_32_vec])

p1112 <- (p11 | p12) +
  plot_annotation(title = "Replication 1") & 
  theme(plot.title = element_text(hjust = 0.5))

p2122 <- (p21 | p22 ) +
  plot_annotation(title = "Replication 2") & 
  theme(plot.title = element_text(hjust = 0.5))

p3132 <- (p31 | p32 ) +
  plot_annotation(title = "Replication 3") & 
  theme(plot.title = element_text(hjust = 0.5))


wrap_elements(full = rectGrob(gp = gpar(fill = 'black', alpha = 0.5)), p1112) / wrap_elements(full = rectGrob(gp = gpar(fill = 'black', alpha = 0.5)), p2122) / wrap_elements(full = rectGrob(gp = gpar(fill = 'black', alpha = 0.5)), p3132)

```

## Split plot design

```{r}
#| echo: false
#| label: fig-dsplot-splitplot
#| fig-align: center
#| fig-height: 6
#| fig-width: 9
#| fig-cap: "foo."
#| column: page

fac2_vec <- c("Trt 1", "Trt 2", "Trt 3", "Trt 4")

fac21_lst <- map(1:4, function(...) {
  trt_vec <- LETTERS[1:6] %>% sample()
  n_rep <- 1
  n_trt <- n_distinct(trt_vec) 
  ##
  crd_design <- design.crd(trt = trt_vec,
                           r = n_rep)
  # Add Row and Col 
  crd_design$bookRowCol <- crd_design$book %>%
    bind_cols(expand.grid(row = 1:n_rep,
                          col = 1:n_trt))
  return(crd_design)
})

plot_1_lst <- map(sample(1:4), function(i){
  ggdesplot(trt_vec ~ row + col, flip = TRUE,
            text = trt_vec, cex = 1, shorten = "no",
            data = pluck(fac21_lst, i, "bookRowCol"),
            main = fac2_vec[i], 
            show.key = FALSE,
            col.regions = cbbPalette[i])
})

fac22_lst <- map(1:4, function(...) {
  trt_vec <- LETTERS[1:6] %>% sample()
  n_rep <- 1
  n_trt <- n_distinct(trt_vec) 
  ##
  crd_design <- design.crd(trt = trt_vec,
                           r = n_rep)
  # Add Row and Col 
  crd_design$bookRowCol <- crd_design$book %>%
    bind_cols(expand.grid(row = 1:n_rep,
                          col = 1:n_trt))
  return(crd_design)
})

plot_2_lst <- map(sample(1:4), function(i){
  ggdesplot(trt_vec ~ row + col, flip = TRUE,
            text = trt_vec, cex = 1, shorten = "no",
            data = pluck(fac22_lst, i, "bookRowCol"),
            main = fac2_vec[i], 
            show.key = FALSE,
            col.regions = cbbPalette[i])
})

fac23_lst <- map(1:4, function(...) {
  trt_vec <- LETTERS[1:6] %>% sample()
  n_rep <- 1
  n_trt <- n_distinct(trt_vec) 
  ##
  crd_design <- design.crd(trt = trt_vec,
                           r = n_rep)
  # Add Row and Col 
  crd_design$bookRowCol <- crd_design$book %>%
    bind_cols(expand.grid(row = 1:n_rep,
                          col = 1:n_trt))
  return(crd_design)
})


plot_3_lst <- map(sample(1:4), function(i){
  ggdesplot(trt_vec ~ row + col, flip = TRUE,
            text = trt_vec, cex = 1, shorten = "no",
            data = pluck(fac23_lst, i, "bookRowCol"),
            main = fac2_vec[i], 
            show.key = FALSE,
            col.regions = cbbPalette[i])
})



p1 <- (pluck(plot_1_lst, 1) | pluck(plot_1_lst, 2) | pluck(plot_1_lst, 3) | pluck(plot_1_lst, 4)) +
  plot_annotation(title = "Block I") & 
  theme(plot.title = element_text(hjust = 0.5))

p2 <- (pluck(plot_2_lst, 1) | pluck(plot_2_lst, 2) | pluck(plot_2_lst, 3) | pluck(plot_2_lst, 4)) +
  plot_annotation(title = "Block II") & 
  theme(plot.title = element_text(hjust = 0.5))

p3 <- (pluck(plot_3_lst, 1) | pluck(plot_3_lst, 2) | pluck(plot_3_lst, 3) | pluck(plot_3_lst, 4)) +
  plot_annotation(title = "Block III") & 
  theme(plot.title = element_text(hjust = 0.5))


wrap_elements(full = rectGrob(gp = gpar(fill = 'black', alpha = 0.5)), p1) / wrap_elements(full = rectGrob(gp = gpar(fill = 'black', alpha = 0.5)), p2) / wrap_elements(full = rectGrob(gp = gpar(fill = 'black', alpha = 0.5)), p3)


```

```{r}

data_tbl <- expand_grid(trt = 1:4, block = 1:4, rep = 1:5) %>% 
    mutate(rsp = 20 + 2.5 * trt + 1.5 * block + rnorm(n(), 0, 1),
           trt = factor(trt, labels = c("ctrl", "A", "B", "C")),
           block = factor(block, labels = as.roman(1:4)),
           rep = as_factor(rep))

```
