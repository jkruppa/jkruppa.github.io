```{r echo = FALSE}
pacman::p_load(tidyverse, readxl, knitr, kableExtra, Hmisc,
               grid, agricolae, patchwork, desplot, modelr)
```

# Fortgeschrittene Designs {#sec-experimental-design-advanced}

*Version vom `r format(Sys.time(), '%B %d, %Y um %H:%M:%S')`*

![](images/caution.png){fig-align="center" width="50%"}

::: column-margin
Ein Teil der Beispiele basiert auf [DSFAIR von P. Schmidt](https://schmidtpaul.github.io/DSFAIR/DesigningExperiments.html) und wurde von mir angepasst und vereinfacht. Hier findet sich auch weiterführende Literatur und weitere Beispiele.

Im Weiteren schauen wir uns auch das R Paket `agricolae` mit Beispielen von [Experimental Designs with agricolae](https://myaseen208.com/agricolae/articles/ExperimentalDesign.html) genauer einmal an.
:::

In diesem Kapitel wollen wir uns mit der Erstellung von komplexeren experimentellen Designs beschäftigen.

::: callout-important
## Umfang des Kapitels

Ich werde mich in diesem Kapitel für das Erste auf die wichtigen experimentellen Design beschränken. Wenn sich aus deer Lehre oder Beratungstätigkeit noch Bedarf an weiteren experimentellen Designs ergibt, werde ich die Designs entsprechend ergänzen. Insbesondere hier gilt, dass [DSFAIR](https://schmidtpaul.github.io/DSFAIR/DesigningExperiments.html) einen sehr umfangreichen Überblick liefert.
:::

## Genutzte R Pakete

Wir wollen folgende R Pakete in diesem Kapitel nutzen.

```{r echo = TRUE}
#| message: false
pacman::p_load(tidyverse, magrittr, agricolae, dae, desplot,
               conflicted)
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("mutate", "dplyr")
conflict_prefer("set_names", "magrittr")
cbbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", 
                "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
```

Am Ende des Kapitels findest du nochmal den gesamten R Code in einem Rutsch zum selber durchführen oder aber kopieren.

## Split plot design {#sec-split}

::: column-page
![Visualisierung des *split plot design* mit einer Behandlung und vier Behandlungsleveln sowie einer zweiten Behandlung mit fünf Behandlungsleveln. Die erste Behandlung ist über die drei Blöcke randomisiert.](images/experimental-design-split.png){#fig-design-split fig-align="center" width="80%"}
:::

### Daten

```{r}

data_tbl <- expand_grid(trt = 1:4, block = 1:4, rep = 1:5) %>% 
    mutate(rsp = 20 + 2.5 * trt + 1.5 * block + rnorm(n(), 0, 1),
           trt = factor(trt, labels = c("ctrl", "A", "B", "C")),
           block = factor(block, labels = as.roman(1:4)),
           rep = as_factor(rep))

```

## Subsampling

## Incomplete block design

## Randomized complete block design (RCBD) - mit 2 Faktoren

$$
y \sim \overbrace{trt}^{f_1} + \underbrace{block}_{f_2} + \overbrace{location}^{f_3}
$$

```{r}
three_fct_long_tbl <- expand_grid(location = 1:2, trt = 1:4, block = 1:4) %>% 
  mutate(location = factor(location, labels = c("north", "south")),
         trt = factor(trt, labels = c("ctrl", "A", "B", "C")),
         block = factor(block, labels = as.roman(1:4)),
         id = sample(1:n()))

three_fct_long_tbl
```

```{r}
three_fct_wide_tbl <- three_fct_long_tbl %>% 
  split(.$location) %>% 
  map(~pivot_wider(., names_from = block, values_from = id)) %>% 
  bind_rows()

three_fct_wide_tbl
```

::: {.callout-caution collapse="true"}
## Und zurück mit `pivot_longer()`

```{r}
#| eval: false
#| message: false
#| warning: false

crd_wide_tbl %>% 
  pivot_longer(cols = I:IV,
               names_to = "block",
               values_to = "id")
```
:::

```{r}
#| eval: false
#| message: false
#| warning: false
three_fct_wide_tbl %>% 
  write_xlsx("template_sheet.xlsx")
```
