```{r echo = FALSE}
pacman::p_load(tidyverse, readxl, knitr, kableExtra, openxlsx)
```

# Beispielhafte Auswertungen {#sec-beispiel-auswertung}

*Version vom `r format(Sys.time(), '%B %d, %Y um %H:%M:%S')`*

![](images/caution.png){fig-align="center" width="50%"}

::: callout-tip
## Beispielhafte Auswertungen per Video

Du findest auf YouTube in der Playlist [Spielweise in R (Level 3)](https://www.youtube.com/playlist?list=PLe51bCp9JvEFZeYClBKad6yurjUzc8jXp) viele der Analysen hier einmal als Video. Ich werde zwar alles nochmal hier als Text aufschreiben, aber manchmal ist das Sehen und Hören dann einfacher.
:::

Worum geht es in diesem Kapitel? Ich rechne hier fröhlich Dinge und präsentiere dann die Ergebnisse. Das heißt, du findest hier beispielhafte Auswertungen, die eventuell auch deine Problemstellung betreffen.

-   In @sec-app-example-iso schauen wir uns einmal die Erstellung eines Isoplethendiagramms für Münster & Osnabrück aus den frei verfügbaren Daten des Deutschen Wetterdienstes an.
-   In @sec-app-example-number-groups rechnen wir einmal ein simples Beispiel für Zähldaten in zwei Gruppen. Wir haben hier nicht wiederholt gezählt, sondern nur jeweils einmal an einer Stelle.
-   In @sec-app-example-anova-inter rechnen wir nochmal eine zweifaktorielle ANOVA mit Interaktionsterm durch. Wir kriegen dann unser *compact letter display* wie auch die Konfidenzintervalle wieder.
-   In @sec-mult-map-ght rechnen wir einen Games Howell Test für normalverteilte Daten mit Varianzheterogenität. Hier hauen wir ein wenig auf die Pauke und rechnen alles in wenigen Zeilen mit der Funktion `map()`. War eine spaßige Auswerung für mich, da ich hier mal wieder programmieren üben konnte.

Je weiter du nach unten in diesem Kapitel kommst, desto wilder wird der R Code. Ich werde noch eine Zeit brauchen, bis ich alles wieder schon mit Text hier verarbeitet habe. Es wird aber immer mal wieder etwas *messy* aussehen. Hier wird eben auch gearbeitet.

## Genutzte R Pakete für das Kapitel

Wir wollen folgende R Pakete in diesem Kapitel nutzen.

```{r echo = TRUE}
#| message: false
pacman::p_load(tidyverse, magrittr, readxl, 
               broom, multcomp, emmeans, effectsize, report,
               see, metR, parameters, multcompView,
               modelsummary, rstatix,
               conflicted, ordinal)
## resolve some conflicts with same function naming
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
```

Am Ende des Kapitels findest du nochmal den gesamten R Code in einem Rutsch zum selber durchführen oder aber kopieren.

## Isoplethendiagramm für Münster & Osnabrück {#sec-app-example-iso}

{{< include app-example-analysis/app-example-analysis-01.qmd >}}

## Analyse von Anzahlen in zwei Gruppen {#sec-app-example-number-groups}

{{< include app-example-analysis/app-example-analysis-02.qmd >}}

## Auswertung zweifaktorielle ANOVA mit Interaktion {#sec-app-example-anova-inter}

{{< include app-example-analysis/app-example-analysis-03.qmd >}}

## Multiples Testen mit Games Howell Test {#sec-mult-map-ght}

{{< include app-example-analysis/app-example-analysis-04.qmd >}}

## Wurzelqualität in einem zweifaktoriellen Design

```{r}
root_tbl <- read_excel("data/root_2fac_data.xlsx") %>% 
  mutate(treatment = str_c(treatment, "_", fert, "_", mixture)) %>% 
  select(treatment, block, grade) %>% 
  mutate(grade_fctr = as_factor(grade),
         block = as_factor(block))
```

In @fig-app-example-root-1

```{r}
#| message: false
#| warning: false
#| fig-align: center
#| label: fig-app-example-root-1
#| fig-height: 5
#| fig-width: 8
#| fig-cap: "Boniturnoten der Wurzel über alle Behandlungslevel."


ggplot(root_tbl, aes(treatment, grade, fill = block)) +
  theme_bw() +
  geom_dotplot(binaxis = "y", stackdir='center', 
              position=position_dodge(0.6), dotsize = 0.75) +
  scale_y_continuous(breaks = 1:9, limits = c(1,9)) +
  scale_fill_okabeito() +
  theme(axis.text.x = element_text(angle = 45, hjust=1))
```

```{r}
#| eval: false

friedman.test(grade_fctr ~ treatment | block, root_tbl)
```

`Error in friedman.test: not an unreplicated complete block design`

```{r}
clm_fit <- clm(grade_fctr ~ treatment + block, data = root_tbl,
               threshold = "symmetric")
```

```{r}
anova(clm_fit)
```

```{r}
clm_fit %>% 
  emmeans(~ treatment) %>% 
  cld(Letters = letters) %>% 
  arrange(treatment) %>% 
  select(treatment, .group)
```

`emmeans(~ treatment | block)` erhalten wir in der `df` Spalte den Eintrag `Inf` für eng. *infinity* und das ist nie ein gutes Zeichen. Wir haben auch die sich immer gleich wiederholende Abfolge der *compact letters*. Also macht es mehr kaputt als heile und wir lassen das Modell so wie es ist.

```{r}
clm_fit %>% 
  emmeans(~ treatment | block) %>% 
  cld(Letters = letters) %>% 
  arrange(treatment) %>% 
  select(treatment, .group)
```

## Auswertung von Pflugdaten

```{r}
#| echo: true
#| message: false
#| warning: false

plowing_file <- file.path("data/plowing_data.xlsx")

plowing_lst <- plowing_file %>% 
  excel_sheets() %>% 
  rlang::set_names() %>% 
  map(read_excel, path = plowing_file)

plowing_lst <- plowing_lst %>% 
  map(~arrange(.x, day, block, variant)) %>% 
  map(~mutate(.x, 
              block = as_factor(block),
              variant = as_factor(variant),
              day = as_factor(day))) 

as_tbl <- pluck(plowing_lst, "as")
ph_tbl <- pluck(plowing_lst, "ph")
water_tbl <- pluck(plowing_lst, "water")
root_tbl <- pluck(plowing_lst, "root")


## EDA
p_template <- ggplot() +
  aes(x = variant, y = mean, group = day, fill = day) + 
  geom_bar(stat = "identity", position = position_dodge()) +
  geom_errorbar(aes(ymin = mean-sd, ymax = mean+sd),
                width = 0.2, position = position_dodge(0.9)) +
  theme_bw() +
  labs(fill = "Tag") 


as_stat_tbl <- as_tbl %>% 
  group_by(day, variant) %>% 
  summarise(mean = mean(as),
            sd = sd(as))

p_template %+% as_stat_tbl

ph_stat_tbl <- ph_tbl %>% 
  group_by(day, variant) %>% 
  summarise(mean = mean(ph),
            sd = sd(ph))

p_template %+% ph_stat_tbl

water_stat_tbl <- water_tbl %>% 
  group_by(day, variant) %>% 
  summarise(mean = mean(water),
            sd = sd(water))

p_template %+% water_stat_tbl

root_stat_tbl <- root_tbl %>% 
  group_by(day, variant) %>% 
  summarise(mean = mean(root),
            sd = sd(root))

p_template %+% root_stat_tbl


## ANOVA and posthoc

as_fit <- lm(as ~ variant + block, data = as_tbl) 

as_fit %>% anova

ph_fit <- lm(ph ~ variant + block, data = ph_tbl) 

ph_fit %>% anova

water_fit <- lm(water ~ variant + block, data = water_tbl) 

water_fit %>% anova

root_fit <- lm(root ~ variant + block, data = root_tbl) 

root_fit %>% anova


pairwise.t.test(ph_tbl$ph, ph_tbl$variant,
                p.adjust.method = "none")


```

## Auswertung von Gewichten

## Auswertung von Infektionsstatus
