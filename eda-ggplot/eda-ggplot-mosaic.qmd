Der Mosaicplot ist ein eher seltener Plot. Wir nutzen ihn aber häufig in der [Fragebogenanalyse](#sec-modeling-survey) oder aber in den Gesundheitswissenschaften. Da wir dann aber immer wieder Überschneidungen haben, wollen wir hier auch den Mosaicplot lernen. Was macht der Mosaicplot? Wir können mit dem Mosaicplot zwei Variablen, die nur aus Kategorien bestehen visualisieren. Ein Mosaicplot macht dabei für nur eine Gruppe keinen Sinn. Wir brauchen immer ein $X$ mit mindestens zwei Gruppen sowie ein $Y$ mit mindestens zwei Gruppen. Betrachten wir also einmal den Mosaicplot theoretisch, dann einmal händisch am Beispiel der mit Flohschnupfen infizierten Hunde- und Katzenflöhe sowie die Umsetzung in `{ggplot}`.

::: callout-tip
## Alternativen in `{tidyplots}`

Das R Paket `{tidyplots}` bietet auch noch andere Alternativen für die Darstellung von Anteilen in deinen Daten unter [Visualisierung von Anteilen](https://jbengler.github.io/tidyplots/articles/Visualizing-data.html#proportion). Vielleicht findest du da auch noch eine bessere Abbildung als hier mit dem Mosaicplot.
:::

::: panel-tabset
## Theoretisch

Ein Mosaicplot ist nichts anderes als die Visualisierung einer 2x2 Kreuztabelle. Daher im Folgenden einmal eine typische 2x2 Kreuztabelle als Abbildung. Wir schreiben in die Kästen die jeweiligen Anzahlen des Auftretens und berechnen dann die Anteile *in der Spalte*. Hier ist schon die erste Entscheidung zu treffen. Wie wollen wir die Anteile berechnen? Auf der ganzen Tabelle und daher durch $n$ teilen? Oder aber über die Zeilen und damit über die Kategorien von $Y$? Häufig wollen wir wissen, wie sich die Gruppen in $X$ im Bezug auf $Y$ unterscheiden. Daher werden die Gruppen in die Spalten geschrieben und wir berechnen die Anteile spaltenweise. In der folgenden 2x2 Tafl siehst du einmal die Erstellung für den spaltenweisen Anteilsvergleich.

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: fig-mosaic-theo-01
#| fig-align: center
#| fig-height: 7
#| fig-width: 7
#| fig-cap: "Eine theoretische 2x2 Tafel für zwei Gruppen und einem kategoriellen Endpunkt $y$ mit den beiden Ausprägungen ja/nein oder 0/1. Für jedes der Felder wird spaltenweise der Anteil berechnet. Insgesamt wurden $n$ Beobachtungen gemacht. *[Zum Vergrößern anklicken]*"


tibble(x = 0:12,
       y = 0:12) |> 
  ggplot(aes(x, y)) +
  theme_minimal() + 
  xlim(0, 12.75) +
  ylim(-0.75, 12) +
  ## col
  annotate("rect", xmin = 2, xmax = 7, ymin = 0, ymax = 5, fill = "#0072B2", alpha = 0.3) +
  annotate("rect", xmin = 7, xmax = 12, ymin = 0, ymax = 5, fill = "#E69F00", alpha = 0.3) +
  annotate("rect", xmin = 7, xmax = 12, ymin = 5, ymax = 10, fill = "#D55E00", alpha = 0.3) +
  annotate("rect", xmin = 2, xmax = 7, ymin = 5, ymax = 10, fill = "#56B4E9", alpha = 0.3) +
  geom_segment(x = 2, y = -2, xend = 2, yend = 12, color = "black",
               linewidth = 0.5) +
  geom_segment(x = 7, y = -1, xend = 7, yend = 11, color = "black",
               linewidth = 0.5) +
  geom_segment(x = 12, y = -2, xend = 12, yend = 12, color = "black",
               linewidth = 0.5) +
  annotate("text", x = 4.5, y = 10.75, label = "Gruppe 1", 
           size = 7, color = "black", fontface = "italic") +
  annotate("text", x = 9.5, y = 10.75, label = "Gruppe 2", 
           size = 7, color = "black", fontface = "italic") +
  annotate("text", x = 7, y = 11.75, label = "X", 
           size = 8, color = "black", fontface = "bold") +
  ## row
  geom_segment(y = 0, x = 0, yend = 0, xend = 14, color = "black",
               linewidth = 0.5) +
  geom_segment(y = 5, x = 1, yend = 5, xend = 13, color = "black",
               linewidth = 0.5) +
  geom_segment(y = 10, x = 0, yend = 10, xend = 14, color = "black",
               linewidth = 0.5) +  
  annotate("text", x = 1.25, y = 7.5, label = "Ja (1)", 
           size = 7, angle = 90, color = "black", fontface = "italic") +
  annotate("text", x = 1.25, y = 2.5, label = "Nein (0)", 
           size = 7, angle = 90, color = "black", fontface = "italic") +
  annotate("text", x = 0.25, y = 5, label = "Y", 
           size = 8, angle = 90, color = "black", fontface = "bold") +
  ## fields
  annotate("label", x = c(3, 3, 8, 8), y = c(4, 9, 4, 9), label = c("c", "a", "d", "b"),
           size = 9, fill = c("#0072B2", "#56B4E9", "#E69F00", "#D55E00"), alpha = 0.5) +
  annotate("text", x = 4.5, y = 7.5, label = expression(p[a]~'='~over(a, a+c)),
           size = 9, color = "black") +
  annotate("text", x = 4.5, y = 2.5, label = expression(p[c]~'='~over(c, a+c)),
           size = 9, color = "black") +
  annotate("text", x = 9.5, y = 7.5, label = expression(p[b]~'='~over(b, b+d)),
           size = 9, color = "black") +
  annotate("text", x = 9.5, y = 2.5, label = expression(p[d]~'='~over(d, b+d)),
           size = 9, color = "black") +
  annotate("text", x = c(4.5, 9.5, 12.75, 12.75, 12.75), 
           y = c(-0.75, -0.75, -0.75, 2.5, 7.5), label = c("a+c", "b+d", "n", "c+d", "a+b"),
           size = 8, color = "black", fontface = 2) +
  labs(x = "", y = "") +
  ggtitle("Spaltenweise") +
  theme(legend.position = "none",
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
       panel.grid.major = element_blank(),
       panel.grid.minor = element_blank(),
       plot.title = element_text(size=22, face = "bold")) 
```

Der Mosaicplot ist jetzt nichts anderes als die Visualisierung der obigen theoretischen 2x2 Kreuztabelle. Dabei kippen wir einmal die Beschriftung der Spalten von oben nach unten, da wir es ja jetzt mit einer Abbildung zu tun haben und nicht mit einer Abbildung. Der eigentliche Witz eines Mosaicplot ist jetzt die Flächen *spaltenweise* den berechneten Anteilen anzupassen. Auf diese Weise können wir die Anteile der Gruppen sofort visuell erfassen.

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: fig-mosaic-theo-02
#| fig-align: center
#| fig-height: 7
#| fig-width: 7
#| fig-cap: "Theoretischer Mosaicplot, der die Anteile *spaltenweise* für die beiden Guppen an dem Endpunkt $Y$ wiedergibt. Dabei ist die Fläche $A$, die jedes Quadrat einnimmt proportional zu dem berechneten Anteil. Die Anteile können so visuell schnell verglichen werden. *[Zum Vergrößern anklicken]*"


tibble(x = 0:12,
       y = 0:12) |> 
  ggplot(aes(x, y)) +
  theme_minimal() + 
  xlim(0, 12.75) +
  ylim(-1.75, 12) +
  annotate("rect", xmin = 2, xmax = 7, ymin = 0, ymax = 4, fill = "#0072B2", alpha = 0.3) +
  annotate("rect", xmin = 7, xmax = 12, ymin = 0, ymax = 7, fill = "#E69F00", alpha = 0.3) +
  annotate("rect", xmin = 7, xmax = 12, ymin = 7, ymax = 10, fill = "#D55E00", alpha = 0.3) +
  annotate("rect", xmin = 2, xmax = 7, ymin = 4, ymax = 10, fill = "#56B4E9", alpha = 0.3) +
  ## col  
  geom_segment(x = 2, y = -2, xend = 2, yend = 10, color = "black",
               linewidth = 0.5) +
  geom_segment(x = 7, y = -1, xend = 7, yend = 10, color = "black",
               linewidth = 0.5) +
  geom_segment(x = 12, y = -2, xend = 12, yend = 10, color = "black",
               linewidth = 0.5) +
  annotate("text", x = 7, y = -1.75, label = "X", 
           size = 8, color = "black", fontface = "bold") +
  ## row
  geom_segment(y = 0, x = 0, yend = 0, xend = 12, color = "black",
               linewidth = 0.5) +
  ## mosaic
  geom_segment(y = 4, x = 1, yend = 4, xend = 7, color = "black",
               linewidth = 0.5) +
  geom_segment(y = 7, x = 7, yend = 7, xend = 12, color = "black",
               linewidth = 0.5) +
  ## 
  geom_segment(y = 10, x = 0, yend = 10, xend = 12, color = "black",
               linewidth = 0.5) +  
  annotate("text", x = 1.25, y = 7, label = "Ja (1)", 
           size = 7, angle = 90, color = "black", fontface = "italic") +
  annotate("text", x = 1.25, y = 2, label = "Nein (0)", 
           size = 7, angle = 90, color = "black", fontface = "italic") +
  annotate("text", x = 0.25, y = 5, label = "Y", 
           size = 8, angle = 90, color = "black", fontface = "bold") +
  ## fields
  annotate("text", x = 4.5, y = 7, label = expression(A*"("*p[a]*")"),
           size = 9, color = "black") +
  annotate("text", x = 4.5, y = 2, label = expression(A*"("*p[c]*")"),
           size = 9, color = "black") +
  annotate("text", x = 9.5, y = 8.5, label = expression(A*"("*p[b]*")"),
           size = 9, color = "black") +
  annotate("text", x = 9.5, y = 3.5, label = expression(A*"("*p[d]*")"),
           size = 9, color = "black") +
  annotate("text", x = c(4.5, 9.5), 
           y = c(-0.75, -0.75), label = c("Gruppe 1", "Gruppe 2"),
           size = 8, color = "black", fontface = "italic") +
  labs(x = "", y = "") +
  annotate("label", x = 7, y = 11.5, hjust ="center", size = 7,
           label = expression(A*"("*p[a]*")"~'+'~A*"("*p[c]*")"~'='~1~'='~A*"("*p[b]*")"~'+'~A*"("*p[d]*")")) +
  geom_curve(x = 2.7, y = 11.5, xend = 3, yend = 9, linewidth = 0.5,
             arrow = arrow(length = unit(0.03, "npc"), type = "closed"),
             curvature = 0.3, alpha = 1, color = "#0072B2") +
  geom_curve(x = 6, y = 10.9, xend = 5.3, yend = 3, linewidth = 0.5,
             arrow = arrow(length = unit(0.03, "npc"), type = "closed"),
             curvature = -0.3, alpha = 1, color = "#0072B2") +
  geom_curve(x = 11.3, y = 11.5, xend = 11, yend = 5, linewidth = 0.5,
             arrow = arrow(length = unit(0.03, "npc"), type = "closed"),
             curvature = -0.3, alpha = 1, color = "#D55E00") +
  geom_curve(x = 8, y = 10.9, xend = 7.7, yend = 9, linewidth = 0.5,
             arrow = arrow(length = unit(0.03, "npc"), type = "closed"),
             curvature = 0.3, alpha = 1, color = "#D55E00") +
  ggtitle("Spaltenweise") +
  theme(legend.position = "none",
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
       panel.grid.major = element_blank(),
       panel.grid.minor = element_blank(),
       plot.title = element_text(size=22, face = "bold")) 


  #annotate("text", x = 4.5, y = 7, label = expression(p[a]~'='~A~bgroup("(",over(a, a+c), ")" )),
   #        size = 9, color = "black") +

```

## Händisch

Für unsere händische Erstellung des Mosaicplots brauchen wir erstmal eine 2x2 Kreuztabelle. Hierz nutzen wir den Anteil der Flöhe mit Flohschnupfen in unseren Hunde- und Katzenflohdaten. Dabei wollen wir wissen, ob sich die beiden Tierarten als Gruppen voneinander unterscheiden. Damit ist unser $Y$ der Infektionsstatus (ja/nein) und unser $X$ die beiden Tierarten (dog/cat). Es ergibt sich dann die folgende 2x2 Kreuztabelle. Beachte auch die entsprechenden Randsummen, die auch noch eine Information über die Daten beinhalten. So finden wir nämlich mehr gesunde Tiere in unseren Daten als kranke Tiere über die beiden Tierart hinweg.

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: fig-mosaic-hand-01
#| fig-align: center
#| fig-height: 7
#| fig-width: 7
#| fig-cap: "Eine 2x2 Tafel für die Hunde- und Katzenflöhe und dem entsprechenden Infektionsstatus mit den beiden Ausprägungen ja/nein oder 0/1. Für jedes der Felder wird spaltenweise der Anteil berechnet. So haben 43% der Hundeflöhe einen Schnupfen aber nur 29% der Katzen. Insgesamt wurden $n$ Beobachtungen gemacht. *[Zum Vergrößern anklicken]*"


tibble(x = 0:12,
       y = 0:12) |> 
  ggplot(aes(x, y)) +
  theme_minimal() + 
  xlim(0, 12.75) +
  ylim(-0.75, 12) +
  ## col
  annotate("rect", xmin = 2, xmax = 7, ymin = 0, ymax = 5, fill = "#009E73", alpha = 0.3) +
  annotate("rect", xmin = 7, xmax = 12, ymin = 0, ymax = 5, fill = "#CC79A7", alpha = 0.3) +
  annotate("rect", xmin = 7, xmax = 12, ymin = 5, ymax = 10, fill = "#56B4E9", alpha = 0.3) +
  annotate("rect", xmin = 2, xmax = 7, ymin = 5, ymax = 10, fill = "#E69F00", alpha = 0.3) +
  geom_segment(x = 2, y = -2, xend = 2, yend = 12, color = "black",
               linewidth = 0.5) +
  geom_segment(x = 7, y = -1, xend = 7, yend = 11, color = "black",
               linewidth = 0.5) +
  geom_segment(x = 12, y = -2, xend = 12, yend = 12, color = "black",
               linewidth = 0.5) +
  annotate("text", x = 4.5, y = 10.75, label = "dog", 
           size = 7, color = "black", fontface = "italic") +
  annotate("text", x = 9.5, y = 10.75, label = "cat", 
           size = 7, color = "black", fontface = "italic") +
  annotate("text", x = 7, y = 11.75, label = "Tierart (animal)", 
           size = 8, color = "black", fontface = "bold") +
  ## row
  geom_segment(y = 0, x = 0, yend = 0, xend = 14, color = "black",
               linewidth = 0.5) +
  geom_segment(y = 5, x = 1, yend = 5, xend = 13, color = "black",
               linewidth = 0.5) +
  geom_segment(y = 10, x = 0, yend = 10, xend = 14, color = "black",
               linewidth = 0.5) +  
  annotate("text", x = 1.25, y = 7.5, label = "Ja (1)", 
           size = 7, angle = 90, color = "black", fontface = "italic") +
  annotate("text", x = 1.25, y = 2.5, label = "Nein (0)", 
           size = 7, angle = 90, color = "black", fontface = "italic") +
  annotate("text", x = 0.25, y = 5, label = "Infektionsstatus (infected)", 
           size = 8, angle = 90, color = "black", fontface = "bold") +
  ## fields
  annotate("text", x = 4.5, y = 7.5, label = expression(over(3, 7)~'='~0.43),
           size = 9, color = "black") +
  annotate("text", x = 4.5, y = 2.5, label = expression(over(4, 7)~'='~0.57),
           size = 9, color = "black") +
  annotate("text", x = 9.5, y = 7.5, label = expression(over(2, 7)~'='~0.29),
           size = 9, color = "black") +
  annotate("text", x = 9.5, y = 2.5, label = expression(over(5, 7)~'='~0.71),
           size = 9, color = "black") +
  annotate("text", x = c(4.5, 9.5, 12.75, 12.75, 12.75), 
           y = c(-0.75, -0.75, -0.75, 2.5, 7.5), label = c(7, 7, 14, 9, 5),
           size = 8, color = "black", fontface = 2) +
  labs(x = "", y = "") +
  ggtitle("Spaltenweise") +
  theme(legend.position = "none",
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
       panel.grid.major = element_blank(),
       panel.grid.minor = element_blank(),
       plot.title = element_text(size=22, face = "bold")) 
```

Leider sind die Prozentzahlen in der 2x2 Kreuztabelle schwer visuell zu unterscheiden. Deshalb zeichnen wir den Mosaicplot so, dass die Flächen die Anteile in den Spalten widerspiegeln. So ist die Fläche von 43% kranken Hundeflöhen fast doppelt so groß wie die Fläche der 29% kranken Katzen. Daher lassen sich so schnell die Gruppen miteinander vergleichen. Wir sehen hier sehr schön, dass weit weniger Katzenflöhe mit Flohschnupfen infiziert sind als Hundeflöhe.

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: fig-mosaic-hand-02
#| fig-align: center
#| fig-height: 7
#| fig-width: 7
#| fig-cap: "Mosaicplot des Infektionsstatus für die Hunde- und Katzenflöhe. Der Anteil ist für beide Gruppen *spaltenweise* an dem Endpunkt $Y$ berechnet. Dabei ist die Fläche $A$, die jedes Quadrat einnimmt proportional zu dem berechneten Anteil. Die Anteile können so visuell schnell verglichen werden. *[Zum Vergrößern anklicken]*"


tibble(x = 0:12,
       y = 0:12) |> 
  ggplot(aes(x, y)) +
  theme_minimal() + 
  xlim(0, 12.75) +
  ylim(-1.75, 12) +
  annotate("rect", xmin = 2, xmax = 7, ymin = 0, ymax = 4, fill = "#0072B2", alpha = 0.3) +
  annotate("rect", xmin = 7, xmax = 12, ymin = 0, ymax = 7, fill = "#E69F00", alpha = 0.3) +
  annotate("rect", xmin = 7, xmax = 12, ymin = 7, ymax = 10, fill = "#D55E00", alpha = 0.3) +
  annotate("rect", xmin = 2, xmax = 7, ymin = 4, ymax = 10, fill = "#56B4E9", alpha = 0.3) +
  ## col  
  geom_segment(x = 2, y = -2, xend = 2, yend = 10, color = "black",
               linewidth = 0.5) +
  geom_segment(x = 7, y = -1, xend = 7, yend = 10, color = "black",
               linewidth = 0.5) +
  geom_segment(x = 12, y = -2, xend = 12, yend = 10, color = "black",
               linewidth = 0.5) +
  annotate("text", x = 7, y = -1.75, label = "Tierart (animal)", 
           size = 8, color = "black", fontface = "bold") +
  ## row
  geom_segment(y = 0, x = 0, yend = 0, xend = 12, color = "black",
               linewidth = 0.5) +
  ## mosaic
  geom_segment(y = 4, x = 1, yend = 4, xend = 7, color = "black",
               linewidth = 0.5) +
  geom_segment(y = 7, x = 7, yend = 7, xend = 12, color = "black",
               linewidth = 0.5) +
  ## 
  geom_segment(y = 10, x = 0, yend = 10, xend = 12, color = "black",
               linewidth = 0.5) +  
  annotate("text", x = 1.25, y = 7, label = "Ja (1)", 
           size = 7, angle = 90, color = "black", fontface = "italic") +
  annotate("text", x = 1.25, y = 2, label = "Nein (0)", 
           size = 7, angle = 90, color = "black", fontface = "italic") +
  annotate("text", x = 0.25, y = 5, label = "Infektionsstatus (infected)", 
           size = 8, angle = 90, color = "black", fontface = "bold") +
  ## fields
  annotate("text", x = 4.5, y = 7, label = expression(A*"("*p[a]*")"~'='~0.43),
           size = 9, color = "black") +
  annotate("text", x = 4.5, y = 2, label = expression(A*"("*p[c]*")"~'='~0.57),
           size = 9, color = "black") +
  annotate("text", x = 9.5, y = 8.5, label = expression(A*"("*p[b]*")"~'='~0.29),
           size = 9, color = "black") +
  annotate("text", x = 9.5, y = 3.5, label = expression(A*"("*p[d]*")"~'='~0.71),
           size = 9, color = "black") +
  annotate("text", x = c(4.5, 9.5), 
           y = c(-0.75, -0.75), label = c("Dog", "Cat"),
           size = 8, color = "black", fontface = "italic") +
  labs(x = "", y = "") +
  annotate("label", x = 7, y = 11.5, hjust ="center", size = 7,
           label = expression(0.43~'+'~0.57~'='~1~'='~0.29~'+'~0.71)) +
  geom_curve(x = 3, y = 11.5, xend = 3, yend = 9, linewidth = 0.5,
             arrow = arrow(length = unit(0.03, "npc"), type = "closed"),
             curvature = 0.4, alpha = 1, color = "#0072B2") +
  geom_curve(x = 6, y = 10.9, xend = 5.3, yend = 3, linewidth = 0.5,
             arrow = arrow(length = unit(0.03, "npc"), type = "closed"),
             curvature = -0.3, alpha = 1, color = "#0072B2") +
  geom_curve(x = 11, y = 11.5, xend = 11, yend = 5, linewidth = 0.5,
             arrow = arrow(length = unit(0.03, "npc"), type = "closed"),
             curvature = -0.3, alpha = 1, color = "#D55E00") +
  geom_curve(x = 8, y = 10.9, xend = 7.7, yend = 9, linewidth = 0.5,
             arrow = arrow(length = unit(0.03, "npc"), type = "closed"),
             curvature = 0.3, alpha = 1, color = "#D55E00") +
  ggtitle("Spaltenweise") +
  theme(legend.position = "none",
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
       panel.grid.major = element_blank(),
       panel.grid.minor = element_blank(),
       plot.title = element_text(size=22, face = "bold")) 

```

## `{ggplot}`

Für unseren Mosaicplot in R nutzen wir das R Paket `{ggmosaic}` welches uns dann ermöglicht einen Mosaicplot in `{ggplot}` zu erstellen. Zuerst müssen wir uns aber noch die Daten zusammenbauen. Dafür brauchen wir die Spalten `infected` und `animal` einmal als Faktoren und nicht als Zahlen oder Wörter. Um die 2x2 Tabelle in R in der richtigen Orientierung vorliegen zu haben, müssen wir nochmal einen kleinen Klimmzug über `mutate()` nehmen. Wir wandeln die Variable `infected` in einen Faktor um und sortieren die Level entsprechend, so dass wir die richtige Ordnung wie später im Mosaicplot haben.

```{r}
flea_dog_cat_mosaic_tbl <- fac1_tbl |> 
  mutate(animal = factor(animal, levels = c("dog", "cat")),
         infected = factor(infected, levels = c(0, 1))) |> 
  na.omit()
```

Betrachten wir jetzt einmal die 2x2 Kreuztabelle der beiden Spalten `animal` und `infected` mit der Funktion `tabyl()` aus dem R Paket `{janitor}` um einen Überblick zu erhalten.

```{r}
flea_dog_cat_mosaic_tbl %>% 
  tabyl(infected, animal) 
```

Dannn können wir uns einmal den Mosaicplot in `{ggplot}` anschauen. Wir nutzen dafür das R Paket `{ggmosaic}` mit der Funktion `geom_mosaic()`. @fig-mosaic-flea-0 zeigt den Mosaic Plot für die Variable `animal` und `infected`. Die unterschiedlich großen Flächen bilden die Verhältnisse der 2x2 Tabelle ab. So sehen wir, dass es mehr uninfizierte Flöhe als infizierte Tiere Flöhe. Am meisten gibt es uninfizierte Katzenflöhe.

```{r}
#| warning: false
#| echo: true
#| message: false
#| label: fig-mosaic-flea-0
#| fig-align: center
#| fig-height: 4
#| fig-width: 4
#| fig-cap: "Mosaicplot des Infektionsstatus für die Hunde- und Katzenflöhe. Der Anteil ist für beide Gruppen *spaltenweise* an dem Endpunkt $Y$ berechnet. Dabei ist die Fläche $A$, die jedes Quadrat einnimmt proportional zu dem berechneten Anteil. Die Anteile können so visuell schnell verglichen werden. *[Zum Vergrößern anklicken]*"

ggplot(data = flea_dog_cat_mosaic_tbl) +
  theme_minimal() +
  geom_mosaic(aes(x = product(infected, animal), fill = animal)) +
  theme(legend.position = "none")

```
:::
