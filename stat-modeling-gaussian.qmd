```{r echo = FALSE}
pacman::p_load(tidyverse, readxl, knitr, kableExtra)
```

# Gaussian lineare Regression

![](images/caution.png){fig-align="center" width="50%"}

## Genutzte R Pakete für das Kapitel

Wir wollen folgende R Pakete in diesem Kapitel nutzen.

```{r echo = TRUE}
#| message: false
pacman::p_load(tidyverse, magrittr, conflicted, broom,
               see, performance)
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("mutate", "dplyr")
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", 
                "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
```

Am Ende des Kapitels findest du nochmal den gesamten R Code in einem Rutsch zum selber durchführen oder aber kopieren.

## Daten

Wir wollen uns erszmal mit einem einfachen Datenbeispiel beschäftigen. Wir brauchen dafür den Datensatz `flea_dog_cat_length_weight.xlsx`. In einer simplen linearen Regression schauen wir uns den Zusammenhang zwischen einem $y$ und einem $x_1$ an. Daher wählen wir aus dem Datensatz `flea_dog_cat_length_weight.xlsx` die beiden Spalten `jump_length` und `weight`. Wir wollen nun feststellen, ob es einen Zusammenhang zwischen der Sprungweite in \[cm\] und dem Flohgewicht in \[mg\] gibt. In dem Datensatz finden wir 400 Flöhe, wir wollen uns aber nur die ersten sieben Zeilen des Datensatzes zuerst anschauen.

```{r}
#| message: false

gaussian_tbl <- read_csv2("data/flea_dog_cat_length_weight.csv") %>%
  mutate(animal = as_factor(animal),
         sex = as_factor(sex))
```

In der @tbl-model-1 ist der Datensatz `gaussian_tbl` nochmal dargestellt.

```{r}
#| message: false
#| echo: false
#| tbl-cap: Datensatz mit mehreren Outcomes zu Flöhen auf verschiedenen Tierarten.
#| label: tbl-model-1

gaussian_raw_tbl <- gaussian_tbl %>% 
  mutate(animal = as.character(animal),
         sex = as.character(sex))
rbind(head(gaussian_raw_tbl),
      rep("...", times = ncol(gaussian_raw_tbl)),
      tail(gaussian_raw_tbl)) %>% 
  kable(align = "c", "pipe")

```

```{r}
gaussian_fit <- lm(jump_length ~ animal + sex + weight, data = gaussian_tbl)
```

```{r}
#| echo: true
#| message: false
#| label: fig-scatter-qual-04
#| fig-align: center
#| fig-height: 12
#| fig-width: 8
#| fig-cap: "Übersicht der Plots zu der Modellgüte aus der Funktion `check_model()`."
#| column: page

check_model(gaussian_fit, colors = cbbPalette[6:8])

```

```{r}
#| echo: true
#| message: false
#| label: fig-scatter-qual-resid
#| fig-align: center
#| fig-height: 4
#| fig-width: 4
#| fig-cap: "QQ-Plot der Residuen aus dem Modell `gaussian_fit`. Die Residuen müssen einer approximativen Normalverteilung folgen, sonst hat der Fit des Modelles nicht funktioniert."

ggplot(gaussian_fit, aes(sample = .resid)) + 
  stat_qq() + 
  stat_qq_line(color = "red") +
  theme_bw() 

```

@fig-stat-modeling-mult-01-1

@fig-stat-modeling-mult-01-2

@fig-stat-modeling-mult-01-3

```{r}
#| message: false
#| echo: false
#| fig-align: center
#| fig-height: 4
#| fig-width: 5
#| label: fig-stat-modeling-mult-01
#| fig-cap: "Darstellung des *counfounder* Effekts anhand des Zusammenhangs der Sprungweite in [cm] und dem Gewicht von Flöhen [mg]."
#| fig-subcap: 
#|   - "jump_length ~ weight"
#|   - "jump_length ~ weight + animal"
#|   - "jump_length ~ weight + animal + sex"
#| layout-nrow: 1
#| column: page

ggplot(gaussian_tbl, aes(x = weight, y = jump_length)) +
  geom_smooth(method = "lm", se = FALSE) +
  theme_bw() +
  geom_point() 

ggplot(gaussian_tbl, aes(x = weight, y = jump_length, color = animal)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_color_okabeito() +
  theme_bw() +
  geom_point() +
  labs(color  = "Tierart")

ggplot(gaussian_tbl, aes(x = weight, y = jump_length, color = animal, shape = sex)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_color_okabeito() +
  theme_bw() +
  geom_point() +
  labs(color  = "Tierart", shape = "Geschlecht")

```
