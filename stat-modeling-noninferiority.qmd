```{r echo = FALSE}
pacman::p_load(tidyverse, readxl, knitr, kableExtra)
```

# Äquivalenz oder Nichtunterlegenheit {#sec-noninf}

*Version vom `r format(Sys.time(), '%B %d, %Y um %H:%M:%S')`*

![](images/caution.png){fig-align="center" width="50%"}

[EFSA](https://www.efsa.europa.eu/de)

The limits for equivalence were set to $-\cfrac{1}{2}\log$ and $\cfrac{1}{2}\log$ equal to -0.5 and 0.5 because of the log transformation of the outcome.

[Allgemeine Methoden des Institut für Qualität und Wirtschaftlichkeit im Gesundheitswesen (IQWiG)](https://www.iqwig.de/ueber-uns/methoden/methodenpapier/)

"Umgekehrt erfordert auch die Interpretation nicht statistisch signifikanter Ergebnisse Aufmerksamkeit. Insbesondere wird ein solches Ergebnis nicht als Nachweis für das Nichtvorhandensein eines Effekts (Abwesenheit bzw. Äquivalenz) gewertet"

9.3.5 Nachweis der Gleichheit

@altman1995statistics

::: column-margin
*One does not simply do a non-inferiority trial*
:::

Wir müssen zwischen folgenden zwei grundlegenden Settings unterscheiden:

-   **Technische Gleichheit** wollen wir nachweisen, wenn wir zwei *technische* Messmethoden miteinander vergleichen. Wir messen also einmal ein Wachstum mit dem Verfahren A und einmal mit dem Verfahren B. In beiden Fällen erhalten wir dann eine kontinuierliche Zahl, wie zum Beispiel das Gewicht. Jetzt wollen wir wissen, ob das Verfahren A gleich dem Verfahren B das Wachstum gemessen hat.
-   **Medizinische- oder Behandlungsgleichheit** wollen wir nachweisen, wenn wir verschiedene Behandlungs*gruppen* haben. Diese Behandlungsgruppen vergleichen wir dann zu *einer* Kontrolle oder Standard und wollen nachweisen, dass unsere Behandlungsgruppen *gleich* zu dem Standard sind. Die Anwendung ist auch eher bei Tieren oder Menschen zu finden. Wir wollen hier also explizit keine technische Gleichheit nachweisen.

## Genutzte R Pakete für das Kapitel

Wir wollen folgende R Pakete in diesem Kapitel nutzen.

```{r echo = TRUE}
#| message: false
pacman::p_load(tidyverse, magrittr, broom, readxl,
               effectsize, multcompView, multcomp,
               janitor, see, parameters, 
               conflicted)
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("mutate", "dplyr")
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", 
                "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
```

Am Ende des Kapitels findest du nochmal den gesamten R Code in einem Rutsch zum selber durchführen oder aber kopieren.

## Daten

```{r}
set.seed(20230564)
drone_tbl <- tibble(drone_rgb = rnorm(317, 1000, 200),
                    pressure_stick = -1000 + 1.20 * drone_rgb + rnorm(length(drone_rgb), 100, 60)) %>% 
  filter(pressure_stick > 1)


ggplot(drone_tbl, aes(drone_rgb, pressure_stick)) +
  geom_point()

```

```{r}
cold_seed_raw_tbl <- read_excel("data/cold_seeds.xlsx") %>% 
  mutate_if(is.numeric, round, 2)
```

```{r}
#| message: false
#| echo: false
#| tbl-cap: Rohe Datentabelle mit den jeweiligen Lebenstagen (abk. *dol*) und der Anzahl an lebenden sowie toten Dodos an den entsprechenden Tagen.
#| label: tbl-surv-dodo-1

rbind(head(cold_seed_raw_tbl, n = 6),
      rep("...", times = ncol(cold_seed_raw_tbl)),
      tail(cold_seed_raw_tbl, n = 6)) %>% 
  kable(align = "c", "pipe")
```

```{r}
cold_seed_tbl <- cold_seed_raw_tbl %>%   
  clean_names %>% 
  filter(trt != 1) %>% 
  mutate(trt = as_factor(trt),
         log_cold = log(cold),
         log_non_cold = log(non_cold),
         trt = fct_recode(trt, ctrl = "2")) 
```

```{r}
#| echo: true
#| message: false
#| warning: false
#| label: fig-noninf-1
#| fig-align: center
#| fig-height: 6
#| fig-width: 6
#| fig-cap: "test"

cold_seed_tbl %>% 
  pivot_longer(cold:last_col(),
               names_to = "type",
               values_to = "growth") %>% 
  mutate(type = as_factor(type)) %>% 
  ggplot(aes(trt, growth, fill = trt)) +
  theme_bw() +
  geom_boxplot() +
  facet_wrap(~ type, scales = "free_y") +
  scale_fill_okabeito() +
  theme(legend.position = "none")
```

## ANOVA mit Effektschätzer

```{r}
#| message: false
lm_non_cold_fit <- lm(log_non_cold ~ trt, data = cold_seed_tbl)

lm_non_cold_fit %>% anova %>% model_parameters()
```

```{r}
#| message: false
lm_non_cold_fit %>% eta_squared()
```

```{r}
#| message: false
lm_cold_fit <- lm(log_cold ~ trt, data = cold_seed_tbl)

lm_cold_fit %>% anova %>% model_parameters()
```

```{r}
#| message: false
lm_cold_fit %>% eta_squared()
```

## Äquivalenztest

```{r}
res_non_cold <- equivalence_test(lm_non_cold_fit, 
                                 ci = 0.95,
                                 range = c(-0.5, 0.5))
```

```{r}
#| echo: true
#| message: false
#| warning: false
#| label: fig-noninf-2
#| fig-align: center
#| fig-height: 6
#| fig-width: 6
#| fig-cap: "test"

plot(res_non_cold) +
  theme_minimal()
```

```{r}
res_cold <- equivalence_test(lm_cold_fit, 
                             ci = 0.95,
                             range = c(-0.5, 0.5))
```

```{r}
#| echo: true
#| message: false
#| warning: false
#| label: fig-noninf-3
#| fig-align: center
#| fig-height: 6
#| fig-width: 6
#| fig-cap: "test"

plot(res_cold) +
  theme_minimal()
```

## Technische Äquivalenz

```{r}



```

## MSE

https://yardstick.tidymodels.org/reference/index.html

https://en.wikipedia.org/wiki/Mean_absolute_error

## nrMSE

$$
nRMSE = \cfrac{RMSE}{\bar{y}} = \cfrac{\sqrt{MSE}}{\bar{y}} = \cfrac{\sqrt{\cfrac{1}{N}\sum^N_{i=1}(y_i - \hat{y}_i)^2}}{\bar{y}}
$$

https://stats.stackexchange.com/questions/598437/how-to-interpret-r-squared-versus-nrmse-for-a-random-forest-model

## Links

https://www.bmj.com/content/311/7003/485

https://www.google.com/search?q=noninferiority+R&sxsrf=AJOqlzW7GmsZSD9QfcFTDil2ONGUUNudHw%3A1674985644154&ei=rEDWY4CKCeaSxc8PoO6D6Ag&ved=0ahUKEwiAkMviv-z8AhVmSfEDHSD3AI0Q4dUDCBA&uact=5&oq=noninferiority+R&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIICAAQgAQQywEyCAgAEIAEEMsBMggIABCABBDLATIICAAQFhAeEAoyBggAEBYQHjIGCAAQFhAeMgsIABAeEA0QDxDxBDILCAAQHhANEA8Q8QQyBggAEBYQHjIGCAAQFhAeOgUIABCABDoHCAAQgAQQCkoECEEYAEoECEYYAFAAWJoJYMUKaABwAXgAgAFZiAGEApIBATOYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp

https://cran.r-project.org/web/packages/PowerTOST/vignettes/NI.html
